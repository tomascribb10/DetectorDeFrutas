

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 14 10:55:23 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F628A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  008C                     	;# 
    88  008E                     	;# 
    89  0092                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009F                     	;# 
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  008C                     	;# 
   125  008E                     	;# 
   126  0092                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009F                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  008C                     	;# 
   162  008E                     	;# 
   163  0092                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009F                     	;# 
   171  001A                     _RCREG	set	26
   172  000C                     _PIR1bits	set	12
   173  0019                     _TXREG	set	25
   174  0018                     _RCSTAbits	set	24
   175  0086                     _TRISBbits	set	134
   176  0098                     _TXSTAbits	set	152
   177  0099                     _SPBRG	set	153
   178                           
   179                           	psect	strings
   180  0001                     __pstrings:
   181  0001                     stringtab:
   182  0001                     __stringtab:
   183                           
   184                           ;	String table - string pointers are 1 byte each
   185  0001  1BFF               	btfsc	btemp+1,7
   186  0002  280B               	ljmp	stringcode
   187  0003  1383               	bcf	3,7
   188  0004  187F               	btfsc	btemp+1,0
   189  0005  1783               	bsf	3,7
   190  0006  0800               	movf	0,w
   191  0007  0A84               	incf	4,f
   192  0008  1903               	skipnz
   193  0009  0AFF               	incf	btemp+1,f
   194  000A  0008               	return
   195  000B                     stringcode:
   196  000B                     stringdir:
   197  000B  3000               	movlw	high stringdir
   198  000C  008A               	movwf	10
   199  000D  0804               	movf	4,w
   200  000E  0A84               	incf	4,f
   201  000F  0782               	addwf	2,f
   202  0010                     __stringbase:
   203  0010  3400               	retlw	0
   204  0011                     __end_of__stringtab:
   205  0011                     STR_2:
   206  0011  340A               	retlw	10
   207  0012  340D               	retlw	13
   208  0013  3452               	retlw	82	;'R'
   209  0014  3465               	retlw	101	;'e'
   210  0015  3463               	retlw	99	;'c'
   211  0016  3465               	retlw	101	;'e'
   212  0017  3469               	retlw	105	;'i'
   213  0018  3476               	retlw	118	;'v'
   214  0019  3465               	retlw	101	;'e'
   215  001A  3464               	retlw	100	;'d'
   216  001B  3420               	retlw	32	;' '
   217  001C  3400               	retlw	0
   218  001D  3400               	retlw	0
   219  001E                     STR_3:
   220  001E  3420               	retlw	32	;' '
   221  001F  3462               	retlw	98	;'b'
   222  0020  3479               	retlw	121	;'y'
   223  0021  3474               	retlw	116	;'t'
   224  0022  3465               	retlw	101	;'e'
   225  0023  3473               	retlw	115	;'s'
   226  0024  343A               	retlw	58	;':'
   227  0025  3420               	retlw	32	;' '
   228  0026  3400               	retlw	0
   229  0027  3400               	retlw	0
   230  0028                     STR_4:
   231  0028  340A               	retlw	10
   232  0029  340D               	retlw	13
   233  002A  3400               	retlw	0
   234  002B  3400               	retlw	0
   235  002C                     STR_1:
   236  002C  343E               	retlw	62	;'>'
   237  002D  3420               	retlw	32	;' '
   238  002E  3400               	retlw	0
   239  002F  3400               	retlw	0
   240                           
   241                           	psect	cinit
   242  07FE                     start_initialization:	
   243                           ; #config settings
   244                           
   245  07FE                     __initialization:
   246  07FE                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07FE                     __end_of__initialization:
   250  07FE  0183               	clrf	3
   251  07FF  2E6C               	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:
   255  0070                     ?_UARTSendChar:
   256  0070                     ??_UARTSendChar:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_UARTDataReady:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_UARTDataReady:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_UARTReadChar:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_init:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_main:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?___lwdiv:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?___lwmod:	
   278                           ; 2 bytes @ 0x0
   279                           
   280  0070                     ?___lldiv:	
   281                           ; 2 bytes @ 0x0
   282                           
   283  0070                     UARTSendChar@c:	
   284                           ; 4 bytes @ 0x0
   285                           
   286  0070                     ___lwdiv@divisor:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ___lwmod@divisor:	
   290                           ; 2 bytes @ 0x0
   291                           
   292  0070                     ___lldiv@divisor:	
   293                           ; 2 bytes @ 0x0
   294                           
   295                           
   296                           ; 4 bytes @ 0x0
   297  0070                     	ds	1
   298  0071                     ?_UARTSendString:
   299  0071                     ??_UARTReadChar:	
   300                           ; 1 bytes @ 0x1
   301                           
   302  0071                     ?_UARTReadString:	
   303                           ; 1 bytes @ 0x1
   304                           
   305  0071                     UARTReadString@max_length:	
   306                           ; 1 bytes @ 0x1
   307                           
   308  0071                     UARTSendString@str:	
   309                           ; 1 bytes @ 0x1
   310                           
   311                           
   312                           ; 2 bytes @ 0x1
   313  0071                     	ds	1
   314  0072                     ??_UARTReadString:
   315  0072                     ___lwdiv@dividend:	
   316                           ; 1 bytes @ 0x2
   317                           
   318  0072                     ___lwmod@dividend:	
   319                           ; 2 bytes @ 0x2
   320                           
   321                           
   322                           ; 2 bytes @ 0x2
   323  0072                     	ds	1
   324  0073                     UARTSendString@max_length:
   325                           
   326                           ; 1 bytes @ 0x3
   327  0073                     	ds	1
   328  0074                     ??_UARTSendString:
   329  0074                     ??___lwdiv:	
   330                           ; 1 bytes @ 0x4
   331                           
   332  0074                     ??___lwmod:	
   333                           ; 1 bytes @ 0x4
   334                           
   335  0074                     UARTReadString@buf:	
   336                           ; 1 bytes @ 0x4
   337                           
   338  0074                     ___lldiv@dividend:	
   339                           ; 1 bytes @ 0x4
   340                           
   341                           
   342                           ; 4 bytes @ 0x4
   343  0074                     	ds	1
   344  0075                     UARTReadString@tmp:
   345  0075                     ___lwmod@counter:	
   346                           ; 1 bytes @ 0x5
   347                           
   348  0075                     ___lwdiv@quotient:	
   349                           ; 1 bytes @ 0x5
   350                           
   351                           
   352                           ; 2 bytes @ 0x5
   353  0075                     	ds	1
   354  0076                     UARTReadString@i:
   355                           
   356                           ; 1 bytes @ 0x6
   357  0076                     	ds	1
   358  0077                     ___lwdiv@counter:
   359  0077                     UARTSendString@i:	
   360                           ; 1 bytes @ 0x7
   361                           
   362                           
   363                           ; 2 bytes @ 0x7
   364  0077                     	ds	1
   365  0078                     ?_utoa:
   366  0078                     ??___lldiv:	
   367                           ; 1 bytes @ 0x8
   368                           
   369  0078                     utoa@val:	
   370                           ; 1 bytes @ 0x8
   371                           
   372                           
   373                           ; 2 bytes @ 0x8
   374  0078                     	ds	1
   375  0079                     ___lldiv@quotient:
   376                           
   377                           ; 4 bytes @ 0x9
   378  0079                     	ds	1
   379  007A                     utoa@base:
   380                           
   381                           ; 2 bytes @ 0xA
   382  007A                     	ds	2
   383  007C                     ??_utoa:
   384                           
   385                           ; 1 bytes @ 0xC
   386  007C                     	ds	1
   387  007D                     ??_itoa:
   388  007D                     ___lldiv@counter:	
   389                           ; 1 bytes @ 0xD
   390                           
   391                           
   392                           ; 1 bytes @ 0xD
   393  007D                     	ds	1
   394  007E                     ??_init:
   395                           
   396                           	psect	cstackBANK0
   397  0020                     __pcstackBANK0:	
   398                           ; 1 bytes @ 0xE
   399                           
   400  0020                     ?_UARTInit:
   401  0020                     utoa@v:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0020                     UARTInit@baud_rate:	
   405                           ; 2 bytes @ 0x0
   406                           
   407                           
   408                           ; 4 bytes @ 0x0
   409  0020                     	ds	2
   410  0022                     utoa@c:
   411                           
   412                           ; 1 bytes @ 0x2
   413  0022                     	ds	1
   414  0023                     utoa@buf:
   415                           
   416                           ; 1 bytes @ 0x3
   417  0023                     	ds	1
   418  0024                     ?_itoa:
   419  0024                     UARTInit@BRGH:	
   420                           ; 1 bytes @ 0x4
   421                           
   422  0024                     itoa@val:	
   423                           ; 1 bytes @ 0x4
   424                           
   425                           
   426                           ; 2 bytes @ 0x4
   427  0024                     	ds	1
   428  0025                     ??_UARTInit:
   429                           
   430                           ; 1 bytes @ 0x5
   431  0025                     	ds	1
   432  0026                     itoa@base:
   433                           
   434                           ; 2 bytes @ 0x6
   435  0026                     	ds	2
   436  0028                     itoa@buf:
   437                           
   438                           ; 1 bytes @ 0x8
   439  0028                     	ds	1
   440  0029                     ??_main:
   441                           
   442                           ; 1 bytes @ 0x9
   443  0029                     	ds	3
   444  002C                     main@readBuf:
   445                           
   446                           ; 16 bytes @ 0xC
   447  002C                     	ds	16
   448  003C                     main@tmpBuf:
   449                           
   450                           ; 8 bytes @ 0x1C
   451  003C                     	ds	8
   452  0044                     main@nRead:
   453                           
   454                           ; 2 bytes @ 0x24
   455  0044                     	ds	2
   456                           
   457                           	psect	maintext
   458  066C                     __pmaintext:	
   459 ;;
   460 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   461 ;;
   462 ;; *************** function _main *****************
   463 ;; Defined at:
   464 ;;		line 55 in file "main.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  readBuf        16   12[BANK0 ] PTR unsigned char [16]
   469 ;;  tmpBuf          8   28[BANK0 ] PTR unsigned char [8]
   470 ;;  nRead           2   36[BANK0 ] int 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : B00/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   480 ;;      Params:         0       0       0       0
   481 ;;      Locals:         0      26       0       0
   482 ;;      Temps:          0       3       0       0
   483 ;;      Totals:         0      29       0       0
   484 ;;Total ram usage:       29 bytes
   485 ;; Hardware stack levels required when called: 3
   486 ;; This function calls:
   487 ;;		_UARTReadString
   488 ;;		_UARTSendString
   489 ;;		_init
   490 ;;		_itoa
   491 ;; This function is called by:
   492 ;;		Startup code after reset
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496  066C                     _main:	
   497                           ;psect for function _main
   498                           
   499  066C                     l1098:	
   500                           ;incstack = 0
   501                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   502                           
   503  066C                     l1100:
   504                           
   505                           ;main.c: 59:     init();
   506  066C  2534               	fcall	_init
   507  066D                     l1102:
   508                           
   509                           ;main.c: 63:         UARTSendString("> \0", 16);
   510  066D  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   511  066E  00F1               	movwf	UARTSendString@str
   512  066F  3080               	movlw	128
   513  0670  00F2               	movwf	UARTSendString@str+1
   514  0671  3010               	movlw	16
   515  0672  1283               	bcf	3,5	;RP0=0, select bank0
   516  0673  1303               	bcf	3,6	;RP1=0, select bank0
   517  0674  00A9               	movwf	??_main
   518  0675  0829               	movf	??_main,w
   519  0676  00F3               	movwf	UARTSendString@max_length
   520  0677  2627               	fcall	_UARTSendString
   521  0678                     l1104:
   522                           
   523                           ;main.c: 65:         nRead = UARTReadString(readBuf, 16);
   524  0678  3010               	movlw	16
   525  0679  1283               	bcf	3,5	;RP0=0, select bank0
   526  067A  1303               	bcf	3,6	;RP1=0, select bank0
   527  067B  00A9               	movwf	??_main
   528  067C  0829               	movf	??_main,w
   529  067D  00F1               	movwf	UARTReadString@max_length
   530  067E  302C               	movlw	(low (main@readBuf| 0))& (0+255)
   531  067F  25A1               	fcall	_UARTReadString
   532  0680  1283               	bcf	3,5	;RP0=0, select bank0
   533  0681  1303               	bcf	3,6	;RP1=0, select bank0
   534  0682  00AA               	movwf	??_main+1
   535  0683  01AB               	clrf	??_main+2
   536  0684  082A               	movf	??_main+1,w
   537  0685  00C4               	movwf	main@nRead
   538  0686  082B               	movf	??_main+2,w
   539  0687  00C5               	movwf	main@nRead+1
   540  0688                     l1106:
   541                           
   542                           ;main.c: 67:         itoa(tmpBuf, nRead, 10);
   543  0688  0845               	movf	main@nRead+1,w
   544  0689  00A5               	movwf	itoa@val+1
   545  068A  0844               	movf	main@nRead,w
   546  068B  00A4               	movwf	itoa@val
   547  068C  300A               	movlw	10
   548  068D  00A6               	movwf	itoa@base
   549  068E  3000               	movlw	0
   550  068F  00A7               	movwf	itoa@base+1
   551  0690  303C               	movlw	(low (main@tmpBuf| 0))& (0+255)
   552  0691  2545               	fcall	_itoa
   553  0692                     l1108:
   554                           
   555                           ;main.c: 68:         UARTSendString("\n\rReceived \0", 16);
   556  0692  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   557  0693  00F1               	movwf	UARTSendString@str
   558  0694  3080               	movlw	128
   559  0695  00F2               	movwf	UARTSendString@str+1
   560  0696  3010               	movlw	16
   561  0697  1283               	bcf	3,5	;RP0=0, select bank0
   562  0698  1303               	bcf	3,6	;RP1=0, select bank0
   563  0699  00A9               	movwf	??_main
   564  069A  0829               	movf	??_main,w
   565  069B  00F3               	movwf	UARTSendString@max_length
   566  069C  2627               	fcall	_UARTSendString
   567  069D                     l1110:
   568                           
   569                           ;main.c: 69:         UARTSendString(tmpBuf, 16);
   570  069D  303C               	movlw	(low (main@tmpBuf| 0))& (0+255)
   571  069E  00F1               	movwf	UARTSendString@str
   572  069F  3000               	movlw	0
   573  06A0  00F2               	movwf	UARTSendString@str+1
   574  06A1  3010               	movlw	16
   575  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   576  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   577  06A4  00A9               	movwf	??_main
   578  06A5  0829               	movf	??_main,w
   579  06A6  00F3               	movwf	UARTSendString@max_length
   580  06A7  2627               	fcall	_UARTSendString
   581  06A8                     l1112:
   582                           
   583                           ;main.c: 70:         UARTSendString(" bytes: \0", 16);
   584  06A8  300E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   585  06A9  00F1               	movwf	UARTSendString@str
   586  06AA  3080               	movlw	128
   587  06AB  00F2               	movwf	UARTSendString@str+1
   588  06AC  3010               	movlw	16
   589  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   590  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   591  06AF  00A9               	movwf	??_main
   592  06B0  0829               	movf	??_main,w
   593  06B1  00F3               	movwf	UARTSendString@max_length
   594  06B2  2627               	fcall	_UARTSendString
   595  06B3                     l1114:
   596                           
   597                           ;main.c: 72:         UARTSendString(readBuf, nRead);
   598  06B3  302C               	movlw	(low (main@readBuf| 0))& (0+255)
   599  06B4  00F1               	movwf	UARTSendString@str
   600  06B5  3000               	movlw	0
   601  06B6  00F2               	movwf	UARTSendString@str+1
   602  06B7  1283               	bcf	3,5	;RP0=0, select bank0
   603  06B8  1303               	bcf	3,6	;RP1=0, select bank0
   604  06B9  0844               	movf	main@nRead,w
   605  06BA  00A9               	movwf	??_main
   606  06BB  0829               	movf	??_main,w
   607  06BC  00F3               	movwf	UARTSendString@max_length
   608  06BD  2627               	fcall	_UARTSendString
   609  06BE                     l1116:
   610                           
   611                           ;main.c: 73:         UARTSendString("\n\r\0", 16);
   612  06BE  3018               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   613  06BF  00F1               	movwf	UARTSendString@str
   614  06C0  3080               	movlw	128
   615  06C1  00F2               	movwf	UARTSendString@str+1
   616  06C2  3010               	movlw	16
   617  06C3  1283               	bcf	3,5	;RP0=0, select bank0
   618  06C4  1303               	bcf	3,6	;RP1=0, select bank0
   619  06C5  00A9               	movwf	??_main
   620  06C6  0829               	movf	??_main,w
   621  06C7  00F3               	movwf	UARTSendString@max_length
   622  06C8  2627               	fcall	_UARTSendString
   623  06C9  2E6D               	goto	l1102
   624  06CA  2800               	ljmp	start
   625  06CB                     __end_of_main:
   626                           
   627                           	psect	text1
   628  0545                     __ptext1:	
   629 ;; *************** function _itoa *****************
   630 ;; Defined at:
   631 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  buf             1    wreg     PTR unsigned char 
   634 ;;		 -> main@tmpBuf(8), 
   635 ;;  val             2    4[BANK0 ] int 
   636 ;;  base            2    6[BANK0 ] int 
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  buf             1    8[BANK0 ] PTR unsigned char 
   639 ;;		 -> main@tmpBuf(8), 
   640 ;;  cp              1    0        PTR unsigned char 
   641 ;;		 -> main@tmpBuf(8), 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      PTR unsigned char 
   644 ;; Registers used:
   645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   651 ;;      Params:         0       4       0       0
   652 ;;      Locals:         0       1       0       0
   653 ;;      Temps:          1       0       0       0
   654 ;;      Totals:         1       5       0       0
   655 ;;Total ram usage:        6 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 2
   658 ;; This function calls:
   659 ;;		_utoa
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665  0545                     _itoa:	
   666                           ;psect for function _itoa
   667                           
   668                           
   669                           ;incstack = 0
   670                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   671                           ;itoa@buf stored from wreg
   672  0545  1283               	bcf	3,5	;RP0=0, select bank0
   673  0546  1303               	bcf	3,6	;RP1=0, select bank0
   674  0547  00A8               	movwf	itoa@buf
   675  0548                     l1084:
   676  0548                     l1086:
   677  0548  1FA5               	btfss	itoa@val+1,7
   678  0549  2D4B               	goto	u741
   679  054A  2D4C               	goto	u740
   680  054B                     u741:
   681  054B  2D5C               	goto	l1094
   682  054C                     u740:
   683  054C                     l1088:
   684  054C  302D               	movlw	45
   685  054D  00FD               	movwf	??_itoa
   686  054E  0828               	movf	itoa@buf,w
   687  054F  0084               	movwf	4
   688  0550  087D               	movf	??_itoa,w
   689  0551  1383               	bcf	3,7	;select IRP bank0
   690  0552  0080               	movwf	0
   691  0553                     l1090:
   692  0553  3001               	movlw	1
   693  0554  00FD               	movwf	??_itoa
   694  0555  087D               	movf	??_itoa,w
   695  0556  07A8               	addwf	itoa@buf,f
   696  0557                     l1092:
   697  0557  09A4               	comf	itoa@val,f
   698  0558  09A5               	comf	itoa@val+1,f
   699  0559  0AA4               	incf	itoa@val,f
   700  055A  1903               	skipnz
   701  055B  0AA5               	incf	itoa@val+1,f
   702  055C                     l1094:
   703  055C  0825               	movf	itoa@val+1,w
   704  055D  00F9               	movwf	utoa@val+1
   705  055E  0824               	movf	itoa@val,w
   706  055F  00F8               	movwf	utoa@val
   707  0560  0827               	movf	itoa@base+1,w
   708  0561  00FB               	movwf	utoa@base+1
   709  0562  0826               	movf	itoa@base,w
   710  0563  00FA               	movwf	utoa@base
   711  0564  0828               	movf	itoa@buf,w
   712  0565  2731               	fcall	_utoa
   713  0566                     l612:
   714  0566  0008               	return
   715  0567                     __end_of_itoa:
   716                           
   717                           	psect	text2
   718  0731                     __ptext2:	
   719 ;; *************** function _utoa *****************
   720 ;; Defined at:
   721 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  buf             1    wreg     PTR unsigned char 
   724 ;;		 -> main@tmpBuf(8), 
   725 ;;  val             2    8[COMMON] unsigned int 
   726 ;;  base            2   10[COMMON] int 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;  buf             1    3[BANK0 ] PTR unsigned char 
   729 ;;		 -> main@tmpBuf(8), 
   730 ;;  v               2    0[BANK0 ] unsigned int 
   731 ;;  c               1    2[BANK0 ] unsigned char 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      PTR unsigned char 
   734 ;; Registers used:
   735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   741 ;;      Params:         4       0       0       0
   742 ;;      Locals:         0       4       0       0
   743 ;;      Temps:          1       0       0       0
   744 ;;      Totals:         5       4       0       0
   745 ;;Total ram usage:        9 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; Hardware stack levels required when called: 1
   748 ;; This function calls:
   749 ;;		___lwdiv
   750 ;;		___lwmod
   751 ;; This function is called by:
   752 ;;		_itoa
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756  0731                     _utoa:	
   757                           ;psect for function _utoa
   758                           
   759                           
   760                           ;incstack = 0
   761                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   762                           ;utoa@buf stored from wreg
   763  0731  1283               	bcf	3,5	;RP0=0, select bank0
   764  0732  1303               	bcf	3,6	;RP1=0, select bank0
   765  0733  00A3               	movwf	utoa@buf
   766  0734                     l1016:
   767  0734  0879               	movf	utoa@val+1,w
   768  0735  00A1               	movwf	utoa@v+1
   769  0736  0878               	movf	utoa@val,w
   770  0737  00A0               	movwf	utoa@v
   771  0738                     l1018:
   772  0738  087B               	movf	utoa@base+1,w
   773  0739  00F1               	movwf	___lwdiv@divisor+1
   774  073A  087A               	movf	utoa@base,w
   775  073B  00F0               	movwf	___lwdiv@divisor
   776  073C  0821               	movf	utoa@v+1,w
   777  073D  00F3               	movwf	___lwdiv@dividend+1
   778  073E  0820               	movf	utoa@v,w
   779  073F  00F2               	movwf	___lwdiv@dividend
   780  0740  25E3               	fcall	___lwdiv
   781  0741  0871               	movf	?___lwdiv+1,w
   782  0742  1283               	bcf	3,5	;RP0=0, select bank0
   783  0743  1303               	bcf	3,6	;RP1=0, select bank0
   784  0744  00A1               	movwf	utoa@v+1
   785  0745  0870               	movf	?___lwdiv,w
   786  0746  00A0               	movwf	utoa@v
   787  0747                     l1020:
   788  0747  3001               	movlw	1
   789  0748  00FC               	movwf	??_utoa
   790  0749  087C               	movf	??_utoa,w
   791  074A  07A3               	addwf	utoa@buf,f
   792  074B                     l1022:
   793  074B  0820               	movf	utoa@v,w
   794  074C  0421               	iorwf	utoa@v+1,w
   795  074D  1D03               	btfss	3,2
   796  074E  2F50               	goto	u631
   797  074F  2F51               	goto	u630
   798  0750                     u631:
   799  0750  2F38               	goto	l1018
   800  0751                     u630:
   801  0751                     l1024:
   802  0751  0823               	movf	utoa@buf,w
   803  0752  0084               	movwf	4
   804  0753  1383               	bcf	3,7	;select IRP bank0
   805  0754  0180               	clrf	0
   806  0755                     l1026:
   807  0755  3001               	movlw	1
   808  0756  02A3               	subwf	utoa@buf,f
   809  0757                     l1028:
   810  0757  087B               	movf	utoa@base+1,w
   811  0758  00F1               	movwf	___lwmod@divisor+1
   812  0759  087A               	movf	utoa@base,w
   813  075A  00F0               	movwf	___lwmod@divisor
   814  075B  0879               	movf	utoa@val+1,w
   815  075C  00F3               	movwf	___lwmod@dividend+1
   816  075D  0878               	movf	utoa@val,w
   817  075E  00F2               	movwf	___lwmod@dividend
   818  075F  2567               	fcall	___lwmod
   819  0760  0870               	movf	?___lwmod,w
   820  0761  00FC               	movwf	??_utoa
   821  0762  087C               	movf	??_utoa,w
   822  0763  1283               	bcf	3,5	;RP0=0, select bank0
   823  0764  1303               	bcf	3,6	;RP1=0, select bank0
   824  0765  00A2               	movwf	utoa@c
   825  0766                     l1030:
   826  0766  087B               	movf	utoa@base+1,w
   827  0767  00F1               	movwf	___lwdiv@divisor+1
   828  0768  087A               	movf	utoa@base,w
   829  0769  00F0               	movwf	___lwdiv@divisor
   830  076A  0879               	movf	utoa@val+1,w
   831  076B  00F3               	movwf	___lwdiv@dividend+1
   832  076C  0878               	movf	utoa@val,w
   833  076D  00F2               	movwf	___lwdiv@dividend
   834  076E  25E3               	fcall	___lwdiv
   835  076F  0871               	movf	?___lwdiv+1,w
   836  0770  00F9               	movwf	utoa@val+1
   837  0771  0870               	movf	?___lwdiv,w
   838  0772  00F8               	movwf	utoa@val
   839  0773                     l1032:
   840  0773  300A               	movlw	10
   841  0774  1283               	bcf	3,5	;RP0=0, select bank0
   842  0775  1303               	bcf	3,6	;RP1=0, select bank0
   843  0776  0222               	subwf	utoa@c,w
   844  0777  1C03               	skipc
   845  0778  2F7A               	goto	u641
   846  0779  2F7B               	goto	u640
   847  077A                     u641:
   848  077A  2F7F               	goto	l618
   849  077B                     u640:
   850  077B                     l1034:
   851  077B  3007               	movlw	7
   852  077C  00FC               	movwf	??_utoa
   853  077D  087C               	movf	??_utoa,w
   854  077E  07A2               	addwf	utoa@c,f
   855  077F                     l618:
   856  077F  3030               	movlw	48
   857  0780  00FC               	movwf	??_utoa
   858  0781  087C               	movf	??_utoa,w
   859  0782  07A2               	addwf	utoa@c,f
   860  0783                     l1036:
   861  0783  0822               	movf	utoa@c,w
   862  0784  00FC               	movwf	??_utoa
   863  0785  0823               	movf	utoa@buf,w
   864  0786  0084               	movwf	4
   865  0787  087C               	movf	??_utoa,w
   866  0788  1383               	bcf	3,7	;select IRP bank0
   867  0789  0080               	movwf	0
   868  078A                     l1038:
   869  078A  3001               	movlw	1
   870  078B  02A3               	subwf	utoa@buf,f
   871  078C                     l1040:
   872  078C  0878               	movf	utoa@val,w
   873  078D  0479               	iorwf	utoa@val+1,w
   874  078E  1D03               	btfss	3,2
   875  078F  2F91               	goto	u651
   876  0790  2F92               	goto	u650
   877  0791                     u651:
   878  0791  2F57               	goto	l1028
   879  0792                     u650:
   880  0792                     l1042:
   881                           
   882                           ;	Return value of _utoa is never used
   883  0792  3001               	movlw	1
   884  0793  00FC               	movwf	??_utoa
   885  0794  087C               	movf	??_utoa,w
   886  0795  07A3               	addwf	utoa@buf,f
   887  0796                     l620:
   888  0796  0008               	return
   889  0797                     __end_of_utoa:
   890                           
   891                           	psect	text3
   892  0567                     __ptext3:	
   893 ;; *************** function ___lwmod *****************
   894 ;; Defined at:
   895 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  divisor         2    0[COMMON] unsigned int 
   898 ;;  dividend        2    2[COMMON] unsigned int 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  counter         1    5[COMMON] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  2    0[COMMON] unsigned int 
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   910 ;;      Params:         4       0       0       0
   911 ;;      Locals:         1       0       0       0
   912 ;;      Temps:          1       0       0       0
   913 ;;      Totals:         6       0       0       0
   914 ;;Total ram usage:        6 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; This function calls:
   917 ;;		Nothing
   918 ;; This function is called by:
   919 ;;		_utoa
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923  0567                     ___lwmod:	
   924                           ;psect for function ___lwmod
   925                           
   926  0567                     l952:	
   927                           ;incstack = 0
   928                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   929                           
   930  0567  0870               	movf	___lwmod@divisor,w
   931  0568  0471               	iorwf	___lwmod@divisor+1,w
   932  0569  1903               	btfsc	3,2
   933  056A  2D6C               	goto	u521
   934  056B  2D6D               	goto	u520
   935  056C                     u521:
   936  056C  2D9C               	goto	l970
   937  056D                     u520:
   938  056D                     l954:
   939  056D  01F5               	clrf	___lwmod@counter
   940  056E  0AF5               	incf	___lwmod@counter,f
   941  056F  2D7B               	goto	l960
   942  0570                     l956:
   943  0570  3001               	movlw	1
   944  0571                     u535:
   945  0571  1003               	clrc
   946  0572  0DF0               	rlf	___lwmod@divisor,f
   947  0573  0DF1               	rlf	___lwmod@divisor+1,f
   948  0574  3EFF               	addlw	-1
   949  0575  1D03               	skipz
   950  0576  2D71               	goto	u535
   951  0577                     l958:
   952  0577  3001               	movlw	1
   953  0578  00F4               	movwf	??___lwmod
   954  0579  0874               	movf	??___lwmod,w
   955  057A  07F5               	addwf	___lwmod@counter,f
   956  057B                     l960:
   957  057B  1FF1               	btfss	___lwmod@divisor+1,7
   958  057C  2D7E               	goto	u541
   959  057D  2D7F               	goto	u540
   960  057E                     u541:
   961  057E  2D70               	goto	l956
   962  057F                     u540:
   963  057F                     l962:
   964  057F  0871               	movf	___lwmod@divisor+1,w
   965  0580  0273               	subwf	___lwmod@dividend+1,w
   966  0581  1D03               	skipz
   967  0582  2D85               	goto	u555
   968  0583  0870               	movf	___lwmod@divisor,w
   969  0584  0272               	subwf	___lwmod@dividend,w
   970  0585                     u555:
   971  0585  1C03               	skipc
   972  0586  2D88               	goto	u551
   973  0587  2D89               	goto	u550
   974  0588                     u551:
   975  0588  2D8F               	goto	l966
   976  0589                     u550:
   977  0589                     l964:
   978  0589  0870               	movf	___lwmod@divisor,w
   979  058A  02F2               	subwf	___lwmod@dividend,f
   980  058B  0871               	movf	___lwmod@divisor+1,w
   981  058C  1C03               	skipc
   982  058D  03F3               	decf	___lwmod@dividend+1,f
   983  058E  02F3               	subwf	___lwmod@dividend+1,f
   984  058F                     l966:
   985  058F  3001               	movlw	1
   986  0590                     u565:
   987  0590  1003               	clrc
   988  0591  0CF1               	rrf	___lwmod@divisor+1,f
   989  0592  0CF0               	rrf	___lwmod@divisor,f
   990  0593  3EFF               	addlw	-1
   991  0594  1D03               	skipz
   992  0595  2D90               	goto	u565
   993  0596                     l968:
   994  0596  3001               	movlw	1
   995  0597  02F5               	subwf	___lwmod@counter,f
   996  0598  1D03               	btfss	3,2
   997  0599  2D9B               	goto	u571
   998  059A  2D9C               	goto	u570
   999  059B                     u571:
  1000  059B  2D7F               	goto	l962
  1001  059C                     u570:
  1002  059C                     l970:
  1003  059C  0873               	movf	___lwmod@dividend+1,w
  1004  059D  00F1               	movwf	?___lwmod+1
  1005  059E  0872               	movf	___lwmod@dividend,w
  1006  059F  00F0               	movwf	?___lwmod
  1007  05A0                     l440:
  1008  05A0  0008               	return
  1009  05A1                     __end_of___lwmod:
  1010                           
  1011                           	psect	text4
  1012  05E3                     __ptext4:	
  1013 ;; *************** function ___lwdiv *****************
  1014 ;; Defined at:
  1015 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  divisor         2    0[COMMON] unsigned int 
  1018 ;;  dividend        2    2[COMMON] unsigned int 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  quotient        2    5[COMMON] unsigned int 
  1021 ;;  counter         1    7[COMMON] unsigned char 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  2    0[COMMON] unsigned int 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1031 ;;      Params:         4       0       0       0
  1032 ;;      Locals:         3       0       0       0
  1033 ;;      Temps:          1       0       0       0
  1034 ;;      Totals:         8       0       0       0
  1035 ;;Total ram usage:        8 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_utoa
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044  05E3                     ___lwdiv:	
  1045                           ;psect for function ___lwdiv
  1046                           
  1047  05E3                     l926:	
  1048                           ;incstack = 0
  1049                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1050                           
  1051  05E3  01F5               	clrf	___lwdiv@quotient
  1052  05E4  01F6               	clrf	___lwdiv@quotient+1
  1053  05E5                     l928:
  1054  05E5  0870               	movf	___lwdiv@divisor,w
  1055  05E6  0471               	iorwf	___lwdiv@divisor+1,w
  1056  05E7  1903               	btfsc	3,2
  1057  05E8  2DEA               	goto	u451
  1058  05E9  2DEB               	goto	u450
  1059  05EA                     u451:
  1060  05EA  2E22               	goto	l948
  1061  05EB                     u450:
  1062  05EB                     l930:
  1063  05EB  01F7               	clrf	___lwdiv@counter
  1064  05EC  0AF7               	incf	___lwdiv@counter,f
  1065  05ED  2DF9               	goto	l936
  1066  05EE                     l932:
  1067  05EE  3001               	movlw	1
  1068  05EF                     u465:
  1069  05EF  1003               	clrc
  1070  05F0  0DF0               	rlf	___lwdiv@divisor,f
  1071  05F1  0DF1               	rlf	___lwdiv@divisor+1,f
  1072  05F2  3EFF               	addlw	-1
  1073  05F3  1D03               	skipz
  1074  05F4  2DEF               	goto	u465
  1075  05F5                     l934:
  1076  05F5  3001               	movlw	1
  1077  05F6  00F4               	movwf	??___lwdiv
  1078  05F7  0874               	movf	??___lwdiv,w
  1079  05F8  07F7               	addwf	___lwdiv@counter,f
  1080  05F9                     l936:
  1081  05F9  1FF1               	btfss	___lwdiv@divisor+1,7
  1082  05FA  2DFC               	goto	u471
  1083  05FB  2DFD               	goto	u470
  1084  05FC                     u471:
  1085  05FC  2DEE               	goto	l932
  1086  05FD                     u470:
  1087  05FD                     l938:
  1088  05FD  3001               	movlw	1
  1089  05FE                     u485:
  1090  05FE  1003               	clrc
  1091  05FF  0DF5               	rlf	___lwdiv@quotient,f
  1092  0600  0DF6               	rlf	___lwdiv@quotient+1,f
  1093  0601  3EFF               	addlw	-1
  1094  0602  1D03               	skipz
  1095  0603  2DFE               	goto	u485
  1096  0604  0871               	movf	___lwdiv@divisor+1,w
  1097  0605  0273               	subwf	___lwdiv@dividend+1,w
  1098  0606  1D03               	skipz
  1099  0607  2E0A               	goto	u495
  1100  0608  0870               	movf	___lwdiv@divisor,w
  1101  0609  0272               	subwf	___lwdiv@dividend,w
  1102  060A                     u495:
  1103  060A  1C03               	skipc
  1104  060B  2E0D               	goto	u491
  1105  060C  2E0E               	goto	u490
  1106  060D                     u491:
  1107  060D  2E15               	goto	l944
  1108  060E                     u490:
  1109  060E                     l940:
  1110  060E  0870               	movf	___lwdiv@divisor,w
  1111  060F  02F2               	subwf	___lwdiv@dividend,f
  1112  0610  0871               	movf	___lwdiv@divisor+1,w
  1113  0611  1C03               	skipc
  1114  0612  03F3               	decf	___lwdiv@dividend+1,f
  1115  0613  02F3               	subwf	___lwdiv@dividend+1,f
  1116  0614                     l942:
  1117  0614  1475               	bsf	___lwdiv@quotient,0
  1118  0615                     l944:
  1119  0615  3001               	movlw	1
  1120  0616                     u505:
  1121  0616  1003               	clrc
  1122  0617  0CF1               	rrf	___lwdiv@divisor+1,f
  1123  0618  0CF0               	rrf	___lwdiv@divisor,f
  1124  0619  3EFF               	addlw	-1
  1125  061A  1D03               	skipz
  1126  061B  2E16               	goto	u505
  1127  061C                     l946:
  1128  061C  3001               	movlw	1
  1129  061D  02F7               	subwf	___lwdiv@counter,f
  1130  061E  1D03               	btfss	3,2
  1131  061F  2E21               	goto	u511
  1132  0620  2E22               	goto	u510
  1133  0621                     u511:
  1134  0621  2DFD               	goto	l938
  1135  0622                     u510:
  1136  0622                     l948:
  1137  0622  0876               	movf	___lwdiv@quotient+1,w
  1138  0623  00F1               	movwf	?___lwdiv+1
  1139  0624  0875               	movf	___lwdiv@quotient,w
  1140  0625  00F0               	movwf	?___lwdiv
  1141  0626                     l430:
  1142  0626  0008               	return
  1143  0627                     __end_of___lwdiv:
  1144                           
  1145                           	psect	text5
  1146  0534                     __ptext5:	
  1147 ;; *************** function _init *****************
  1148 ;; Defined at:
  1149 ;;		line 41 in file "main.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0, pclath, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1163 ;;      Params:         0       0       0       0
  1164 ;;      Locals:         0       0       0       0
  1165 ;;      Temps:          0       0       0       0
  1166 ;;      Totals:         0       0       0       0
  1167 ;;Total ram usage:        0 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; Hardware stack levels required when called: 2
  1170 ;; This function calls:
  1171 ;;		_UARTInit
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177  0534                     _init:	
  1178                           ;psect for function _init
  1179                           
  1180  0534                     l1080:	
  1181                           ;incstack = 0
  1182                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1183                           
  1184                           
  1185                           ;main.c: 50:     TRISBbits.TRISB1 = 0;
  1186  0534  1683               	bsf	3,5	;RP0=1, select bank1
  1187  0535  1303               	bcf	3,6	;RP1=0, select bank1
  1188  0536  1086               	bcf	6,1	;volatile
  1189  0537                     l1082:
  1190                           
  1191                           ;main.c: 52:     UARTInit(9600, 1);
  1192  0537  3000               	movlw	0
  1193  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1195  053A  00A3               	movwf	UARTInit@baud_rate+3
  1196  053B  3000               	movlw	0
  1197  053C  00A2               	movwf	UARTInit@baud_rate+2
  1198  053D  3025               	movlw	37
  1199  053E  00A1               	movwf	UARTInit@baud_rate+1
  1200  053F  3080               	movlw	128
  1201  0540  00A0               	movwf	UARTInit@baud_rate
  1202  0541  01A4               	clrf	UARTInit@BRGH
  1203  0542  0AA4               	incf	UARTInit@BRGH,f
  1204  0543  2797               	fcall	_UARTInit
  1205  0544                     l64:
  1206  0544  0008               	return
  1207  0545                     __end_of_init:
  1208                           
  1209                           	psect	text6
  1210  0797                     __ptext6:	
  1211 ;; *************** function _UARTInit *****************
  1212 ;; Defined at:
  1213 ;;		line 15 in file "UART.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
  1216 ;;  BRGH            1    4[BANK0 ] const unsigned char 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, pclath, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1228 ;;      Params:         0       5       0       0
  1229 ;;      Locals:         0       0       0       0
  1230 ;;      Temps:          0       4       0       0
  1231 ;;      Totals:         0       9       0       0
  1232 ;;Total ram usage:        9 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 1
  1235 ;; This function calls:
  1236 ;;		___lldiv
  1237 ;; This function is called by:
  1238 ;;		_init
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242  0797                     _UARTInit:	
  1243                           ;psect for function _UARTInit
  1244                           
  1245  0797                     l974:	
  1246                           ;incstack = 0
  1247                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  1248                           
  1249                           
  1250                           ;UART.c: 17:     if (BRGH == 0) {
  1251  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1252  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0799  0824               	movf	UARTInit@BRGH,w
  1254  079A  1D03               	btfss	3,2
  1255  079B  2F9D               	goto	u581
  1256  079C  2F9E               	goto	u580
  1257  079D                     u581:
  1258  079D  2FC7               	goto	l980
  1259  079E                     u580:
  1260  079E                     l976:
  1261                           
  1262                           ;UART.c: 18:         SPBRG = 4000000/(64*baud_rate) - 1;
  1263  079E  0820               	movf	UARTInit@baud_rate,w
  1264  079F  00A5               	movwf	??_UARTInit
  1265  07A0  0821               	movf	UARTInit@baud_rate+1,w
  1266  07A1  00A6               	movwf	??_UARTInit+1
  1267  07A2  0822               	movf	UARTInit@baud_rate+2,w
  1268  07A3  00A7               	movwf	??_UARTInit+2
  1269  07A4  0823               	movf	UARTInit@baud_rate+3,w
  1270  07A5  00A8               	movwf	??_UARTInit+3
  1271  07A6  3006               	movlw	6
  1272  07A7                     u595:
  1273  07A7  1003               	clrc
  1274  07A8  0DA5               	rlf	??_UARTInit,f
  1275  07A9  0DA6               	rlf	??_UARTInit+1,f
  1276  07AA  0DA7               	rlf	??_UARTInit+2,f
  1277  07AB  0DA8               	rlf	??_UARTInit+3,f
  1278  07AC                     u590:
  1279  07AC  3EFF               	addlw	-1
  1280  07AD  1D03               	skipz
  1281  07AE  2FA7               	goto	u595
  1282  07AF  0828               	movf	??_UARTInit+3,w
  1283  07B0  00F3               	movwf	___lldiv@divisor+3
  1284  07B1  0827               	movf	??_UARTInit+2,w
  1285  07B2  00F2               	movwf	___lldiv@divisor+2
  1286  07B3  0826               	movf	??_UARTInit+1,w
  1287  07B4  00F1               	movwf	___lldiv@divisor+1
  1288  07B5  0825               	movf	??_UARTInit,w
  1289  07B6  00F0               	movwf	___lldiv@divisor
  1290  07B7  3000               	movlw	0
  1291  07B8  00F7               	movwf	___lldiv@dividend+3
  1292  07B9  303D               	movlw	61
  1293  07BA  00F6               	movwf	___lldiv@dividend+2
  1294  07BB  3009               	movlw	9
  1295  07BC  00F5               	movwf	___lldiv@dividend+1
  1296  07BD  3000               	movlw	0
  1297  07BE  00F4               	movwf	___lldiv@dividend
  1298  07BF  26CB               	fcall	___lldiv
  1299  07C0  0870               	movf	?___lldiv,w
  1300  07C1  3EFF               	addlw	255
  1301  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  1302  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  1303  07C4  0099               	movwf	25	;volatile
  1304  07C5                     l978:
  1305                           
  1306                           ;UART.c: 19:         TXSTAbits.BRGH = 0;
  1307  07C5  1118               	bcf	24,2	;volatile
  1308                           
  1309                           ;UART.c: 20:     } else {
  1310  07C6  2FEF               	goto	l984
  1311  07C7                     l980:
  1312                           
  1313                           ;UART.c: 21:         SPBRG = 4000000/(16*baud_rate) - 1;
  1314  07C7  0820               	movf	UARTInit@baud_rate,w
  1315  07C8  00A5               	movwf	??_UARTInit
  1316  07C9  0821               	movf	UARTInit@baud_rate+1,w
  1317  07CA  00A6               	movwf	??_UARTInit+1
  1318  07CB  0822               	movf	UARTInit@baud_rate+2,w
  1319  07CC  00A7               	movwf	??_UARTInit+2
  1320  07CD  0823               	movf	UARTInit@baud_rate+3,w
  1321  07CE  00A8               	movwf	??_UARTInit+3
  1322  07CF  3004               	movlw	4
  1323  07D0                     u605:
  1324  07D0  1003               	clrc
  1325  07D1  0DA5               	rlf	??_UARTInit,f
  1326  07D2  0DA6               	rlf	??_UARTInit+1,f
  1327  07D3  0DA7               	rlf	??_UARTInit+2,f
  1328  07D4  0DA8               	rlf	??_UARTInit+3,f
  1329  07D5                     u600:
  1330  07D5  3EFF               	addlw	-1
  1331  07D6  1D03               	skipz
  1332  07D7  2FD0               	goto	u605
  1333  07D8  0828               	movf	??_UARTInit+3,w
  1334  07D9  00F3               	movwf	___lldiv@divisor+3
  1335  07DA  0827               	movf	??_UARTInit+2,w
  1336  07DB  00F2               	movwf	___lldiv@divisor+2
  1337  07DC  0826               	movf	??_UARTInit+1,w
  1338  07DD  00F1               	movwf	___lldiv@divisor+1
  1339  07DE  0825               	movf	??_UARTInit,w
  1340  07DF  00F0               	movwf	___lldiv@divisor
  1341  07E0  3000               	movlw	0
  1342  07E1  00F7               	movwf	___lldiv@dividend+3
  1343  07E2  303D               	movlw	61
  1344  07E3  00F6               	movwf	___lldiv@dividend+2
  1345  07E4  3009               	movlw	9
  1346  07E5  00F5               	movwf	___lldiv@dividend+1
  1347  07E6  3000               	movlw	0
  1348  07E7  00F4               	movwf	___lldiv@dividend
  1349  07E8  26CB               	fcall	___lldiv
  1350  07E9  0870               	movf	?___lldiv,w
  1351  07EA  3EFF               	addlw	255
  1352  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  1353  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  1354  07ED  0099               	movwf	25	;volatile
  1355  07EE                     l982:
  1356                           
  1357                           ;UART.c: 22:         TXSTAbits.BRGH = 1;
  1358  07EE  1518               	bsf	24,2	;volatile
  1359  07EF                     l984:
  1360                           
  1361                           ;UART.c: 26:     TXSTAbits.TX9 = 0;
  1362  07EF  1318               	bcf	24,6	;volatile
  1363  07F0                     l986:
  1364                           
  1365                           ;UART.c: 27:     TXSTAbits.TXEN = 1;
  1366  07F0  1698               	bsf	24,5	;volatile
  1367  07F1                     l988:
  1368                           
  1369                           ;UART.c: 28:     TXSTAbits.SYNC = 0;
  1370  07F1  1218               	bcf	24,4	;volatile
  1371  07F2                     l990:
  1372                           
  1373                           ;UART.c: 31:     RCSTAbits.SPEN = 1;
  1374  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  1375  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  1376  07F4  1798               	bsf	24,7	;volatile
  1377  07F5                     l992:
  1378                           
  1379                           ;UART.c: 32:     RCSTAbits.RX9 = 0;
  1380  07F5  1318               	bcf	24,6	;volatile
  1381  07F6                     l994:
  1382                           
  1383                           ;UART.c: 33:     RCSTAbits.CREN = 1;
  1384  07F6  1618               	bsf	24,4	;volatile
  1385  07F7                     l996:
  1386                           
  1387                           ;UART.c: 34:     RCSTAbits.FERR = 0;
  1388  07F7  1118               	bcf	24,2	;volatile
  1389  07F8                     l998:
  1390                           
  1391                           ;UART.c: 35:     RCSTAbits.OERR = 0;
  1392  07F8  1098               	bcf	24,1	;volatile
  1393  07F9                     l1000:
  1394                           
  1395                           ;UART.c: 38:     TRISBbits.TRISB6 = 1;
  1396  07F9  1683               	bsf	3,5	;RP0=1, select bank1
  1397  07FA  1303               	bcf	3,6	;RP1=0, select bank1
  1398  07FB  1706               	bsf	6,6	;volatile
  1399  07FC                     l1002:
  1400                           
  1401                           ;UART.c: 39:     TRISBbits.TRISB7 = 0;
  1402  07FC  1386               	bcf	6,7	;volatile
  1403  07FD                     l19:
  1404  07FD  0008               	return
  1405  07FE                     __end_of_UARTInit:
  1406                           
  1407                           	psect	text7
  1408  06CB                     __ptext7:	
  1409 ;; *************** function ___lldiv *****************
  1410 ;; Defined at:
  1411 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  divisor         4    0[COMMON] unsigned long 
  1414 ;;  dividend        4    4[COMMON] unsigned long 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  quotient        4    9[COMMON] unsigned long 
  1417 ;;  counter         1   13[COMMON] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  4    0[COMMON] unsigned long 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1427 ;;      Params:         8       0       0       0
  1428 ;;      Locals:         5       0       0       0
  1429 ;;      Temps:          1       0       0       0
  1430 ;;      Totals:        14       0       0       0
  1431 ;;Total ram usage:       14 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_UARTInit
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440  06CB                     ___lldiv:	
  1441                           ;psect for function ___lldiv
  1442                           
  1443  06CB                     l902:	
  1444                           ;incstack = 0
  1445                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1446                           
  1447  06CB  3000               	movlw	0
  1448  06CC  00FC               	movwf	___lldiv@quotient+3
  1449  06CD  3000               	movlw	0
  1450  06CE  00FB               	movwf	___lldiv@quotient+2
  1451  06CF  3000               	movlw	0
  1452  06D0  00FA               	movwf	___lldiv@quotient+1
  1453  06D1  3000               	movlw	0
  1454  06D2  00F9               	movwf	___lldiv@quotient
  1455  06D3  0873               	movf	___lldiv@divisor+3,w
  1456  06D4  0472               	iorwf	___lldiv@divisor+2,w
  1457  06D5  0471               	iorwf	___lldiv@divisor+1,w
  1458  06D6  0470               	iorwf	___lldiv@divisor,w
  1459  06D7  1903               	skipnz
  1460  06D8  2EDA               	goto	u381
  1461  06D9  2EDB               	goto	u380
  1462  06DA                     u381:
  1463  06DA  2F28               	goto	l922
  1464  06DB                     u380:
  1465  06DB                     l904:
  1466  06DB  01FD               	clrf	___lldiv@counter
  1467  06DC  0AFD               	incf	___lldiv@counter,f
  1468  06DD  2EEB               	goto	l908
  1469  06DE                     l906:
  1470  06DE  3001               	movlw	1
  1471  06DF  00F8               	movwf	??___lldiv
  1472  06E0                     u395:
  1473  06E0  1003               	clrc
  1474  06E1  0DF0               	rlf	___lldiv@divisor,f
  1475  06E2  0DF1               	rlf	___lldiv@divisor+1,f
  1476  06E3  0DF2               	rlf	___lldiv@divisor+2,f
  1477  06E4  0DF3               	rlf	___lldiv@divisor+3,f
  1478  06E5  0BF8               	decfsz	??___lldiv,f
  1479  06E6  2EE0               	goto	u395
  1480  06E7  3001               	movlw	1
  1481  06E8  00F8               	movwf	??___lldiv
  1482  06E9  0878               	movf	??___lldiv,w
  1483  06EA  07FD               	addwf	___lldiv@counter,f
  1484  06EB                     l908:
  1485  06EB  1FF3               	btfss	___lldiv@divisor+3,7
  1486  06EC  2EEE               	goto	u401
  1487  06ED  2EEF               	goto	u400
  1488  06EE                     u401:
  1489  06EE  2EDE               	goto	l906
  1490  06EF                     u400:
  1491  06EF                     l910:
  1492  06EF  3001               	movlw	1
  1493  06F0  00F8               	movwf	??___lldiv
  1494  06F1                     u415:
  1495  06F1  1003               	clrc
  1496  06F2  0DF9               	rlf	___lldiv@quotient,f
  1497  06F3  0DFA               	rlf	___lldiv@quotient+1,f
  1498  06F4  0DFB               	rlf	___lldiv@quotient+2,f
  1499  06F5  0DFC               	rlf	___lldiv@quotient+3,f
  1500  06F6  0BF8               	decfsz	??___lldiv,f
  1501  06F7  2EF1               	goto	u415
  1502  06F8                     l912:
  1503  06F8  0873               	movf	___lldiv@divisor+3,w
  1504  06F9  0277               	subwf	___lldiv@dividend+3,w
  1505  06FA  1D03               	skipz
  1506  06FB  2F06               	goto	u425
  1507  06FC  0872               	movf	___lldiv@divisor+2,w
  1508  06FD  0276               	subwf	___lldiv@dividend+2,w
  1509  06FE  1D03               	skipz
  1510  06FF  2F06               	goto	u425
  1511  0700  0871               	movf	___lldiv@divisor+1,w
  1512  0701  0275               	subwf	___lldiv@dividend+1,w
  1513  0702  1D03               	skipz
  1514  0703  2F06               	goto	u425
  1515  0704  0870               	movf	___lldiv@divisor,w
  1516  0705  0274               	subwf	___lldiv@dividend,w
  1517  0706                     u425:
  1518  0706  1C03               	skipc
  1519  0707  2F09               	goto	u421
  1520  0708  2F0A               	goto	u420
  1521  0709                     u421:
  1522  0709  2F19               	goto	l918
  1523  070A                     u420:
  1524  070A                     l914:
  1525  070A  0870               	movf	___lldiv@divisor,w
  1526  070B  02F4               	subwf	___lldiv@dividend,f
  1527  070C  0871               	movf	___lldiv@divisor+1,w
  1528  070D  1C03               	skipc
  1529  070E  0F71               	incfsz	___lldiv@divisor+1,w
  1530  070F  02F5               	subwf	___lldiv@dividend+1,f
  1531  0710  0872               	movf	___lldiv@divisor+2,w
  1532  0711  1C03               	skipc
  1533  0712  0F72               	incfsz	___lldiv@divisor+2,w
  1534  0713  02F6               	subwf	___lldiv@dividend+2,f
  1535  0714  0873               	movf	___lldiv@divisor+3,w
  1536  0715  1C03               	skipc
  1537  0716  0F73               	incfsz	___lldiv@divisor+3,w
  1538  0717  02F7               	subwf	___lldiv@dividend+3,f
  1539  0718                     l916:
  1540  0718  1479               	bsf	___lldiv@quotient,0
  1541  0719                     l918:
  1542  0719  3001               	movlw	1
  1543  071A                     u435:
  1544  071A  1003               	clrc
  1545  071B  0CF3               	rrf	___lldiv@divisor+3,f
  1546  071C  0CF2               	rrf	___lldiv@divisor+2,f
  1547  071D  0CF1               	rrf	___lldiv@divisor+1,f
  1548  071E  0CF0               	rrf	___lldiv@divisor,f
  1549  071F  3EFF               	addlw	-1
  1550  0720  1D03               	skipz
  1551  0721  2F1A               	goto	u435
  1552  0722                     l920:
  1553  0722  3001               	movlw	1
  1554  0723  02FD               	subwf	___lldiv@counter,f
  1555  0724  1D03               	btfss	3,2
  1556  0725  2F27               	goto	u441
  1557  0726  2F28               	goto	u440
  1558  0727                     u441:
  1559  0727  2EEF               	goto	l910
  1560  0728                     u440:
  1561  0728                     l922:
  1562  0728  087C               	movf	___lldiv@quotient+3,w
  1563  0729  00F3               	movwf	?___lldiv+3
  1564  072A  087B               	movf	___lldiv@quotient+2,w
  1565  072B  00F2               	movwf	?___lldiv+2
  1566  072C  087A               	movf	___lldiv@quotient+1,w
  1567  072D  00F1               	movwf	?___lldiv+1
  1568  072E  0879               	movf	___lldiv@quotient,w
  1569  072F  00F0               	movwf	?___lldiv
  1570  0730                     l194:
  1571  0730  0008               	return
  1572  0731                     __end_of___lldiv:
  1573                           
  1574                           	psect	text8
  1575  0627                     __ptext8:	
  1576 ;; *************** function _UARTSendString *****************
  1577 ;; Defined at:
  1578 ;;		line 56 in file "UART.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  str             2    1[COMMON] PTR const unsigned char 
  1581 ;;		 -> STR_4(4), STR_3(10), STR_2(13), main@tmpBuf(8), 
  1582 ;;		 -> main@readBuf(16), STR_1(4), 
  1583 ;;  max_length      1    3[COMMON] const unsigned char 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  i               2    7[COMMON] int 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1595 ;;      Params:         3       0       0       0
  1596 ;;      Locals:         2       0       0       0
  1597 ;;      Temps:          3       0       0       0
  1598 ;;      Totals:         8       0       0       0
  1599 ;;Total ram usage:        8 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 1
  1602 ;; This function calls:
  1603 ;;		_UARTSendChar
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609  0627                     _UARTSendString:	
  1610                           ;psect for function _UARTSendString
  1611                           
  1612  0627                     l1046:	
  1613                           ;incstack = 0
  1614                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1615                           
  1616                           
  1617                           ;UART.c: 57:     int i = 0;
  1618  0627  01F7               	clrf	UARTSendString@i
  1619  0628  01F8               	clrf	UARTSendString@i+1
  1620                           
  1621                           ;UART.c: 58:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  1622  0629  01F7               	clrf	UARTSendString@i
  1623  062A  01F8               	clrf	UARTSendString@i+1
  1624  062B  2E46               	goto	l1052
  1625  062C                     l1048:
  1626                           
  1627                           ;UART.c: 59:         UARTSendChar(str[i]);
  1628  062C  0877               	movf	UARTSendString@i,w
  1629  062D  0771               	addwf	UARTSendString@str,w
  1630  062E  00F5               	movwf	??_UARTSendString+1
  1631  062F  0872               	movf	UARTSendString@str+1,w
  1632  0630  00F4               	movwf	??_UARTSendString
  1633  0631  1803               	skipnc
  1634  0632  0AF4               	incf	??_UARTSendString,f
  1635  0633  1FF7               	btfss	UARTSendString@i,7
  1636  0634  2E36               	goto	u660
  1637  0635  03F4               	decf	??_UARTSendString,f
  1638  0636                     u660:
  1639  0636  0874               	movf	??_UARTSendString,w
  1640  0637  00F6               	movwf	??_UARTSendString+2
  1641  0638  0876               	movf	??_UARTSendString+2,w
  1642  0639  1283               	bcf	3,5	;RP0=0, select bank0
  1643  063A  1303               	bcf	3,6	;RP1=0, select bank0
  1644  063B  00FF               	movwf	btemp+1
  1645  063C  0875               	movf	??_UARTSendString+1,w
  1646  063D  0084               	movwf	4
  1647  063E  2001               	fcall	stringtab
  1648  063F  2528               	fcall	_UARTSendChar
  1649  0640                     l1050:
  1650                           
  1651                           ;UART.c: 60:     }
  1652  0640  3001               	movlw	1
  1653  0641  07F7               	addwf	UARTSendString@i,f
  1654  0642  1803               	skipnc
  1655  0643  0AF8               	incf	UARTSendString@i+1,f
  1656  0644  3000               	movlw	0
  1657  0645  07F8               	addwf	UARTSendString@i+1,f
  1658  0646                     l1052:
  1659  0646  0878               	movf	UARTSendString@i+1,w
  1660  0647  3A80               	xorlw	128
  1661  0648  00F4               	movwf	??_UARTSendString
  1662  0649  3080               	movlw	128
  1663  064A  0274               	subwf	??_UARTSendString,w
  1664  064B  1D03               	skipz
  1665  064C  2E4F               	goto	u675
  1666  064D  0873               	movf	UARTSendString@max_length,w
  1667  064E  0277               	subwf	UARTSendString@i,w
  1668  064F                     u675:
  1669  064F  1803               	skipnc
  1670  0650  2E52               	goto	u671
  1671  0651  2E53               	goto	u670
  1672  0652                     u671:
  1673  0652  2E6B               	goto	l33
  1674  0653                     u670:
  1675  0653                     l1054:
  1676  0653  0877               	movf	UARTSendString@i,w
  1677  0654  0771               	addwf	UARTSendString@str,w
  1678  0655  00F5               	movwf	??_UARTSendString+1
  1679  0656  0872               	movf	UARTSendString@str+1,w
  1680  0657  00F4               	movwf	??_UARTSendString
  1681  0658  1803               	skipnc
  1682  0659  0AF4               	incf	??_UARTSendString,f
  1683  065A  1FF7               	btfss	UARTSendString@i,7
  1684  065B  2E5D               	goto	u680
  1685  065C  03F4               	decf	??_UARTSendString,f
  1686  065D                     u680:
  1687  065D  0874               	movf	??_UARTSendString,w
  1688  065E  00F6               	movwf	??_UARTSendString+2
  1689  065F  0876               	movf	??_UARTSendString+2,w
  1690  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1692  0662  00FF               	movwf	btemp+1
  1693  0663  0875               	movf	??_UARTSendString+1,w
  1694  0664  0084               	movwf	4
  1695  0665  2001               	fcall	stringtab
  1696  0666  3A00               	xorlw	0
  1697  0667  1D03               	skipz
  1698  0668  2E6A               	goto	u691
  1699  0669  2E6B               	goto	u690
  1700  066A                     u691:
  1701  066A  2E2C               	goto	l1048
  1702  066B                     u690:
  1703  066B                     l33:
  1704  066B  0008               	return
  1705  066C                     __end_of_UARTSendString:
  1706                           
  1707                           	psect	text9
  1708  0528                     __ptext9:	
  1709 ;; *************** function _UARTSendChar *****************
  1710 ;; Defined at:
  1711 ;;		line 46 in file "UART.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  c               1    wreg     const unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  c               1    0[COMMON] const unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1725 ;;      Params:         0       0       0       0
  1726 ;;      Locals:         1       0       0       0
  1727 ;;      Temps:          0       0       0       0
  1728 ;;      Totals:         1       0       0       0
  1729 ;;Total ram usage:        1 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_UARTSendString
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738  0528                     _UARTSendChar:	
  1739                           ;psect for function _UARTSendChar
  1740                           
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _UARTSendChar: [wreg]
  1744                           ;UARTSendChar@c stored from wreg
  1745  0528  00F0               	movwf	UARTSendChar@c
  1746  0529                     l1004:
  1747  0529                     l22:	
  1748                           ;UART.c: 47:     while (TXSTAbits.TRMT == 0);
  1749                           
  1750  0529  1683               	bsf	3,5	;RP0=1, select bank1
  1751  052A  1303               	bcf	3,6	;RP1=0, select bank1
  1752  052B  1C98               	btfss	24,1	;volatile
  1753  052C  2D2E               	goto	u611
  1754  052D  2D2F               	goto	u610
  1755  052E                     u611:
  1756  052E  2D29               	goto	l22
  1757  052F                     u610:
  1758  052F                     l1006:
  1759                           
  1760                           ;UART.c: 48:     TXREG = c;
  1761  052F  0870               	movf	UARTSendChar@c,w
  1762  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0531  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0532  0099               	movwf	25	;volatile
  1765  0533                     l25:
  1766  0533  0008               	return
  1767  0534                     __end_of_UARTSendChar:
  1768                           
  1769                           	psect	text10
  1770  05A1                     __ptext10:	
  1771 ;; *************** function _UARTReadString *****************
  1772 ;; Defined at:
  1773 ;;		line 87 in file "UART.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  buf             1    wreg     PTR unsigned char 
  1776 ;;		 -> main@readBuf(16), 
  1777 ;;  max_length      1    1[COMMON] unsigned char 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  buf             1    4[COMMON] PTR unsigned char 
  1780 ;;		 -> main@readBuf(16), 
  1781 ;;  i               1    6[COMMON] unsigned char 
  1782 ;;  tmp             1    5[COMMON] unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      unsigned char 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1792 ;;      Params:         1       0       0       0
  1793 ;;      Locals:         3       0       0       0
  1794 ;;      Temps:          2       0       0       0
  1795 ;;      Totals:         6       0       0       0
  1796 ;;Total ram usage:        6 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 2
  1799 ;; This function calls:
  1800 ;;		_UARTReadChar
  1801 ;; This function is called by:
  1802 ;;		_main
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806  05A1                     _UARTReadString:	
  1807                           ;psect for function _UARTReadString
  1808                           
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _UARTReadString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1812                           ;UARTReadString@buf stored from wreg
  1813  05A1  00F4               	movwf	UARTReadString@buf
  1814  05A2                     l1056:
  1815  05A2                     l1058:
  1816                           
  1817                           ;UART.c: 90:     for (i=0 ; i<max_length-1 ; i++) {
  1818  05A2  01F6               	clrf	UARTReadString@i
  1819  05A3  2DC8               	goto	l1072
  1820  05A4                     l1060:
  1821                           
  1822                           ;UART.c: 91:         tmp = UARTReadChar();
  1823  05A4  251E               	fcall	_UARTReadChar
  1824  05A5  00F2               	movwf	??_UARTReadString
  1825  05A6  0872               	movf	??_UARTReadString,w
  1826  05A7  00F5               	movwf	UARTReadString@tmp
  1827  05A8                     l1062:
  1828                           
  1829                           ;UART.c: 93:         if (tmp == '\0' || tmp == '\n' || tmp == '\r') {
  1830  05A8  0875               	movf	UARTReadString@tmp,w
  1831  05A9  1903               	btfsc	3,2
  1832  05AA  2DAC               	goto	u701
  1833  05AB  2DAD               	goto	u700
  1834  05AC                     u701:
  1835  05AC  2DDA               	goto	l1074
  1836  05AD                     u700:
  1837  05AD                     l1064:
  1838  05AD  300A               	movlw	10
  1839  05AE  0675               	xorwf	UARTReadString@tmp,w
  1840  05AF  1903               	btfsc	3,2
  1841  05B0  2DB2               	goto	u711
  1842  05B1  2DB3               	goto	u710
  1843  05B2                     u711:
  1844  05B2  2DDA               	goto	l1074
  1845  05B3                     u710:
  1846  05B3                     l1066:
  1847  05B3  300D               	movlw	13
  1848  05B4  0675               	xorwf	UARTReadString@tmp,w
  1849  05B5  1D03               	btfss	3,2
  1850  05B6  2DB8               	goto	u721
  1851  05B7  2DB9               	goto	u720
  1852  05B8                     u721:
  1853  05B8  2DBA               	goto	l1068
  1854  05B9                     u720:
  1855  05B9  2DDA               	goto	l1074
  1856  05BA                     l1068:
  1857                           
  1858                           ;UART.c: 96:         buf[i] = tmp;
  1859  05BA  0875               	movf	UARTReadString@tmp,w
  1860  05BB  00F2               	movwf	??_UARTReadString
  1861  05BC  0876               	movf	UARTReadString@i,w
  1862  05BD  0774               	addwf	UARTReadString@buf,w
  1863  05BE  00F3               	movwf	??_UARTReadString+1
  1864  05BF  0873               	movf	??_UARTReadString+1,w
  1865  05C0  0084               	movwf	4
  1866  05C1  0872               	movf	??_UARTReadString,w
  1867  05C2  1383               	bcf	3,7	;select IRP bank0
  1868  05C3  0080               	movwf	0
  1869  05C4                     l1070:
  1870                           
  1871                           ;UART.c: 97:     }
  1872  05C4  3001               	movlw	1
  1873  05C5  00F2               	movwf	??_UARTReadString
  1874  05C6  0872               	movf	??_UARTReadString,w
  1875  05C7  07F6               	addwf	UARTReadString@i,f
  1876  05C8                     l1072:
  1877  05C8  0871               	movf	UARTReadString@max_length,w
  1878  05C9  3EFF               	addlw	255
  1879  05CA  00F2               	movwf	??_UARTReadString
  1880  05CB  30FF               	movlw	255
  1881  05CC  1803               	skipnc
  1882  05CD  3000               	movlw	0
  1883  05CE  00F3               	movwf	??_UARTReadString+1
  1884  05CF  0873               	movf	??_UARTReadString+1,w
  1885  05D0  3A80               	xorlw	128
  1886  05D1  3C80               	sublw	128
  1887  05D2  1D03               	skipz
  1888  05D3  2DD6               	goto	u735
  1889  05D4  0872               	movf	??_UARTReadString,w
  1890  05D5  0276               	subwf	UARTReadString@i,w
  1891  05D6                     u735:
  1892  05D6  1C03               	skipc
  1893  05D7  2DD9               	goto	u731
  1894  05D8  2DDA               	goto	u730
  1895  05D9                     u731:
  1896  05D9  2DA4               	goto	l1060
  1897  05DA                     u730:
  1898  05DA                     l1074:
  1899                           
  1900                           ;UART.c: 99:     buf[i+1] = '\0';
  1901  05DA  0876               	movf	UARTReadString@i,w
  1902  05DB  0774               	addwf	UARTReadString@buf,w
  1903  05DC  00F2               	movwf	??_UARTReadString
  1904  05DD  0A72               	incf	??_UARTReadString,w
  1905  05DE  0084               	movwf	4
  1906  05DF  1383               	bcf	3,7	;select IRP bank0
  1907  05E0  0180               	clrf	0
  1908  05E1                     l1076:
  1909                           
  1910                           ;UART.c: 101:     return i;
  1911  05E1  0876               	movf	UARTReadString@i,w
  1912  05E2                     l51:
  1913  05E2  0008               	return
  1914  05E3                     __end_of_UARTReadString:
  1915                           
  1916                           	psect	text11
  1917  051E                     __ptext11:	
  1918 ;; *************** function _UARTReadChar *****************
  1919 ;; Defined at:
  1920 ;;		line 75 in file "UART.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      unsigned char 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1934 ;;      Params:         0       0       0       0
  1935 ;;      Locals:         0       0       0       0
  1936 ;;      Temps:          0       0       0       0
  1937 ;;      Totals:         0       0       0       0
  1938 ;;Total ram usage:        0 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 1
  1941 ;; This function calls:
  1942 ;;		_UARTDataReady
  1943 ;; This function is called by:
  1944 ;;		_UARTReadString
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948  051E                     _UARTReadChar:	
  1949                           ;psect for function _UARTReadChar
  1950                           
  1951  051E                     l1008:	
  1952                           ;incstack = 0
  1953                           ; Regs used in _UARTReadChar: [wreg+status,2+status,0+pclath+cstack]
  1954                           
  1955  051E                     l1010:	
  1956                           ;UART.c: 76:     while (!UARTDataReady());
  1957                           
  1958  051E  2517               	fcall	_UARTDataReady
  1959  051F  3A00               	xorlw	0
  1960  0520  1903               	skipnz
  1961  0521  2D23               	goto	u621
  1962  0522  2D24               	goto	u620
  1963  0523                     u621:
  1964  0523  2D1E               	goto	l1010
  1965  0524                     u620:
  1966  0524                     l1012:
  1967                           
  1968                           ;UART.c: 77:     return RCREG;
  1969  0524  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0525  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0526  081A               	movf	26,w	;volatile
  1972  0527                     l42:
  1973  0527  0008               	return
  1974  0528                     __end_of_UARTReadChar:
  1975                           
  1976                           	psect	text12
  1977  0517                     __ptext12:	
  1978 ;; *************** function _UARTDataReady *****************
  1979 ;; Defined at:
  1980 ;;		line 67 in file "UART.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      unsigned char 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1994 ;;      Params:         0       0       0       0
  1995 ;;      Locals:         0       0       0       0
  1996 ;;      Temps:          1       0       0       0
  1997 ;;      Totals:         1       0       0       0
  1998 ;;Total ram usage:        1 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		_UARTReadChar
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007  0517                     _UARTDataReady:	
  2008                           ;psect for function _UARTDataReady
  2009                           
  2010  0517                     l898:	
  2011                           ;incstack = 0
  2012                           ; Regs used in _UARTDataReady: [wreg+status,2+status,0]
  2013                           
  2014                           
  2015                           ;UART.c: 68:     return PIR1bits.RCIF;
  2016  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0519  0E0C               	swapf	12,w	;volatile
  2019  051A  00F0               	movwf	??_UARTDataReady
  2020  051B  0C70               	rrf	??_UARTDataReady,w
  2021  051C  3901               	andlw	1
  2022  051D                     l36:
  2023  051D  0008               	return
  2024  051E                     __end_of_UARTDataReady:
  2025  007E                     btemp	set	126	;btemp
  2026  007E                     wtemp0	set	126
  2027                           
  2028                           	psect	idloc
  2029                           
  2030                           ;Config register IDLOC0 @ 0x2000
  2031                           ;	unspecified, using default values
  2032  2000                     	org	8192
  2033  2000  3FFF               	dw	16383
  2034                           
  2035                           ;Config register IDLOC1 @ 0x2001
  2036                           ;	unspecified, using default values
  2037  2001                     	org	8193
  2038  2001  3FFF               	dw	16383
  2039                           
  2040                           ;Config register IDLOC2 @ 0x2002
  2041                           ;	unspecified, using default values
  2042  2002                     	org	8194
  2043  2002  3FFF               	dw	16383
  2044                           
  2045                           ;Config register IDLOC3 @ 0x2003
  2046                           ;	unspecified, using default values
  2047  2003                     	org	8195
  2048  2003  3FFF               	dw	16383
  2049                           
  2050                           	psect	config
  2051                           
  2052                           ;Config register CONFIG @ 0x2007
  2053                           ;	Oscillator Selection bits
  2054                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  2055                           ;	Watchdog Timer Enable bit
  2056                           ;	WDTE = OFF, WDT disabled
  2057                           ;	Power-up Timer Enable bit
  2058                           ;	PWRTE = ON, PWRT enabled
  2059                           ;	RA5/MCLR/VPP Pin Function Select bit
  2060                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  2061                           ;	Brown-out Detect Enable bit
  2062                           ;	BOREN = ON, BOD enabled
  2063                           ;	Low-Voltage Programming Enable bit
  2064                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  2065                           ;	Data EE Memory Code Protection bit
  2066                           ;	CPD = OFF, Data memory code protection off
  2067                           ;	Flash Program Memory Code Protection bit
  2068                           ;	CP = OFF, Code protection off
  2069  2007                     	org	8199
  2070  2007  3F50               	dw	16208

Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      38
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> main@tmpBuf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 16
		 -> main@tmpBuf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> main@tmpBuf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 16
		 -> main@tmpBuf(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 16
		 -> main@tmpBuf(BANK0[8]), 

    main@tmpBuf	PTR unsigned char [8] size(1) Largest target is 0

    main@readBuf	PTR unsigned char [16] size(1) Largest target is 0

    UARTReadString@buf	PTR unsigned char  size(1) Largest target is 32
		 -> main@readBuf(BANK0[16]), 

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_4(CODE[4]), STR_3(CODE[10]), STR_2(CODE[13]), main@tmpBuf(BANK0[8]), 
		 -> main@readBuf(BANK0[16]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _UARTInit->___lldiv
    _UARTSendString->_UARTSendChar
    _UARTReadChar->_UARTDataReady

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa
    _init->_UARTInit

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0    3869
                                              9 BANK0     29    29      0
                     _UARTReadString
                     _UARTSendString
                               _init
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1612
                                             13 COMMON     1     1      0
                                              4 BANK0      5     1      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     684
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     684
                                              0 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       8     5      3    1069
                                              1 COMMON     8     5      3
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTReadString                                       6     5      1     356
                                              1 COMMON     6     5      1
                       _UARTReadChar
 ---------------------------------------------------------------------------------
 (2) _UARTReadChar                                         0     0      0       0
                      _UARTDataReady
 ---------------------------------------------------------------------------------
 (3) _UARTDataReady                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTReadString
     _UARTReadChar
       _UARTDataReady
   _UARTSendString
     _UARTSendChar
   _init
     _UARTInit
       ___lldiv
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     26      26       3       47.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 14 10:55:23 2022

       UARTInit@baud_rate 0020                         pc 0002                        l22 0529  
                      l25 0533                        l33 066B                        l42 0527  
                      l51 05E2                        l19 07FD                        l36 051D  
                      l64 0544                        fsr 0004                       l430 0626  
                     l440 05A0                       l194 0730                       l620 0796  
                     l612 0566                       l618 077F                       l910 06EF  
                     l902 06CB                       l920 0722                       l912 06F8  
                     l904 06DB                       l914 070A                       l906 06DE  
                     l922 0728                       l930 05EB                       l916 0718  
                     l908 06EB                       l940 060E                       l932 05EE  
                     l918 0719                       l942 0614                       l934 05F5  
                     l926 05E3                       l944 0615                       l936 05F9  
                     l928 05E5                       l960 057B                       l952 0567  
                     l946 061C                       l938 05FD                       l962 057F  
                     l954 056D                       l970 059C                       l980 07C7  
                     l948 0622                       l964 0589                       l956 0570  
                     l990 07F2                       l982 07EE                       l974 0797  
                     l966 058F                       l958 0577                       l992 07F5  
                     l984 07EF                       l976 079E                       l968 0596  
                     l898 0517                       l994 07F6                       l986 07F0  
                     l978 07C5                       l996 07F7                       l988 07F1  
                     l998 07F8                       u400 06EF                       u401 06EE  
                     u420 070A                       u421 0709                       u510 0622  
                     u415 06F1                       u511 0621                       u440 0728  
                     u600 07D5                       u520 056D                       u441 0727  
                     u425 0706                       u505 0616                       u521 056C  
                     u610 052F                       u450 05EB                       u611 052E  
                     u435 071A                       u451 05EA                       u620 0524  
                     u700 05AD                       u380 06DB                       u540 057F  
                     u621 0523                       u701 05AC                       u381 06DA  
                     u605 07D0                       u541 057E                       u710 05B3  
                     u470 05FD                       u550 0589                       u630 0751  
                     u711 05B2                       u471 05FC                       u551 0588  
                     u535 0571                       u631 0750                       u720 05B9  
                     u640 077B                       u721 05B8                       u465 05EF  
                     u641 077A                       u730 05DA                       u490 060E  
                     u570 059C                       u650 0792                       u731 05D9  
                     u395 06E0                       u491 060D                       u571 059B  
                     u555 0585                       u651 0791                       u660 0636  
                     u580 079E                       u740 054C                       u581 079D  
                     u485 05FE                       u565 0590                       u741 054B  
                     u670 0653                       u590 07AC                       u735 05D6  
                     u671 0652                       u495 060A                       u680 065D  
                     u690 066B                       u691 066A                       u675 064F  
                     u595 07A7                       fsr0 0004                       indf 0000  
                    l1000 07F9                      l1010 051E                      l1002 07FC  
                    l1012 0524                      l1004 0529                      l1020 0747  
                    l1100 066C                      l1006 052F                      l1030 0766  
                    l1022 074B                      l1110 069D                      l1102 066D  
                    l1008 051E                      l1040 078C                      l1032 0773  
                    l1024 0751                      l1016 0734                      l1112 06A8  
                    l1104 0678                      l1050 0640                      l1042 0792  
                    l1034 077B                      l1026 0755                      l1018 0738  
                    l1114 06B3                      l1106 0688                      l1060 05A4  
                    l1052 0646                      l1036 0783                      l1028 0757  
                    l1116 06BE                      l1108 0692                      l1070 05C4  
                    l1062 05A8                      l1054 0653                      l1046 0627  
                    l1038 078A                      l1064 05AD                      l1072 05C8  
                    l1056 05A2                      l1048 062C                      l1080 0534  
                    l1066 05B3                      l1074 05DA                      l1058 05A2  
                    l1082 0537                      l1090 0553                      l1076 05E1  
                    l1068 05BA                      l1092 0557                      l1084 0548  
                    l1094 055C                      l1086 0548                      l1088 054C  
                    l1098 066C                      STR_1 002C                      STR_2 0011  
                    STR_3 001E                      STR_4 0028               main@readBuf 002C  
                    _main 066C                      _init 0534                      _itoa 0545  
                    btemp 007E                      _utoa 0731                      start 0000  
                   ?_main 0070                     ?_init 0070                     ?_itoa 0024  
         __end_of___lldiv 0731                     ?_utoa 0078           __end_of___lwdiv 0627  
         __end_of___lwmod 05A1                     _RCREG 001A                     _SPBRG 0099  
                   _TXREG 0019          __end_of_UARTInit 07FE                     pclath 000A  
                   utoa@c 0022                     utoa@v 0020                     status 0003  
                   wtemp0 007E           __initialization 07FE              __end_of_main 06CB  
            __end_of_init 0545              __end_of_itoa 0567              __end_of_utoa 0797  
                  ??_main 0029                    ??_init 007E                    ??_itoa 007D  
                  ??_utoa 007C     __end_of_UARTDataReady 051E                 ??___lldiv 0078  
               ??___lwdiv 0074                 ??___lwmod 0074   __end_of__initialization 07FE  
          __pcstackCOMMON 0070                 ?_UARTInit 0020  UARTSendString@max_length 0073  
       UARTReadString@buf 0074                __pmaintext 066C         UARTReadString@tmp 0075  
              ??_UARTInit 0025             ?_UARTReadChar 0070            _UARTReadString 05A1  
              __stringtab 0001             ?_UARTSendChar 0070                   ___lldiv 06CB  
                 ___lwdiv 05E3                   ___lwmod 0567            _UARTSendString 0627  
                 __ptext1 0545                   __ptext2 0731                   __ptext3 0567  
                 __ptext4 05E3                   __ptext5 0534                   __ptext6 0797  
                 __ptext7 06CB                   __ptext8 0627                   __ptext9 0528  
  __end_of_UARTReadString 05E3            ??_UARTReadChar 0071      end_of_initialization 07FE  
          ??_UARTSendChar 0070                   itoa@buf 0028                   itoa@val 0024  
         ___lldiv@divisor 0070           ___lldiv@counter 007D                 _RCSTAbits 0018  
  __end_of_UARTSendString 066C                   utoa@buf 0023                   utoa@val 0078  
               _TRISBbits 0086           ?_UARTReadString 0071                 _TXSTAbits 0098  
              main@tmpBuf 003C           ?_UARTSendString 0071       start_initialization 07FE  
         UARTReadString@i 0076      __end_of_UARTReadChar 0528      __end_of_UARTSendChar 0534  
UARTReadString@max_length 0071                 ___latbits 0000             __pcstackBANK0 0020  
           _UARTDataReady 0517          ___lwdiv@dividend 0072             UARTSendChar@c 0070  
                ?___lldiv 0070                  ?___lwdiv 0070                  ?___lwmod 0070  
               __pstrings 0001            ?_UARTDataReady 0070          ___lwdiv@quotient 0075  
         UARTSendString@i 0077                  _PIR1bits 000C                  _UARTInit 0797  
             __stringbase 0010          ??_UARTReadString 0072                 main@nRead 0044  
        ??_UARTSendString 0074              UARTInit@BRGH 0024        __end_of__stringtab 0011  
         ??_UARTDataReady 0070           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 05A1                  __ptext11 051E                  __ptext12 0517  
            _UARTReadChar 051E              _UARTSendChar 0528                  itoa@base 0026  
       UARTSendString@str 0071          ___lwmod@dividend 0072          ___lldiv@dividend 0074  
               stringcode 000B                  utoa@base 007A          ___lldiv@quotient 0079  
         ___lwmod@divisor 0070           ___lwmod@counter 0075                  stringdir 000B  
                stringtab 0001  
