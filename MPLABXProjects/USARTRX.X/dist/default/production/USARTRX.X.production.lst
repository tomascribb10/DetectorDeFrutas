

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Dec 10 15:22:34 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F628A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  008C                     	;# 
    91  008E                     	;# 
    92  0092                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009F                     	;# 
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000E                     	;# 
   111  000E                     	;# 
   112  000F                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0015                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  008C                     	;# 
   128  008E                     	;# 
   129  0092                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009F                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  008C                     	;# 
   165  008E                     	;# 
   166  0092                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009A                     	;# 
   170  009B                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009F                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  008C                     	;# 
   202  008E                     	;# 
   203  0092                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009F                     	;# 
   211  0001                     _TMR0	set	1
   212  000B                     _INTCONbits	set	11
   213  000B                     _INTCON	set	11
   214  0005                     _PORTAbits	set	5
   215  0006                     _PORTBbits	set	6
   216  0006                     _PORTB	set	6
   217  001F                     _CMCONbits	set	31
   218  001A                     _RCREG	set	26
   219  000C                     _PIR1bits	set	12
   220  0019                     _TXREG	set	25
   221  0018                     _RCSTAbits	set	24
   222  0081                     _OPTION_REGbits	set	129
   223  0085                     _TRISAbits	set	133
   224  0086                     _TRISBbits	set	134
   225  0098                     _TXSTAbits	set	152
   226  0099                     _SPBRG	set	153
   227                           
   228                           	psect	strings
   229  0300                     __pstrings:
   230  0300                     stringtab:
   231  0300                     __stringtab:
   232  0300                     stringcode:	
   233                           ;	String table - string pointers are 1 byte each
   234                           
   235  0300                     stringdir:
   236  0300  3003               	movlw	high stringdir
   237  0301  008A               	movwf	10
   238  0302  0804               	movf	4,w
   239  0303  0A84               	incf	4,f
   240  0304  0782               	addwf	2,f
   241  0305                     __stringbase:
   242  0305  3400               	retlw	0
   243  0306                     __end_of__stringtab:
   244  0306                     STR_1:
   245  0306  3478               	retlw	120	;'x'
   246  0307  3400               	retlw	0
   247  0308  3400               	retlw	0
   248  0309                     STR_2:
   249  0309  3479               	retlw	121	;'y'
   250  030A  3400               	retlw	0
   251  030B  3400               	retlw	0
   252  0309                     
   253                           	psect	cinit
   254  000B                     start_initialization:	
   255                           ; #config settings
   256                           
   257  000B                     __initialization:
   258                           
   259                           ; Clear objects allocated to COMMON
   260  000B  01F8               	clrf	__pbssCOMMON& (0+127)
   261  000C  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   262                           
   263                           ; Clear objects allocated to BANK0
   264  000D  1283               	bcf	3,5	;RP0=0, select bank0
   265  000E  1303               	bcf	3,6	;RP1=0, select bank0
   266  000F  01BC               	clrf	__pbssBANK0& (0+127)
   267  0010  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   268  0011  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   269  0012  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   270  0013  01C0               	clrf	(__pbssBANK0+4)& (0+127)
   271  0014  01C1               	clrf	(__pbssBANK0+5)& (0+127)
   272  0015  01C2               	clrf	(__pbssBANK0+6)& (0+127)
   273  0016  01C3               	clrf	(__pbssBANK0+7)& (0+127)
   274  0017                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277  0017                     __end_of__initialization:
   278  0017  0183               	clrf	3
   279  0018  2819               	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMMON
   282  0078                     __pbssCOMMON:
   283  0078                     _cont_sr:
   284  0078                     	ds	2
   285                           
   286                           	psect	bssBANK0
   287  003C                     __pbssBANK0:
   288  003C                     _data_s:
   289  003C                     	ds	8
   290                           
   291                           	psect	cstackCOMMON
   292  0070                     __pcstackCOMMON:
   293  0070                     ?_Servo_Init:
   294  0070                     ?_Servo_8_Write:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_UARTSendChar:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_UARTReadChar:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_init:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_TMR0_ISR:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ??_TMR0_ISR:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           ; 1 bytes @ 0x0
   317  0070                     	ds	4
   318  0074                     ??_Servo_Init:
   319  0074                     ??_UARTSendChar:	
   320                           ; 1 bytes @ 0x4
   321                           
   322  0074                     ??___lldiv:	
   323                           ; 1 bytes @ 0x4
   324                           
   325  0074                     ?_UARTDataReady:	
   326                           ; 1 bytes @ 0x4
   327                           
   328  0074                     ?___wmul:	
   329                           ; 2 bytes @ 0x4
   330                           
   331  0074                     UARTSendChar@c:	
   332                           ; 2 bytes @ 0x4
   333                           
   334  0074                     ___wmul@multiplier:	
   335                           ; 1 bytes @ 0x4
   336                           
   337                           
   338                           ; 2 bytes @ 0x4
   339  0074                     	ds	1
   340  0075                     ?_UARTSendString:
   341  0075                     ??_init:	
   342                           ; 1 bytes @ 0x5
   343                           
   344  0075                     UARTSendString@max_length:	
   345                           ; 1 bytes @ 0x5
   346                           
   347                           
   348                           ; 1 bytes @ 0x5
   349  0075                     	ds	1
   350  0076                     ??_UARTSendString:
   351  0076                     ??_UARTReadChar:	
   352                           ; 1 bytes @ 0x6
   353                           
   354  0076                     ___wmul@multiplicand:	
   355                           ; 1 bytes @ 0x6
   356                           
   357                           
   358                           ; 2 bytes @ 0x6
   359  0076                     	ds	2
   360  0078                     ??___wmul:
   361                           
   362                           	psect	cstackBANK0
   363  0020                     __pcstackBANK0:	
   364                           ; 1 bytes @ 0x8
   365                           
   366  0020                     ??_UARTDataReady:
   367  0020                     ?___lldiv:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0020                     UARTSendString@str:	
   371                           ; 4 bytes @ 0x0
   372                           
   373  0020                     ___wmul@product:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0020                     ___lldiv@divisor:	
   377                           ; 2 bytes @ 0x0
   378                           
   379                           
   380                           ; 4 bytes @ 0x0
   381  0020                     	ds	1
   382  0021                     UARTSendString@i:
   383                           
   384                           ; 2 bytes @ 0x1
   385  0021                     	ds	1
   386  0022                     ?___awdiv:
   387  0022                     ___awdiv@divisor:	
   388                           ; 2 bytes @ 0x2
   389                           
   390                           
   391                           ; 2 bytes @ 0x2
   392  0022                     	ds	2
   393  0024                     ___awdiv@dividend:
   394  0024                     ___lldiv@dividend:	
   395                           ; 2 bytes @ 0x4
   396                           
   397                           
   398                           ; 4 bytes @ 0x4
   399  0024                     	ds	2
   400  0026                     ??___awdiv:
   401                           
   402                           ; 1 bytes @ 0x6
   403  0026                     	ds	1
   404  0027                     ___awdiv@counter:
   405                           
   406                           ; 1 bytes @ 0x7
   407  0027                     	ds	1
   408  0028                     ___awdiv@sign:
   409  0028                     ___lldiv@quotient:	
   410                           ; 1 bytes @ 0x8
   411                           
   412                           
   413                           ; 4 bytes @ 0x8
   414  0028                     	ds	1
   415  0029                     ___awdiv@quotient:
   416                           
   417                           ; 2 bytes @ 0x9
   418  0029                     	ds	2
   419  002B                     ??_Servo_8_Write:
   420                           
   421                           ; 1 bytes @ 0xB
   422  002B                     	ds	1
   423  002C                     ___lldiv@counter:
   424                           
   425                           ; 1 bytes @ 0xC
   426  002C                     	ds	1
   427  002D                     ?_UARTInit:
   428  002D                     UARTInit@baud_rate:	
   429                           ; 1 bytes @ 0xD
   430                           
   431                           
   432                           ; 4 bytes @ 0xD
   433  002D                     	ds	1
   434  002E                     Servo_8_Write@ang:
   435                           
   436                           ; 1 bytes @ 0xE
   437  002E                     	ds	3
   438  0031                     UARTInit@BRGH:
   439                           
   440                           ; 1 bytes @ 0x11
   441  0031                     	ds	1
   442  0032                     ??_UARTInit:
   443                           
   444                           ; 1 bytes @ 0x12
   445  0032                     	ds	4
   446  0036                     ??_main:
   447                           
   448                           ; 1 bytes @ 0x16
   449  0036                     	ds	3
   450  0039                     main@letra:
   451                           
   452                           ; 1 bytes @ 0x19
   453  0039                     	ds	1
   454  003A                     main@detect_on:
   455                           
   456                           ; 2 bytes @ 0x1A
   457  003A                     	ds	2
   458                           
   459                           	psect	maintext
   460  0019                     __pmaintext:	
   461 ;;
   462 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   463 ;;
   464 ;; *************** function _main *****************
   465 ;; Defined at:
   466 ;;		line 73 in file "main.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  readBuf        32    0        PTR unsigned char [16]
   471 ;;  tmpBuf         16    0        PTR unsigned char [8]
   472 ;;  detect_on       2   26[BANK0 ] int 
   473 ;;  contador        2    0        int 
   474 ;;  nRead           2    0        int 
   475 ;;  letra           1   25[BANK0 ] unsigned char 
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : B00/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   485 ;;      Params:         0       0       0       0
   486 ;;      Locals:         0       3       0       0
   487 ;;      Temps:          0       3       0       0
   488 ;;      Totals:         0       6       0       0
   489 ;;Total ram usage:        6 bytes
   490 ;; Hardware stack levels required when called: 4
   491 ;; This function calls:
   492 ;;		_Servo_8_Write
   493 ;;		_Servo_Init
   494 ;;		_UARTDataReady
   495 ;;		_UARTReadChar
   496 ;;		_UARTSendString
   497 ;;		_init
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503  0019                     _main:	
   504                           ;psect for function _main
   505                           
   506  0019                     l1480:	
   507                           ;incstack = 0
   508                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   509                           
   510  0019                     l1482:
   511                           
   512                           ;main.c: 77:     char letra;;main.c: 78:     init();
   513  0019  22B6               	fcall	_init
   514  001A                     l1484:
   515                           
   516                           ;main.c: 79:     PORTBbits.RB3 = 1;
   517  001A  1283               	bcf	3,5	;RP0=0, select bank0
   518  001B  1303               	bcf	3,6	;RP1=0, select bank0
   519  001C  1586               	bsf	6,3	;volatile
   520  001D                     l1486:
   521                           
   522                           ;main.c: 80:     PORTBbits.RB4 = 1;
   523  001D  1606               	bsf	6,4	;volatile
   524  001E                     l1488:
   525                           
   526                           ;main.c: 81:     PORTBbits.RB5 = 1;
   527  001E  1686               	bsf	6,5	;volatile
   528  001F                     l1490:
   529                           
   530                           ;main.c: 82:     PORTBbits.RB6 = 1;
   531  001F  1706               	bsf	6,6	;volatile
   532  0020                     l1492:
   533                           
   534                           ;main.c: 83:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   535  0020  3006               	movlw	6
   536  0021  1283               	bcf	3,5	;RP0=0, select bank0
   537  0022  1303               	bcf	3,6	;RP1=0, select bank0
   538  0023  00B8               	movwf	??_main+2
   539  0024  3013               	movlw	19
   540  0025  00B7               	movwf	??_main+1
   541  0026  30AD               	movlw	173
   542  0027  00B6               	movwf	??_main
   543  0028                     u1117:
   544  0028  0BB6               	decfsz	??_main,f
   545  0029  2828               	goto	u1117
   546  002A  0BB7               	decfsz	??_main+1,f
   547  002B  2828               	goto	u1117
   548  002C  0BB8               	decfsz	??_main+2,f
   549  002D  2828               	goto	u1117
   550  002E  0000               	nop
   551  002F                     l1494:
   552                           
   553                           ;main.c: 84:     PORTBbits.RB3 = 0;
   554  002F  1283               	bcf	3,5	;RP0=0, select bank0
   555  0030  1303               	bcf	3,6	;RP1=0, select bank0
   556  0031  1186               	bcf	6,3	;volatile
   557  0032                     l1496:
   558                           
   559                           ;main.c: 85:     PORTBbits.RB4 = 0;
   560  0032  1206               	bcf	6,4	;volatile
   561  0033                     l1498:
   562                           
   563                           ;main.c: 86:     PORTBbits.RB5 = 0;
   564  0033  1286               	bcf	6,5	;volatile
   565  0034                     l1500:
   566                           
   567                           ;main.c: 87:     PORTBbits.RB6 = 0;
   568  0034  1306               	bcf	6,6	;volatile
   569  0035                     l1502:
   570                           
   571                           ;main.c: 89:     int detect_on = 0;
   572  0035  01BA               	clrf	main@detect_on
   573  0036  01BB               	clrf	main@detect_on+1
   574  0037                     l1504:
   575                           
   576                           ;main.c: 90:     Servo_Init();
   577  0037  22D4               	fcall	_Servo_Init
   578  0038                     l1506:
   579  0038                     l1508:
   580                           
   581                           ;main.c: 93:     PORTBbits.RB6 = 1;
   582  0038  1283               	bcf	3,5	;RP0=0, select bank0
   583  0039  1303               	bcf	3,6	;RP1=0, select bank0
   584  003A  1706               	bsf	6,6	;volatile
   585  003B                     l1510:
   586                           
   587                           ;main.c: 96:         if(PORTAbits.RA3 == 1 && detect_on == 0 ){
   588  003B  1283               	bcf	3,5	;RP0=0, select bank0
   589  003C  1303               	bcf	3,6	;RP1=0, select bank0
   590  003D  1D85               	btfss	5,3	;volatile
   591  003E  2840               	goto	u1051
   592  003F  2841               	goto	u1050
   593  0040                     u1051:
   594  0040  2854               	goto	l1520
   595  0041                     u1050:
   596  0041                     l1512:
   597  0041  083A               	movf	main@detect_on,w
   598  0042  043B               	iorwf	main@detect_on+1,w
   599  0043  1D03               	btfss	3,2
   600  0044  2846               	goto	u1061
   601  0045  2847               	goto	u1060
   602  0046                     u1061:
   603  0046  2854               	goto	l1520
   604  0047                     u1060:
   605  0047                     l1514:
   606                           
   607                           ;main.c: 97:             PORTBbits.RB6 = 0;
   608  0047  1306               	bcf	6,6	;volatile
   609  0048                     l1516:
   610                           
   611                           ;main.c: 99:             UARTSendString("x\0", 16);
   612  0048  3010               	movlw	16
   613  0049  00B6               	movwf	??_main
   614  004A  0836               	movf	??_main,w
   615  004B  00F5               	movwf	UARTSendString@max_length
   616  004C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   617  004D  223B               	fcall	_UARTSendString
   618  004E                     l1518:
   619                           
   620                           ;main.c: 100:             detect_on = 1;
   621  004E  3001               	movlw	1
   622  004F  1283               	bcf	3,5	;RP0=0, select bank0
   623  0050  1303               	bcf	3,6	;RP1=0, select bank0
   624  0051  00BA               	movwf	main@detect_on
   625  0052  3000               	movlw	0
   626  0053  00BB               	movwf	main@detect_on+1
   627  0054                     l1520:
   628                           
   629                           ;main.c: 124:         if(PORTAbits.RA0 == 1){
   630  0054  1C05               	btfss	5,0	;volatile
   631  0055  2857               	goto	u1071
   632  0056  2858               	goto	u1070
   633  0057                     u1071:
   634  0057  2859               	goto	l87
   635  0058                     u1070:
   636  0058                     l1522:
   637                           
   638                           ;main.c: 125:             PORTBbits.RB3 = 0;
   639  0058  1186               	bcf	6,3	;volatile
   640  0059                     l87:	
   641                           ;main.c: 126:         }
   642                           
   643                           
   644                           ;main.c: 127:         if(PORTAbits.RA1 == 1){
   645  0059  1C85               	btfss	5,1	;volatile
   646  005A  285C               	goto	u1081
   647  005B  285D               	goto	u1080
   648  005C                     u1081:
   649  005C  285E               	goto	l88
   650  005D                     u1080:
   651  005D                     l1524:
   652                           
   653                           ;main.c: 128:             PORTBbits.RB4 = 0;
   654  005D  1206               	bcf	6,4	;volatile
   655  005E                     l88:	
   656                           ;main.c: 129:         }
   657                           
   658                           
   659                           ;main.c: 130:         if(PORTAbits.RA2 == 1){
   660  005E  1D05               	btfss	5,2	;volatile
   661  005F  2861               	goto	u1091
   662  0060  2862               	goto	u1090
   663  0061                     u1091:
   664  0061  2863               	goto	l1528
   665  0062                     u1090:
   666  0062                     l1526:
   667                           
   668                           ;main.c: 131:             PORTBbits.RB5 = 0;
   669  0062  1286               	bcf	6,5	;volatile
   670  0063                     l1528:
   671                           
   672                           ;main.c: 134:         if(UARTDataReady() > 0){
   673  0063  22EA               	fcall	_UARTDataReady
   674  0064  0875               	movf	?_UARTDataReady+1,w
   675  0065  3A80               	xorlw	128
   676  0066  00FF               	movwf	btemp+1
   677  0067  3080               	movlw	128
   678  0068  027F               	subwf	btemp+1,w
   679  0069  1D03               	skipz
   680  006A  286D               	goto	u1105
   681  006B  3001               	movlw	1
   682  006C  0274               	subwf	?_UARTDataReady,w
   683  006D                     u1105:
   684  006D  1C03               	skipc
   685  006E  2870               	goto	u1101
   686  006F  2871               	goto	u1100
   687  0070                     u1101:
   688  0070  283B               	goto	l1510
   689  0071                     u1100:
   690  0071                     l1530:
   691                           
   692                           ;main.c: 149:             letra = UARTReadChar();
   693  0071  2318               	fcall	_UARTReadChar
   694  0072  1283               	bcf	3,5	;RP0=0, select bank0
   695  0073  1303               	bcf	3,6	;RP1=0, select bank0
   696  0074  00B6               	movwf	??_main
   697  0075  0836               	movf	??_main,w
   698  0076  00B9               	movwf	main@letra
   699                           
   700                           ;main.c: 151:             switch (letra){
   701  0077  28AD               	goto	l1558
   702  0078                     l92:	
   703                           ;main.c: 152:                 case 'a':
   704                           
   705                           
   706                           ;main.c: 154:                     PORTBbits.RB3 = 1;
   707  0078  1586               	bsf	6,3	;volatile
   708  0079                     l1532:
   709                           
   710                           ;main.c: 155:                     Servo_8_Write(0);
   711  0079  3000               	movlw	0
   712  007A  2294               	fcall	_Servo_8_Write
   713  007B                     l1534:
   714                           
   715                           ;main.c: 156:                     UARTSendString("y\0", 16);
   716  007B  3010               	movlw	16
   717  007C  1283               	bcf	3,5	;RP0=0, select bank0
   718  007D  1303               	bcf	3,6	;RP1=0, select bank0
   719  007E  00B6               	movwf	??_main
   720  007F  0836               	movf	??_main,w
   721  0080  00F5               	movwf	UARTSendString@max_length
   722  0081  3004               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   723  0082  223B               	fcall	_UARTSendString
   724  0083                     l1536:
   725                           
   726                           ;main.c: 157:                     PORTBbits.RB6 = 1;
   727  0083  1283               	bcf	3,5	;RP0=0, select bank0
   728  0084  1303               	bcf	3,6	;RP1=0, select bank0
   729  0085  1706               	bsf	6,6	;volatile
   730  0086                     l1538:
   731                           
   732                           ;main.c: 158:                     detect_on = 0;
   733  0086  01BA               	clrf	main@detect_on
   734  0087  01BB               	clrf	main@detect_on+1
   735                           
   736                           ;main.c: 159:                     break;
   737  0088  283B               	goto	l1510
   738  0089                     l94:	
   739                           ;main.c: 160:                 case 'b':
   740                           
   741                           
   742                           ;main.c: 162:                     PORTBbits.RB3 = 0;
   743  0089  1186               	bcf	6,3	;volatile
   744                           
   745                           ;main.c: 163:                     break;
   746  008A  283B               	goto	l1510
   747  008B                     l95:	
   748                           ;main.c: 164:                 case 'c':
   749                           
   750                           
   751                           ;main.c: 166:                     PORTBbits.RB4 = 1;
   752  008B  1606               	bsf	6,4	;volatile
   753  008C                     l1540:
   754                           
   755                           ;main.c: 167:                     Servo_8_Write(90);
   756  008C  305A               	movlw	90
   757  008D  2294               	fcall	_Servo_8_Write
   758  008E                     l1542:
   759                           
   760                           ;main.c: 168:                     UARTSendString("y\0", 16);
   761  008E  3010               	movlw	16
   762  008F  1283               	bcf	3,5	;RP0=0, select bank0
   763  0090  1303               	bcf	3,6	;RP1=0, select bank0
   764  0091  00B6               	movwf	??_main
   765  0092  0836               	movf	??_main,w
   766  0093  00F5               	movwf	UARTSendString@max_length
   767  0094  3004               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   768  0095  223B               	fcall	_UARTSendString
   769  0096                     l1544:
   770                           
   771                           ;main.c: 169:                     PORTBbits.RB6 = 1;
   772  0096  1283               	bcf	3,5	;RP0=0, select bank0
   773  0097  1303               	bcf	3,6	;RP1=0, select bank0
   774  0098  1706               	bsf	6,6	;volatile
   775  0099  2886               	goto	l1538
   776  009A                     l96:	
   777                           ;main.c: 172:                 case 'd':
   778                           
   779                           
   780                           ;main.c: 174:                     PORTBbits.RB4 = 0;
   781  009A  1206               	bcf	6,4	;volatile
   782                           
   783                           ;main.c: 175:                     break;
   784  009B  283B               	goto	l1510
   785  009C                     l97:	
   786                           ;main.c: 176:                 case 'e':
   787                           
   788                           
   789                           ;main.c: 178:                     PORTBbits.RB5 = 1;
   790  009C  1686               	bsf	6,5	;volatile
   791  009D                     l1548:
   792                           
   793                           ;main.c: 179:                     Servo_8_Write(180);
   794  009D  30B4               	movlw	180
   795  009E  2294               	fcall	_Servo_8_Write
   796  009F                     l1550:
   797                           
   798                           ;main.c: 180:                     UARTSendString("y\0", 16);
   799  009F  3010               	movlw	16
   800  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   801  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   802  00A2  00B6               	movwf	??_main
   803  00A3  0836               	movf	??_main,w
   804  00A4  00F5               	movwf	UARTSendString@max_length
   805  00A5  3004               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   806  00A6  223B               	fcall	_UARTSendString
   807  00A7                     l1552:
   808                           
   809                           ;main.c: 181:                     PORTBbits.RB6 = 1;
   810  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   811  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   812  00A9  1706               	bsf	6,6	;volatile
   813  00AA  2886               	goto	l1538
   814  00AB                     l98:	
   815                           ;main.c: 184:                 case 'f':
   816                           
   817                           
   818                           ;main.c: 186:                     PORTBbits.RB5 = 0;
   819  00AB  1286               	bcf	6,5	;volatile
   820                           
   821                           ;main.c: 187:                     break;
   822  00AC  283B               	goto	l1510
   823  00AD                     l1558:
   824  00AD  0839               	movf	main@letra,w
   825  00AE  00B6               	movwf	??_main
   826  00AF  01B7               	clrf	??_main+1
   827                           
   828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   829                           ; Switch size 1, requested type "simple"
   830                           ; Number of cases is 1, Range of values is 0 to 0
   831                           ; switch strategies available:
   832                           ; Name         Instructions Cycles
   833                           ; simple_byte            4     3 (average)
   834                           ; direct_byte            7     6 (fixed)
   835                           ; jumptable            260     6 (fixed)
   836                           ;	Chosen strategy is simple_byte
   837  00B0  0837               	movf	??_main+1,w
   838  00B1  3A00               	xorlw	0	; case 0
   839  00B2  1903               	skipnz
   840  00B3  28B5               	goto	l1596
   841  00B4  283B               	goto	l1510
   842  00B5                     l1596:
   843                           
   844                           ; Switch size 1, requested type "simple"
   845                           ; Number of cases is 6, Range of values is 97 to 102
   846                           ; switch strategies available:
   847                           ; Name         Instructions Cycles
   848                           ; direct_byte           15     9 (fixed)
   849                           ; simple_byte           19    10 (average)
   850                           ; jumptable            263     9 (fixed)
   851                           ;	Chosen strategy is simple_byte
   852  00B5  0836               	movf	??_main,w
   853  00B6  3A61               	xorlw	97	; case 97
   854  00B7  1903               	skipnz
   855  00B8  2878               	goto	l92
   856  00B9  3A03               	xorlw	3	; case 98
   857  00BA  1903               	skipnz
   858  00BB  2889               	goto	l94
   859  00BC  3A01               	xorlw	1	; case 99
   860  00BD  1903               	skipnz
   861  00BE  288B               	goto	l95
   862  00BF  3A07               	xorlw	7	; case 100
   863  00C0  1903               	skipnz
   864  00C1  289A               	goto	l96
   865  00C2  3A01               	xorlw	1	; case 101
   866  00C3  1903               	skipnz
   867  00C4  289C               	goto	l97
   868  00C5  3A03               	xorlw	3	; case 102
   869  00C6  1903               	skipnz
   870  00C7  28AB               	goto	l98
   871  00C8  283B               	goto	l1510
   872  00C9  280A               	ljmp	start
   873  00CA                     __end_of_main:
   874                           
   875                           	psect	text1
   876  02B6                     __ptext1:	
   877 ;; *************** function _init *****************
   878 ;; Defined at:
   879 ;;		line 42 in file "main.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0, pclath, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   893 ;;      Params:         0       0       0       0
   894 ;;      Locals:         0       0       0       0
   895 ;;      Temps:          0       0       0       0
   896 ;;      Totals:         0       0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; Hardware stack levels required when called: 3
   900 ;; This function calls:
   901 ;;		_UARTInit
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907  02B6                     _init:	
   908                           ;psect for function _init
   909                           
   910  02B6                     l1456:	
   911                           ;incstack = 0
   912                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   913                           
   914                           
   915                           ;main.c: 52:     CMCONbits.CM0 = 1;
   916  02B6  1283               	bcf	3,5	;RP0=0, select bank0
   917  02B7  1303               	bcf	3,6	;RP1=0, select bank0
   918  02B8  141F               	bsf	31,0	;volatile
   919                           
   920                           ;main.c: 53:     CMCONbits.CM1 = 1;
   921  02B9  149F               	bsf	31,1	;volatile
   922                           
   923                           ;main.c: 54:     CMCONbits.CM2 = 1;
   924  02BA  151F               	bsf	31,2	;volatile
   925                           
   926                           ;main.c: 59:     TRISAbits.TRISA0 = 1;
   927  02BB  1683               	bsf	3,5	;RP0=1, select bank1
   928  02BC  1303               	bcf	3,6	;RP1=0, select bank1
   929  02BD  1405               	bsf	5,0	;volatile
   930                           
   931                           ;main.c: 60:     TRISAbits.TRISA1 = 1;
   932  02BE  1485               	bsf	5,1	;volatile
   933                           
   934                           ;main.c: 61:     TRISAbits.TRISA2 = 1;
   935  02BF  1505               	bsf	5,2	;volatile
   936                           
   937                           ;main.c: 62:     TRISAbits.TRISA3 = 1;
   938  02C0  1585               	bsf	5,3	;volatile
   939                           
   940                           ;main.c: 64:     TRISBbits.TRISB3 = 0;
   941  02C1  1186               	bcf	6,3	;volatile
   942                           
   943                           ;main.c: 65:     TRISBbits.TRISB4 = 0;
   944  02C2  1206               	bcf	6,4	;volatile
   945                           
   946                           ;main.c: 66:     TRISBbits.TRISB5 = 0;
   947  02C3  1286               	bcf	6,5	;volatile
   948                           
   949                           ;main.c: 67:     TRISBbits.TRISB6 = 0;
   950  02C4  1306               	bcf	6,6	;volatile
   951  02C5                     l1458:
   952                           
   953                           ;main.c: 68:     PORTB = 0;
   954  02C5  1283               	bcf	3,5	;RP0=0, select bank0
   955  02C6  1303               	bcf	3,6	;RP1=0, select bank0
   956  02C7  0186               	clrf	6	;volatile
   957  02C8                     l1460:
   958                           
   959                           ;main.c: 70:     UARTInit(9600, 1);
   960  02C8  3000               	movlw	0
   961  02C9  00B0               	movwf	UARTInit@baud_rate+3
   962  02CA  3000               	movlw	0
   963  02CB  00AF               	movwf	UARTInit@baud_rate+2
   964  02CC  3025               	movlw	37
   965  02CD  00AE               	movwf	UARTInit@baud_rate+1
   966  02CE  3080               	movlw	128
   967  02CF  00AD               	movwf	UARTInit@baud_rate
   968  02D0  01B1               	clrf	UARTInit@BRGH
   969  02D1  0AB1               	incf	UARTInit@BRGH,f
   970  02D2  20CA               	fcall	_UARTInit
   971  02D3                     l80:
   972  02D3  0008               	return
   973  02D4                     __end_of_init:
   974                           
   975                           	psect	text2
   976  00CA                     __ptext2:	
   977 ;; *************** function _UARTInit *****************
   978 ;; Defined at:
   979 ;;		line 15 in file "UART.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  baud_rate       4   13[BANK0 ] const unsigned long 
   982 ;;  BRGH            1   17[BANK0 ] const unsigned char 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   994 ;;      Params:         0       5       0       0
   995 ;;      Locals:         0       0       0       0
   996 ;;      Temps:          0       4       0       0
   997 ;;      Totals:         0       9       0       0
   998 ;;Total ram usage:        9 bytes
   999 ;; Hardware stack levels used: 1
  1000 ;; Hardware stack levels required when called: 2
  1001 ;; This function calls:
  1002 ;;		___lldiv
  1003 ;; This function is called by:
  1004 ;;		_init
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008  00CA                     _UARTInit:	
  1009                           ;psect for function _UARTInit
  1010                           
  1011  00CA                     l1384:	
  1012                           ;incstack = 0
  1013                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  1014                           
  1015                           
  1016                           ;UART.c: 17:     if (BRGH == 0) {
  1017  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1018  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1019  00CC  0831               	movf	UARTInit@BRGH,w
  1020  00CD  1D03               	btfss	3,2
  1021  00CE  28D0               	goto	u901
  1022  00CF  28D1               	goto	u900
  1023  00D0                     u901:
  1024  00D0  28FC               	goto	l1390
  1025  00D1                     u900:
  1026  00D1                     l1386:
  1027                           
  1028                           ;UART.c: 18:         SPBRG = 4000000/(64*baud_rate) - 1;
  1029  00D1  082D               	movf	UARTInit@baud_rate,w
  1030  00D2  00B2               	movwf	??_UARTInit
  1031  00D3  082E               	movf	UARTInit@baud_rate+1,w
  1032  00D4  00B3               	movwf	??_UARTInit+1
  1033  00D5  082F               	movf	UARTInit@baud_rate+2,w
  1034  00D6  00B4               	movwf	??_UARTInit+2
  1035  00D7  0830               	movf	UARTInit@baud_rate+3,w
  1036  00D8  00B5               	movwf	??_UARTInit+3
  1037  00D9  3006               	movlw	6
  1038  00DA                     u915:
  1039  00DA  1003               	clrc
  1040  00DB  0DB2               	rlf	??_UARTInit,f
  1041  00DC  0DB3               	rlf	??_UARTInit+1,f
  1042  00DD  0DB4               	rlf	??_UARTInit+2,f
  1043  00DE  0DB5               	rlf	??_UARTInit+3,f
  1044  00DF                     u910:
  1045  00DF  3EFF               	addlw	-1
  1046  00E0  1D03               	skipz
  1047  00E1  28DA               	goto	u915
  1048  00E2  0835               	movf	??_UARTInit+3,w
  1049  00E3  00A3               	movwf	___lldiv@divisor+3
  1050  00E4  0834               	movf	??_UARTInit+2,w
  1051  00E5  00A2               	movwf	___lldiv@divisor+2
  1052  00E6  0833               	movf	??_UARTInit+1,w
  1053  00E7  00A1               	movwf	___lldiv@divisor+1
  1054  00E8  0832               	movf	??_UARTInit,w
  1055  00E9  00A0               	movwf	___lldiv@divisor
  1056  00EA  3000               	movlw	0
  1057  00EB  00A7               	movwf	___lldiv@dividend+3
  1058  00EC  303D               	movlw	61
  1059  00ED  00A6               	movwf	___lldiv@dividend+2
  1060  00EE  3009               	movlw	9
  1061  00EF  00A5               	movwf	___lldiv@dividend+1
  1062  00F0  3000               	movlw	0
  1063  00F1  00A4               	movwf	___lldiv@dividend
  1064  00F2  219F               	fcall	___lldiv
  1065  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1066  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1067  00F5  0820               	movf	?___lldiv,w
  1068  00F6  3EFF               	addlw	255
  1069  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  1070  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  1071  00F9  0099               	movwf	25	;volatile
  1072  00FA                     l1388:
  1073                           
  1074                           ;UART.c: 19:         TXSTAbits.BRGH = 0;
  1075  00FA  1118               	bcf	24,2	;volatile
  1076                           
  1077                           ;UART.c: 20:     } else {
  1078  00FB  2926               	goto	l1394
  1079  00FC                     l1390:
  1080                           
  1081                           ;UART.c: 21:         SPBRG = 4000000/(16*baud_rate) - 1;
  1082  00FC  082D               	movf	UARTInit@baud_rate,w
  1083  00FD  00B2               	movwf	??_UARTInit
  1084  00FE  082E               	movf	UARTInit@baud_rate+1,w
  1085  00FF  00B3               	movwf	??_UARTInit+1
  1086  0100  082F               	movf	UARTInit@baud_rate+2,w
  1087  0101  00B4               	movwf	??_UARTInit+2
  1088  0102  0830               	movf	UARTInit@baud_rate+3,w
  1089  0103  00B5               	movwf	??_UARTInit+3
  1090  0104  3004               	movlw	4
  1091  0105                     u925:
  1092  0105  1003               	clrc
  1093  0106  0DB2               	rlf	??_UARTInit,f
  1094  0107  0DB3               	rlf	??_UARTInit+1,f
  1095  0108  0DB4               	rlf	??_UARTInit+2,f
  1096  0109  0DB5               	rlf	??_UARTInit+3,f
  1097  010A                     u920:
  1098  010A  3EFF               	addlw	-1
  1099  010B  1D03               	skipz
  1100  010C  2905               	goto	u925
  1101  010D  0835               	movf	??_UARTInit+3,w
  1102  010E  00A3               	movwf	___lldiv@divisor+3
  1103  010F  0834               	movf	??_UARTInit+2,w
  1104  0110  00A2               	movwf	___lldiv@divisor+2
  1105  0111  0833               	movf	??_UARTInit+1,w
  1106  0112  00A1               	movwf	___lldiv@divisor+1
  1107  0113  0832               	movf	??_UARTInit,w
  1108  0114  00A0               	movwf	___lldiv@divisor
  1109  0115  3000               	movlw	0
  1110  0116  00A7               	movwf	___lldiv@dividend+3
  1111  0117  303D               	movlw	61
  1112  0118  00A6               	movwf	___lldiv@dividend+2
  1113  0119  3009               	movlw	9
  1114  011A  00A5               	movwf	___lldiv@dividend+1
  1115  011B  3000               	movlw	0
  1116  011C  00A4               	movwf	___lldiv@dividend
  1117  011D  219F               	fcall	___lldiv
  1118  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1119  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0120  0820               	movf	?___lldiv,w
  1121  0121  3EFF               	addlw	255
  1122  0122  1683               	bsf	3,5	;RP0=1, select bank1
  1123  0123  1303               	bcf	3,6	;RP1=0, select bank1
  1124  0124  0099               	movwf	25	;volatile
  1125  0125                     l1392:
  1126                           
  1127                           ;UART.c: 22:         TXSTAbits.BRGH = 1;
  1128  0125  1518               	bsf	24,2	;volatile
  1129  0126                     l1394:
  1130                           
  1131                           ;UART.c: 26:     TXSTAbits.TX9 = 0;
  1132  0126  1318               	bcf	24,6	;volatile
  1133  0127                     l1396:
  1134                           
  1135                           ;UART.c: 27:     TXSTAbits.TXEN = 1;
  1136  0127  1698               	bsf	24,5	;volatile
  1137  0128                     l1398:
  1138                           
  1139                           ;UART.c: 28:     TXSTAbits.SYNC = 0;
  1140  0128  1218               	bcf	24,4	;volatile
  1141  0129                     l1400:
  1142                           
  1143                           ;UART.c: 29:     TXSTAbits.TRMT = 1;
  1144  0129  1498               	bsf	24,1	;volatile
  1145  012A                     l1402:
  1146                           
  1147                           ;UART.c: 32:     RCSTAbits.SPEN = 1;
  1148  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1149  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1150  012C  1798               	bsf	24,7	;volatile
  1151  012D                     l1404:
  1152                           
  1153                           ;UART.c: 33:     RCSTAbits.RX9 = 0;
  1154  012D  1318               	bcf	24,6	;volatile
  1155  012E                     l1406:
  1156                           
  1157                           ;UART.c: 34:     RCSTAbits.CREN = 1;
  1158  012E  1618               	bsf	24,4	;volatile
  1159  012F                     l1408:
  1160                           
  1161                           ;UART.c: 35:     RCSTAbits.FERR = 0;
  1162  012F  1118               	bcf	24,2	;volatile
  1163  0130                     l1410:
  1164                           
  1165                           ;UART.c: 36:     RCSTAbits.OERR = 0;
  1166  0130  1098               	bcf	24,1	;volatile
  1167  0131                     l1412:
  1168                           
  1169                           ;UART.c: 42:     TRISBbits.TRISB1 = 1;
  1170  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1171  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1172  0133  1486               	bsf	6,1	;volatile
  1173  0134                     l1414:
  1174                           
  1175                           ;UART.c: 43:     TRISBbits.TRISB2 = 1;
  1176  0134  1506               	bsf	6,2	;volatile
  1177  0135                     l19:
  1178  0135  0008               	return
  1179  0136                     __end_of_UARTInit:
  1180                           
  1181                           	psect	text3
  1182  019F                     __ptext3:	
  1183 ;; *************** function ___lldiv *****************
  1184 ;; Defined at:
  1185 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  divisor         4    0[BANK0 ] unsigned long 
  1188 ;;  dividend        4    4[BANK0 ] unsigned long 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  quotient        4    8[BANK0 ] unsigned long 
  1191 ;;  counter         1   12[BANK0 ] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  4    0[BANK0 ] unsigned long 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1201 ;;      Params:         0       8       0       0
  1202 ;;      Locals:         0       5       0       0
  1203 ;;      Temps:          1       0       0       0
  1204 ;;      Totals:         1      13       0       0
  1205 ;;Total ram usage:       14 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 1
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_UARTInit
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215  019F                     ___lldiv:	
  1216                           ;psect for function ___lldiv
  1217                           
  1218  019F                     l1360:	
  1219                           ;incstack = 0
  1220                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1221                           
  1222  019F  3000               	movlw	0
  1223  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1224  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1225  01A2  00AB               	movwf	___lldiv@quotient+3
  1226  01A3  3000               	movlw	0
  1227  01A4  00AA               	movwf	___lldiv@quotient+2
  1228  01A5  3000               	movlw	0
  1229  01A6  00A9               	movwf	___lldiv@quotient+1
  1230  01A7  3000               	movlw	0
  1231  01A8  00A8               	movwf	___lldiv@quotient
  1232  01A9  0823               	movf	___lldiv@divisor+3,w
  1233  01AA  0422               	iorwf	___lldiv@divisor+2,w
  1234  01AB  0421               	iorwf	___lldiv@divisor+1,w
  1235  01AC  0420               	iorwf	___lldiv@divisor,w
  1236  01AD  1903               	skipnz
  1237  01AE  29B0               	goto	u831
  1238  01AF  29B1               	goto	u830
  1239  01B0                     u831:
  1240  01B0  29FE               	goto	l1380
  1241  01B1                     u830:
  1242  01B1                     l1362:
  1243  01B1  01AC               	clrf	___lldiv@counter
  1244  01B2  0AAC               	incf	___lldiv@counter,f
  1245  01B3  29C1               	goto	l1366
  1246  01B4                     l1364:
  1247  01B4  3001               	movlw	1
  1248  01B5  00F4               	movwf	??___lldiv
  1249  01B6                     u845:
  1250  01B6  1003               	clrc
  1251  01B7  0DA0               	rlf	___lldiv@divisor,f
  1252  01B8  0DA1               	rlf	___lldiv@divisor+1,f
  1253  01B9  0DA2               	rlf	___lldiv@divisor+2,f
  1254  01BA  0DA3               	rlf	___lldiv@divisor+3,f
  1255  01BB  0BF4               	decfsz	??___lldiv,f
  1256  01BC  29B6               	goto	u845
  1257  01BD  3001               	movlw	1
  1258  01BE  00F4               	movwf	??___lldiv
  1259  01BF  0874               	movf	??___lldiv,w
  1260  01C0  07AC               	addwf	___lldiv@counter,f
  1261  01C1                     l1366:
  1262  01C1  1FA3               	btfss	___lldiv@divisor+3,7
  1263  01C2  29C4               	goto	u851
  1264  01C3  29C5               	goto	u850
  1265  01C4                     u851:
  1266  01C4  29B4               	goto	l1364
  1267  01C5                     u850:
  1268  01C5                     l1368:
  1269  01C5  3001               	movlw	1
  1270  01C6  00F4               	movwf	??___lldiv
  1271  01C7                     u865:
  1272  01C7  1003               	clrc
  1273  01C8  0DA8               	rlf	___lldiv@quotient,f
  1274  01C9  0DA9               	rlf	___lldiv@quotient+1,f
  1275  01CA  0DAA               	rlf	___lldiv@quotient+2,f
  1276  01CB  0DAB               	rlf	___lldiv@quotient+3,f
  1277  01CC  0BF4               	decfsz	??___lldiv,f
  1278  01CD  29C7               	goto	u865
  1279  01CE                     l1370:
  1280  01CE  0823               	movf	___lldiv@divisor+3,w
  1281  01CF  0227               	subwf	___lldiv@dividend+3,w
  1282  01D0  1D03               	skipz
  1283  01D1  29DC               	goto	u875
  1284  01D2  0822               	movf	___lldiv@divisor+2,w
  1285  01D3  0226               	subwf	___lldiv@dividend+2,w
  1286  01D4  1D03               	skipz
  1287  01D5  29DC               	goto	u875
  1288  01D6  0821               	movf	___lldiv@divisor+1,w
  1289  01D7  0225               	subwf	___lldiv@dividend+1,w
  1290  01D8  1D03               	skipz
  1291  01D9  29DC               	goto	u875
  1292  01DA  0820               	movf	___lldiv@divisor,w
  1293  01DB  0224               	subwf	___lldiv@dividend,w
  1294  01DC                     u875:
  1295  01DC  1C03               	skipc
  1296  01DD  29DF               	goto	u871
  1297  01DE  29E0               	goto	u870
  1298  01DF                     u871:
  1299  01DF  29EF               	goto	l1376
  1300  01E0                     u870:
  1301  01E0                     l1372:
  1302  01E0  0820               	movf	___lldiv@divisor,w
  1303  01E1  02A4               	subwf	___lldiv@dividend,f
  1304  01E2  0821               	movf	___lldiv@divisor+1,w
  1305  01E3  1C03               	skipc
  1306  01E4  0F21               	incfsz	___lldiv@divisor+1,w
  1307  01E5  02A5               	subwf	___lldiv@dividend+1,f
  1308  01E6  0822               	movf	___lldiv@divisor+2,w
  1309  01E7  1C03               	skipc
  1310  01E8  0F22               	incfsz	___lldiv@divisor+2,w
  1311  01E9  02A6               	subwf	___lldiv@dividend+2,f
  1312  01EA  0823               	movf	___lldiv@divisor+3,w
  1313  01EB  1C03               	skipc
  1314  01EC  0F23               	incfsz	___lldiv@divisor+3,w
  1315  01ED  02A7               	subwf	___lldiv@dividend+3,f
  1316  01EE                     l1374:
  1317  01EE  1428               	bsf	___lldiv@quotient,0
  1318  01EF                     l1376:
  1319  01EF  3001               	movlw	1
  1320  01F0                     u885:
  1321  01F0  1003               	clrc
  1322  01F1  0CA3               	rrf	___lldiv@divisor+3,f
  1323  01F2  0CA2               	rrf	___lldiv@divisor+2,f
  1324  01F3  0CA1               	rrf	___lldiv@divisor+1,f
  1325  01F4  0CA0               	rrf	___lldiv@divisor,f
  1326  01F5  3EFF               	addlw	-1
  1327  01F6  1D03               	skipz
  1328  01F7  29F0               	goto	u885
  1329  01F8                     l1378:
  1330  01F8  3001               	movlw	1
  1331  01F9  02AC               	subwf	___lldiv@counter,f
  1332  01FA  1D03               	btfss	3,2
  1333  01FB  29FD               	goto	u891
  1334  01FC  29FE               	goto	u890
  1335  01FD                     u891:
  1336  01FD  29C5               	goto	l1368
  1337  01FE                     u890:
  1338  01FE                     l1380:
  1339  01FE  082B               	movf	___lldiv@quotient+3,w
  1340  01FF  00A3               	movwf	?___lldiv+3
  1341  0200  082A               	movf	___lldiv@quotient+2,w
  1342  0201  00A2               	movwf	?___lldiv+2
  1343  0202  0829               	movf	___lldiv@quotient+1,w
  1344  0203  00A1               	movwf	?___lldiv+1
  1345  0204  0828               	movf	___lldiv@quotient,w
  1346  0205  00A0               	movwf	?___lldiv
  1347  0206                     l254:
  1348  0206  0008               	return
  1349  0207                     __end_of___lldiv:
  1350                           
  1351                           	psect	text4
  1352  023B                     __ptext4:	
  1353 ;; *************** function _UARTSendString *****************
  1354 ;; Defined at:
  1355 ;;		line 60 in file "UART.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  str             1    wreg     PTR const unsigned char 
  1358 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(3), 
  1359 ;;  max_length      1    5[COMMON] const unsigned char 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  str             1    0[BANK0 ] PTR const unsigned char 
  1362 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(3), 
  1363 ;;  i               2    1[BANK0 ] int 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1373 ;;      Params:         1       0       0       0
  1374 ;;      Locals:         0       3       0       0
  1375 ;;      Temps:          1       0       0       0
  1376 ;;      Totals:         2       3       0       0
  1377 ;;Total ram usage:        5 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 2
  1380 ;; This function calls:
  1381 ;;		_UARTSendChar
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387  023B                     _UARTSendString:	
  1388                           ;psect for function _UARTSendString
  1389                           
  1390                           
  1391                           ;incstack = 0
  1392                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1393                           ;UARTSendString@str stored from wreg
  1394  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1395  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1396  023D  00A0               	movwf	UARTSendString@str
  1397  023E                     l1438:
  1398                           
  1399                           ;UART.c: 61:     int i = 0;
  1400  023E  01A1               	clrf	UARTSendString@i
  1401  023F  01A2               	clrf	UARTSendString@i+1
  1402                           
  1403                           ;UART.c: 62:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  1404  0240  01A1               	clrf	UARTSendString@i
  1405  0241  01A2               	clrf	UARTSendString@i+1
  1406  0242  2A50               	goto	l1444
  1407  0243                     l1440:
  1408                           
  1409                           ;UART.c: 63:         UARTSendChar(str[i]);
  1410  0243  0821               	movf	UARTSendString@i,w
  1411  0244  0720               	addwf	UARTSendString@str,w
  1412  0245  0084               	movwf	4
  1413  0246  2300               	fcall	stringdir
  1414  0247  230C               	fcall	_UARTSendChar
  1415  0248                     l1442:
  1416                           
  1417                           ;UART.c: 64:     }
  1418  0248  3001               	movlw	1
  1419  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1420  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1421  024B  07A1               	addwf	UARTSendString@i,f
  1422  024C  1803               	skipnc
  1423  024D  0AA2               	incf	UARTSendString@i+1,f
  1424  024E  3000               	movlw	0
  1425  024F  07A2               	addwf	UARTSendString@i+1,f
  1426  0250                     l1444:
  1427  0250  0822               	movf	UARTSendString@i+1,w
  1428  0251  3A80               	xorlw	128
  1429  0252  00F6               	movwf	??_UARTSendString
  1430  0253  3080               	movlw	128
  1431  0254  0276               	subwf	??_UARTSendString,w
  1432  0255  1D03               	skipz
  1433  0256  2A59               	goto	u985
  1434  0257  0875               	movf	UARTSendString@max_length,w
  1435  0258  0221               	subwf	UARTSendString@i,w
  1436  0259                     u985:
  1437  0259  1803               	skipnc
  1438  025A  2A5C               	goto	u981
  1439  025B  2A5D               	goto	u980
  1440  025C                     u981:
  1441  025C  2A68               	goto	l33
  1442  025D                     u980:
  1443  025D                     l1446:
  1444  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1445  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1446  025F  0821               	movf	UARTSendString@i,w
  1447  0260  0720               	addwf	UARTSendString@str,w
  1448  0261  0084               	movwf	4
  1449  0262  2300               	fcall	stringdir
  1450  0263  3A00               	xorlw	0
  1451  0264  1D03               	skipz
  1452  0265  2A67               	goto	u991
  1453  0266  2A68               	goto	u990
  1454  0267                     u991:
  1455  0267  2A43               	goto	l1440
  1456  0268                     u990:
  1457  0268                     l33:
  1458  0268  0008               	return
  1459  0269                     __end_of_UARTSendString:
  1460                           
  1461                           	psect	text5
  1462  030C                     __ptext5:	
  1463 ;; *************** function _UARTSendChar *****************
  1464 ;; Defined at:
  1465 ;;		line 50 in file "UART.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  c               1    wreg     const unsigned char 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  c               1    4[COMMON] const unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1479 ;;      Params:         0       0       0       0
  1480 ;;      Locals:         1       0       0       0
  1481 ;;      Temps:          0       0       0       0
  1482 ;;      Totals:         1       0       0       0
  1483 ;;Total ram usage:        1 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; Hardware stack levels required when called: 1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_UARTSendString
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493  030C                     _UARTSendChar:	
  1494                           ;psect for function _UARTSendChar
  1495                           
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in _UARTSendChar: [wreg]
  1499                           ;UARTSendChar@c stored from wreg
  1500  030C  00F4               	movwf	UARTSendChar@c
  1501  030D                     l1416:
  1502  030D                     l22:	
  1503                           ;UART.c: 51:     while (TXSTAbits.TRMT == 0);
  1504                           
  1505  030D  1683               	bsf	3,5	;RP0=1, select bank1
  1506  030E  1303               	bcf	3,6	;RP1=0, select bank1
  1507  030F  1C98               	btfss	24,1	;volatile
  1508  0310  2B12               	goto	u931
  1509  0311  2B13               	goto	u930
  1510  0312                     u931:
  1511  0312  2B0D               	goto	l22
  1512  0313                     u930:
  1513  0313                     l1418:
  1514                           
  1515                           ;UART.c: 52:     TXREG = c;
  1516  0313  0874               	movf	UARTSendChar@c,w
  1517  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0316  0099               	movwf	25	;volatile
  1520  0317                     l25:
  1521  0317  0008               	return
  1522  0318                     __end_of_UARTSendChar:
  1523                           
  1524                           	psect	text6
  1525  0318                     __ptext6:	
  1526 ;; *************** function _UARTReadChar *****************
  1527 ;; Defined at:
  1528 ;;		line 79 in file "UART.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      unsigned char 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1542 ;;      Params:         0       0       0       0
  1543 ;;      Locals:         0       0       0       0
  1544 ;;      Temps:          0       0       0       0
  1545 ;;      Totals:         0       0       0       0
  1546 ;;Total ram usage:        0 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 2
  1549 ;; This function calls:
  1550 ;;		_UARTDataReady
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;;		_UARTReadString
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557  0318                     _UARTReadChar:	
  1558                           ;psect for function _UARTReadChar
  1559                           
  1560  0318                     l1448:	
  1561                           ;incstack = 0
  1562                           ; Regs used in _UARTReadChar: [wreg+status,2+status,0+pclath+cstack]
  1563                           
  1564  0318                     l1450:	
  1565                           ;UART.c: 80:     while (!UARTDataReady());
  1566                           
  1567  0318  22EA               	fcall	_UARTDataReady
  1568  0319  0874               	movf	?_UARTDataReady,w
  1569  031A  0475               	iorwf	?_UARTDataReady+1,w
  1570  031B  1903               	btfsc	3,2
  1571  031C  2B1E               	goto	u1001
  1572  031D  2B1F               	goto	u1000
  1573  031E                     u1001:
  1574  031E  2B18               	goto	l1450
  1575  031F                     u1000:
  1576  031F                     l1452:
  1577                           
  1578                           ;UART.c: 81:     return RCREG;
  1579  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0321  081A               	movf	26,w	;volatile
  1582  0322                     l42:
  1583  0322  0008               	return
  1584  0323                     __end_of_UARTReadChar:
  1585                           
  1586                           	psect	text7
  1587  02EA                     __ptext7:	
  1588 ;; *************** function _UARTDataReady *****************
  1589 ;; Defined at:
  1590 ;;		line 71 in file "UART.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  2    4[COMMON] short 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1604 ;;      Params:         2       0       0       0
  1605 ;;      Locals:         0       0       0       0
  1606 ;;      Temps:          0       3       0       0
  1607 ;;      Totals:         2       3       0       0
  1608 ;;Total ram usage:        5 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 1
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_UARTReadChar
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619  02EA                     _UARTDataReady:	
  1620                           ;psect for function _UARTDataReady
  1621                           
  1622  02EA                     l1420:	
  1623                           ;incstack = 0
  1624                           ; Regs used in _UARTDataReady: [wreg+status,2+status,0]
  1625                           
  1626                           
  1627                           ;UART.c: 72:     return PIR1bits.RCIF ? 1 : 0;
  1628  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1629  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1630  02EC  0E0C               	swapf	12,w	;volatile
  1631  02ED  00A0               	movwf	??_UARTDataReady
  1632  02EE  0C20               	rrf	??_UARTDataReady,w
  1633  02EF  3901               	andlw	1
  1634  02F0  00A1               	movwf	??_UARTDataReady+1
  1635  02F1  01A2               	clrf	??_UARTDataReady+2
  1636  02F2  0821               	movf	??_UARTDataReady+1,w
  1637  02F3  00F4               	movwf	?_UARTDataReady
  1638  02F4  0822               	movf	??_UARTDataReady+2,w
  1639  02F5  00F5               	movwf	?_UARTDataReady+1
  1640  02F6                     l36:
  1641  02F6  0008               	return
  1642  02F7                     __end_of_UARTDataReady:
  1643                           
  1644                           	psect	text8
  1645  02D4                     __ptext8:	
  1646 ;; *************** function _Servo_Init *****************
  1647 ;; Defined at:
  1648 ;;		line 16 in file "servo.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1662 ;;      Params:         0       0       0       0
  1663 ;;      Locals:         0       0       0       0
  1664 ;;      Temps:          0       0       0       0
  1665 ;;      Totals:         0       0       0       0
  1666 ;;Total ram usage:        0 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676  02D4                     _Servo_Init:	
  1677                           ;psect for function _Servo_Init
  1678                           
  1679  02D4                     l1188:	
  1680                           ;incstack = 0
  1681                           ; Regs used in _Servo_Init: [wreg+status,2+status,0]
  1682                           
  1683                           
  1684                           ;servo.c: 54:     TRISBbits.TRISB7 = 0;
  1685  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  1686  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  1687  02D6  1386               	bcf	6,7	;volatile
  1688                           
  1689                           ;servo.c: 55:     PORTBbits.RB7 = 0;
  1690  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1691  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1692  02D9  1386               	bcf	6,7	;volatile
  1693  02DA                     l1190:
  1694                           
  1695                           ;servo.c: 58:     INTCON = 0;
  1696  02DA  018B               	clrf	11	;volatile
  1697  02DB                     l1192:
  1698                           
  1699                           ;servo.c: 59:     INTCONbits.GIE = 1;
  1700  02DB  178B               	bsf	11,7	;volatile
  1701  02DC                     l1194:
  1702                           
  1703                           ;servo.c: 60:     INTCONbits.T0IE = 1;
  1704  02DC  168B               	bsf	11,5	;volatile
  1705  02DD                     l1196:
  1706                           
  1707                           ;servo.c: 61:     INTCONbits.T0IF = 0;
  1708  02DD  110B               	bcf	11,2	;volatile
  1709  02DE                     l1198:
  1710                           
  1711                           ;servo.c: 65:     OPTION_REGbits.T0CS=0;
  1712  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  1713  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  1714  02E0  1281               	bcf	1,5	;volatile
  1715  02E1                     l1200:
  1716                           
  1717                           ;servo.c: 66:     OPTION_REGbits.T0SE = 0;
  1718  02E1  1201               	bcf	1,4	;volatile
  1719  02E2                     l1202:
  1720                           
  1721                           ;servo.c: 67:     OPTION_REGbits.PSA=0;
  1722  02E2  1181               	bcf	1,3	;volatile
  1723  02E3                     l1204:
  1724                           
  1725                           ;servo.c: 68:     OPTION_REGbits.PS=0b000;
  1726  02E3  30F8               	movlw	-8
  1727  02E4  0581               	andwf	1,f	;volatile
  1728  02E5                     l1206:
  1729                           
  1730                           ;servo.c: 70:     TMR0=5;
  1731  02E5  3005               	movlw	5
  1732  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1733  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1734  02E8  0081               	movwf	1	;volatile
  1735  02E9                     l120:
  1736  02E9  0008               	return
  1737  02EA                     __end_of_Servo_Init:
  1738                           
  1739                           	psect	text9
  1740  0294                     __ptext9:	
  1741 ;; *************** function _Servo_8_Write *****************
  1742 ;; Defined at:
  1743 ;;		line 124 in file "servo.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  ang             1    wreg     unsigned char 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  ang             1   14[BANK0 ] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, pclath, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1757 ;;      Params:         0       0       0       0
  1758 ;;      Locals:         0       1       0       0
  1759 ;;      Temps:          0       3       0       0
  1760 ;;      Totals:         0       4       0       0
  1761 ;;Total ram usage:        4 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 2
  1764 ;; This function calls:
  1765 ;;		___awdiv
  1766 ;;		___wmul
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772  0294                     _Servo_8_Write:	
  1773                           ;psect for function _Servo_8_Write
  1774                           
  1775                           
  1776                           ;incstack = 0
  1777                           ; Regs used in _Servo_8_Write: [wreg+status,2+status,0+pclath+cstack]
  1778                           ;Servo_8_Write@ang stored from wreg
  1779  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0296  00AE               	movwf	Servo_8_Write@ang
  1782  0297                     l1462:
  1783                           
  1784                           ;servo.c: 124: void Servo_8_Write(unsigned char ang);servo.c: 125: {;servo.c: 126:     d
      +                          ata_s[7] = (ang-0)*(4 -1)/(180-0)+1;
  1785  0297  30B4               	movlw	180
  1786  0298  00A2               	movwf	___awdiv@divisor
  1787  0299  3000               	movlw	0
  1788  029A  00A3               	movwf	___awdiv@divisor+1
  1789  029B  082E               	movf	Servo_8_Write@ang,w
  1790  029C  00AB               	movwf	??_Servo_8_Write
  1791  029D  01AC               	clrf	??_Servo_8_Write+1
  1792  029E  082B               	movf	??_Servo_8_Write,w
  1793  029F  00F4               	movwf	___wmul@multiplier
  1794  02A0  082C               	movf	??_Servo_8_Write+1,w
  1795  02A1  00F5               	movwf	___wmul@multiplier+1
  1796  02A2  3003               	movlw	3
  1797  02A3  00F6               	movwf	___wmul@multiplicand
  1798  02A4  3000               	movlw	0
  1799  02A5  00F7               	movwf	___wmul@multiplicand+1
  1800  02A6  2269               	fcall	___wmul
  1801  02A7  0875               	movf	?___wmul+1,w
  1802  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1803  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1804  02AA  00A5               	movwf	___awdiv@dividend+1
  1805  02AB  0874               	movf	?___wmul,w
  1806  02AC  00A4               	movwf	___awdiv@dividend
  1807  02AD  2136               	fcall	___awdiv
  1808  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1809  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1810  02B0  0822               	movf	?___awdiv,w
  1811  02B1  3E01               	addlw	1
  1812  02B2  00AD               	movwf	??_Servo_8_Write+2
  1813  02B3  082D               	movf	??_Servo_8_Write+2,w
  1814  02B4  00C3               	movwf	_data_s+7
  1815  02B5                     l123:
  1816  02B5  0008               	return
  1817  02B6                     __end_of_Servo_8_Write:
  1818                           
  1819                           	psect	text10
  1820  0269                     __ptext10:	
  1821 ;; *************** function ___wmul *****************
  1822 ;; Defined at:
  1823 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  multiplier      2    4[COMMON] unsigned int 
  1826 ;;  multiplicand    2    6[COMMON] unsigned int 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  product         2    0[BANK0 ] unsigned int 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2    4[COMMON] unsigned int 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1838 ;;      Params:         4       0       0       0
  1839 ;;      Locals:         0       2       0       0
  1840 ;;      Temps:          0       0       0       0
  1841 ;;      Totals:         4       2       0       0
  1842 ;;Total ram usage:        6 bytes
  1843 ;; Hardware stack levels used: 1
  1844 ;; Hardware stack levels required when called: 1
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_Servo_8_Write
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852  0269                     ___wmul:	
  1853                           ;psect for function ___wmul
  1854                           
  1855  0269                     l1424:	
  1856                           ;incstack = 0
  1857                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1858                           
  1859  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1860  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1861  026B  01A0               	clrf	___wmul@product
  1862  026C  01A1               	clrf	___wmul@product+1
  1863  026D                     l1426:
  1864  026D  1C74               	btfss	___wmul@multiplier,0
  1865  026E  2A70               	goto	u941
  1866  026F  2A71               	goto	u940
  1867  0270                     u941:
  1868  0270  2A79               	goto	l218
  1869  0271                     u940:
  1870  0271                     l1428:
  1871  0271  0876               	movf	___wmul@multiplicand,w
  1872  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0274  07A0               	addwf	___wmul@product,f
  1875  0275  1803               	skipnc
  1876  0276  0AA1               	incf	___wmul@product+1,f
  1877  0277  0877               	movf	___wmul@multiplicand+1,w
  1878  0278  07A1               	addwf	___wmul@product+1,f
  1879  0279                     l218:
  1880  0279  3001               	movlw	1
  1881  027A                     u955:
  1882  027A  1003               	clrc
  1883  027B  0DF6               	rlf	___wmul@multiplicand,f
  1884  027C  0DF7               	rlf	___wmul@multiplicand+1,f
  1885  027D  3EFF               	addlw	-1
  1886  027E  1D03               	skipz
  1887  027F  2A7A               	goto	u955
  1888  0280                     l1430:
  1889  0280  3001               	movlw	1
  1890  0281                     u965:
  1891  0281  1003               	clrc
  1892  0282  0CF5               	rrf	___wmul@multiplier+1,f
  1893  0283  0CF4               	rrf	___wmul@multiplier,f
  1894  0284  3EFF               	addlw	-1
  1895  0285  1D03               	skipz
  1896  0286  2A81               	goto	u965
  1897  0287                     l1432:
  1898  0287  0874               	movf	___wmul@multiplier,w
  1899  0288  0475               	iorwf	___wmul@multiplier+1,w
  1900  0289  1D03               	btfss	3,2
  1901  028A  2A8C               	goto	u971
  1902  028B  2A8D               	goto	u970
  1903  028C                     u971:
  1904  028C  2A6D               	goto	l1426
  1905  028D                     u970:
  1906  028D                     l1434:
  1907  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1908  028E  1303               	bcf	3,6	;RP1=0, select bank0
  1909  028F  0821               	movf	___wmul@product+1,w
  1910  0290  00F5               	movwf	?___wmul+1
  1911  0291  0820               	movf	___wmul@product,w
  1912  0292  00F4               	movwf	?___wmul
  1913  0293                     l220:
  1914  0293  0008               	return
  1915  0294                     __end_of___wmul:
  1916                           
  1917                           	psect	text11
  1918  0136                     __ptext11:	
  1919 ;; *************** function ___awdiv *****************
  1920 ;; Defined at:
  1921 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  divisor         2    2[BANK0 ] int 
  1924 ;;  dividend        2    4[BANK0 ] int 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  quotient        2    9[BANK0 ] int 
  1927 ;;  sign            1    8[BANK0 ] unsigned char 
  1928 ;;  counter         1    7[BANK0 ] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  2    2[BANK0 ] int 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1938 ;;      Params:         0       4       0       0
  1939 ;;      Locals:         0       4       0       0
  1940 ;;      Temps:          0       1       0       0
  1941 ;;      Totals:         0       9       0       0
  1942 ;;Total ram usage:        9 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 1
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_Servo_8_Write
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952  0136                     ___awdiv:	
  1953                           ;psect for function ___awdiv
  1954                           
  1955  0136                     l1120:	
  1956                           ;incstack = 0
  1957                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1958                           
  1959  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1961  0138  01A8               	clrf	___awdiv@sign
  1962  0139                     l1122:
  1963  0139  1FA3               	btfss	___awdiv@divisor+1,7
  1964  013A  293C               	goto	u571
  1965  013B  293D               	goto	u570
  1966  013C                     u571:
  1967  013C  2944               	goto	l1128
  1968  013D                     u570:
  1969  013D                     l1124:
  1970  013D  09A2               	comf	___awdiv@divisor,f
  1971  013E  09A3               	comf	___awdiv@divisor+1,f
  1972  013F  0AA2               	incf	___awdiv@divisor,f
  1973  0140  1903               	skipnz
  1974  0141  0AA3               	incf	___awdiv@divisor+1,f
  1975  0142                     l1126:
  1976  0142  01A8               	clrf	___awdiv@sign
  1977  0143  0AA8               	incf	___awdiv@sign,f
  1978  0144                     l1128:
  1979  0144  1FA5               	btfss	___awdiv@dividend+1,7
  1980  0145  2947               	goto	u581
  1981  0146  2948               	goto	u580
  1982  0147                     u581:
  1983  0147  2951               	goto	l1134
  1984  0148                     u580:
  1985  0148                     l1130:
  1986  0148  09A4               	comf	___awdiv@dividend,f
  1987  0149  09A5               	comf	___awdiv@dividend+1,f
  1988  014A  0AA4               	incf	___awdiv@dividend,f
  1989  014B  1903               	skipnz
  1990  014C  0AA5               	incf	___awdiv@dividend+1,f
  1991  014D                     l1132:
  1992  014D  3001               	movlw	1
  1993  014E  00A6               	movwf	??___awdiv
  1994  014F  0826               	movf	??___awdiv,w
  1995  0150  06A8               	xorwf	___awdiv@sign,f
  1996  0151                     l1134:
  1997  0151  01A9               	clrf	___awdiv@quotient
  1998  0152  01AA               	clrf	___awdiv@quotient+1
  1999  0153                     l1136:
  2000  0153  0822               	movf	___awdiv@divisor,w
  2001  0154  0423               	iorwf	___awdiv@divisor+1,w
  2002  0155  1903               	btfsc	3,2
  2003  0156  2958               	goto	u591
  2004  0157  2959               	goto	u590
  2005  0158                     u591:
  2006  0158  2990               	goto	l1156
  2007  0159                     u590:
  2008  0159                     l1138:
  2009  0159  01A7               	clrf	___awdiv@counter
  2010  015A  0AA7               	incf	___awdiv@counter,f
  2011  015B  2967               	goto	l1144
  2012  015C                     l1140:
  2013  015C  3001               	movlw	1
  2014  015D                     u605:
  2015  015D  1003               	clrc
  2016  015E  0DA2               	rlf	___awdiv@divisor,f
  2017  015F  0DA3               	rlf	___awdiv@divisor+1,f
  2018  0160  3EFF               	addlw	-1
  2019  0161  1D03               	skipz
  2020  0162  295D               	goto	u605
  2021  0163                     l1142:
  2022  0163  3001               	movlw	1
  2023  0164  00A6               	movwf	??___awdiv
  2024  0165  0826               	movf	??___awdiv,w
  2025  0166  07A7               	addwf	___awdiv@counter,f
  2026  0167                     l1144:
  2027  0167  1FA3               	btfss	___awdiv@divisor+1,7
  2028  0168  296A               	goto	u611
  2029  0169  296B               	goto	u610
  2030  016A                     u611:
  2031  016A  295C               	goto	l1140
  2032  016B                     u610:
  2033  016B                     l1146:
  2034  016B  3001               	movlw	1
  2035  016C                     u625:
  2036  016C  1003               	clrc
  2037  016D  0DA9               	rlf	___awdiv@quotient,f
  2038  016E  0DAA               	rlf	___awdiv@quotient+1,f
  2039  016F  3EFF               	addlw	-1
  2040  0170  1D03               	skipz
  2041  0171  296C               	goto	u625
  2042  0172  0823               	movf	___awdiv@divisor+1,w
  2043  0173  0225               	subwf	___awdiv@dividend+1,w
  2044  0174  1D03               	skipz
  2045  0175  2978               	goto	u635
  2046  0176  0822               	movf	___awdiv@divisor,w
  2047  0177  0224               	subwf	___awdiv@dividend,w
  2048  0178                     u635:
  2049  0178  1C03               	skipc
  2050  0179  297B               	goto	u631
  2051  017A  297C               	goto	u630
  2052  017B                     u631:
  2053  017B  2983               	goto	l1152
  2054  017C                     u630:
  2055  017C                     l1148:
  2056  017C  0822               	movf	___awdiv@divisor,w
  2057  017D  02A4               	subwf	___awdiv@dividend,f
  2058  017E  0823               	movf	___awdiv@divisor+1,w
  2059  017F  1C03               	skipc
  2060  0180  03A5               	decf	___awdiv@dividend+1,f
  2061  0181  02A5               	subwf	___awdiv@dividend+1,f
  2062  0182                     l1150:
  2063  0182  1429               	bsf	___awdiv@quotient,0
  2064  0183                     l1152:
  2065  0183  3001               	movlw	1
  2066  0184                     u645:
  2067  0184  1003               	clrc
  2068  0185  0CA3               	rrf	___awdiv@divisor+1,f
  2069  0186  0CA2               	rrf	___awdiv@divisor,f
  2070  0187  3EFF               	addlw	-1
  2071  0188  1D03               	skipz
  2072  0189  2984               	goto	u645
  2073  018A                     l1154:
  2074  018A  3001               	movlw	1
  2075  018B  02A7               	subwf	___awdiv@counter,f
  2076  018C  1D03               	btfss	3,2
  2077  018D  298F               	goto	u651
  2078  018E  2990               	goto	u650
  2079  018F                     u651:
  2080  018F  296B               	goto	l1146
  2081  0190                     u650:
  2082  0190                     l1156:
  2083  0190  0828               	movf	___awdiv@sign,w
  2084  0191  1903               	btfsc	3,2
  2085  0192  2994               	goto	u661
  2086  0193  2995               	goto	u660
  2087  0194                     u661:
  2088  0194  299A               	goto	l1160
  2089  0195                     u660:
  2090  0195                     l1158:
  2091  0195  09A9               	comf	___awdiv@quotient,f
  2092  0196  09AA               	comf	___awdiv@quotient+1,f
  2093  0197  0AA9               	incf	___awdiv@quotient,f
  2094  0198  1903               	skipnz
  2095  0199  0AAA               	incf	___awdiv@quotient+1,f
  2096  019A                     l1160:
  2097  019A  082A               	movf	___awdiv@quotient+1,w
  2098  019B  00A3               	movwf	?___awdiv+1
  2099  019C  0829               	movf	___awdiv@quotient,w
  2100  019D  00A2               	movwf	?___awdiv
  2101  019E                     l371:
  2102  019E  0008               	return
  2103  019F                     __end_of___awdiv:
  2104                           
  2105                           	psect	text12
  2106  0207                     __ptext12:	
  2107 ;; *************** function _TMR0_ISR *****************
  2108 ;; Defined at:
  2109 ;;		line 131 in file "servo.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2123 ;;      Params:         0       0       0       0
  2124 ;;      Locals:         0       0       0       0
  2125 ;;      Temps:          4       0       0       0
  2126 ;;      Totals:         4       0       0       0
  2127 ;;Total ram usage:        4 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		Interrupt level 1
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136  0207                     _TMR0_ISR:	
  2137                           ;psect for function _TMR0_ISR
  2138                           
  2139  0207                     i1l1312:
  2140                           
  2141                           ;servo.c: 133:     if(INTCONbits.T0IF == 1)
  2142  0207  1D0B               	btfss	11,2	;volatile
  2143  0208  2A0A               	goto	u80_21
  2144  0209  2A0B               	goto	u80_20
  2145  020A                     u80_21:
  2146  020A  2A34               	goto	i1l132
  2147  020B                     u80_20:
  2148  020B                     i1l1314:
  2149                           
  2150                           ;servo.c: 134:     {;servo.c: 135:         cont_sr = cont_sr + 1;
  2151  020B  0878               	movf	_cont_sr,w
  2152  020C  3E01               	addlw	1
  2153  020D  00F8               	movwf	_cont_sr
  2154  020E  0879               	movf	_cont_sr+1,w
  2155  020F  1803               	skipnc
  2156  0210  3E01               	addlw	1
  2157  0211  3E00               	addlw	0
  2158  0212  00F9               	movwf	_cont_sr+1
  2159  0213                     i1l1316:
  2160                           
  2161                           ;servo.c: 136:         if(cont_sr > 41){
  2162  0213  3000               	movlw	0
  2163  0214  0279               	subwf	_cont_sr+1,w
  2164  0215  302A               	movlw	42
  2165  0216  1903               	skipnz
  2166  0217  0278               	subwf	_cont_sr,w
  2167  0218  1C03               	skipc
  2168  0219  2A1B               	goto	u81_21
  2169  021A  2A1C               	goto	u81_20
  2170  021B                     u81_21:
  2171  021B  2A1E               	goto	i1l1320
  2172  021C                     u81_20:
  2173  021C                     i1l1318:
  2174                           
  2175                           ;servo.c: 137:             cont_sr = 0;
  2176  021C  01F8               	clrf	_cont_sr
  2177  021D  01F9               	clrf	_cont_sr+1
  2178  021E                     i1l1320:
  2179                           
  2180                           ;servo.c: 168:         if(cont_sr < data_s[7]){PORTBbits.RB7 = 1;} else{PORTBbits.RB7 = 
      +                          0;}
  2181  021E  1283               	bcf	3,5	;RP0=0, select bank0
  2182  021F  1303               	bcf	3,6	;RP1=0, select bank0
  2183  0220  0843               	movf	_data_s+7,w
  2184  0221  00F0               	movwf	??_TMR0_ISR
  2185  0222  01F1               	clrf	??_TMR0_ISR+1
  2186  0223  0871               	movf	??_TMR0_ISR+1,w
  2187  0224  0279               	subwf	_cont_sr+1,w
  2188  0225  1D03               	skipz
  2189  0226  2A29               	goto	u82_25
  2190  0227  0870               	movf	??_TMR0_ISR,w
  2191  0228  0278               	subwf	_cont_sr,w
  2192  0229                     u82_25:
  2193  0229  1803               	skipnc
  2194  022A  2A2C               	goto	u82_21
  2195  022B  2A2D               	goto	u82_20
  2196  022C                     u82_21:
  2197  022C  2A2F               	goto	i1l130
  2198  022D                     u82_20:
  2199  022D                     i1l1322:
  2200  022D  1786               	bsf	6,7	;volatile
  2201  022E  2A30               	goto	i1l1324
  2202  022F                     i1l130:
  2203  022F  1386               	bcf	6,7	;volatile
  2204  0230                     i1l1324:
  2205                           
  2206                           ;servo.c: 171:         TMR0 = 5;
  2207  0230  3005               	movlw	5
  2208  0231  0081               	movwf	1	;volatile
  2209  0232                     i1l1326:
  2210                           
  2211                           ;servo.c: 172:         INTCONbits.T0IF = 0;
  2212  0232  110B               	bcf	11,2	;volatile
  2213  0233                     i1l1328:
  2214                           
  2215                           ;servo.c: 173:         INTCONbits.T0IE = 1;
  2216  0233  168B               	bsf	11,5	;volatile
  2217  0234                     i1l132:
  2218  0234  0873               	movf	??_TMR0_ISR+3,w
  2219  0235  008A               	movwf	10
  2220  0236  0E72               	swapf	??_TMR0_ISR+2,w
  2221  0237  0083               	movwf	3
  2222  0238  0EFE               	swapf	btemp,f
  2223  0239  0E7E               	swapf	btemp,w
  2224  023A  0009               	retfie
  2225  023B                     __end_of_TMR0_ISR:
  2226  007E                     btemp	set	126	;btemp
  2227  007E                     wtemp0	set	126
  2228                           
  2229                           	psect	intentry
  2230  0004                     __pintentry:	
  2231                           ;incstack = 0
  2232                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0]
  2233                           
  2234  0004                     interrupt_function:
  2235  007E                     saved_w	set	btemp
  2236  0004  00FE               	movwf	btemp
  2237  0005  0E03               	swapf	3,w
  2238  0006  00F2               	movwf	??_TMR0_ISR+2
  2239  0007  080A               	movf	10,w
  2240  0008  00F3               	movwf	??_TMR0_ISR+3
  2241  0009  2A07               	ljmp	_TMR0_ISR
  2242                           
  2243                           	psect	idloc
  2244                           
  2245                           ;Config register IDLOC0 @ 0x2000
  2246                           ;	unspecified, using default values
  2247  2000                     	org	8192
  2248  2000  3FFF               	dw	16383
  2249                           
  2250                           ;Config register IDLOC1 @ 0x2001
  2251                           ;	unspecified, using default values
  2252  2001                     	org	8193
  2253  2001  3FFF               	dw	16383
  2254                           
  2255                           ;Config register IDLOC2 @ 0x2002
  2256                           ;	unspecified, using default values
  2257  2002                     	org	8194
  2258  2002  3FFF               	dw	16383
  2259                           
  2260                           ;Config register IDLOC3 @ 0x2003
  2261                           ;	unspecified, using default values
  2262  2003                     	org	8195
  2263  2003  3FFF               	dw	16383
  2264                           
  2265                           	psect	config
  2266                           
  2267                           ;Config register CONFIG @ 0x2007
  2268                           ;	Oscillator Selection bits
  2269                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  2270                           ;	Watchdog Timer Enable bit
  2271                           ;	WDTE = OFF, WDT disabled
  2272                           ;	Power-up Timer Enable bit
  2273                           ;	PWRTE = ON, PWRT enabled
  2274                           ;	RA5/MCLR/VPP Pin Function Select bit
  2275                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  2276                           ;	Brown-out Detect Enable bit
  2277                           ;	BOREN = ON, BOD enabled
  2278                           ;	Low-Voltage Programming Enable bit
  2279                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  2280                           ;	Data EE Memory Code Protection bit
  2281                           ;	CPD = OFF, Data memory code protection off
  2282                           ;	Flash Program Memory Code Protection bit
  2283                           ;	CP = OFF, Code protection off
  2284  2007                     	org	8199
  2285  2007  3F50               	dw	16208

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     28      36
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _UARTInit->___lldiv
    _UARTSendString->_UARTSendChar
    _UARTReadChar->_UARTDataReady
    _Servo_8_Write->___wmul
    ___awdiv->___wmul

Critical Paths under _TMR0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _init->_UARTInit
    _UARTInit->___lldiv
    _UARTReadChar->_UARTDataReady
    _Servo_8_Write->___awdiv
    ___awdiv->___wmul

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0    2489
                                             22 BANK0      6     6      0
                      _Servo_8_Write
                         _Servo_Init
                      _UARTDataReady
                       _UARTReadChar
                     _UARTSendString
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     874
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     874
                                             13 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     601
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       5     4      1     730
                                              5 COMMON     2     1      1
                                              0 BANK0      3     3      0
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTReadChar                                         0     0      0       0
                      _UARTDataReady
 ---------------------------------------------------------------------------------
 (2) _UARTDataReady                                        5     3      2       0
                                              4 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Servo_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo_8_Write                                        4     4      0     799
                                             11 BANK0      4     4      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              2 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Servo_8_Write
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _Servo_Init
   _UARTDataReady
   _UARTReadChar
     _UARTDataReady
   _UARTSendString
     _UARTSendChar
   _init
     _UARTInit
       ___lldiv

 _TMR0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     1C      24       3       45.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      2E      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Dec 10 15:22:34 2022

       UARTInit@baud_rate 002D                         pc 0002                        l22 030D  
                      l25 0317                        l33 0268                        l42 0322  
                      l19 0135                        l36 02F6                        l80 02D3  
                      l92 0078                        l94 0089                        l95 008B  
                      l87 0059                        l96 009A                        l88 005E  
                      l97 009C                        l98 00AB              ___awdiv@sign 0028  
                      fsr 0004       ___wmul@multiplicand 0076                       l120 02E9  
                     l123 02B5                       l220 0293                       l218 0279  
                     l254 0206                       l371 019E                       u610 016B  
                     u611 016A                       u605 015D                       u630 017C  
                     u631 017B                       u625 016C                       u650 0190  
                     u570 013D                       u651 018F                       u635 0178  
                     u571 013C                       u660 0195                       u580 0148  
                     u900 00D1                       u661 0194                       u645 0184  
                     u581 0147                       u901 00D0                       u590 0159  
                     u830 01B1                       u910 00DF                       u591 0158  
                     u831 01B0                       u920 010A                       u930 0313  
                     u850 01C5                       u931 0312                       u851 01C4  
                     u915 00DA                       u940 0271                       u941 0270  
                     u845 01B6                       u925 0105                       u870 01E0  
                     u871 01DF                       u865 01C7                       u970 028D  
                     u890 01FE                       u971 028C                       u955 027A  
                     u891 01FD                       u875 01DC                       u980 025D  
                     u965 0281                       u981 025C                       u885 01F0  
                     u990 0268                       u991 0267                       u985 0259  
                     fsr0 0004                      l1120 0136                      l1200 02E1  
                    l1130 0148                      l1122 0139                      l1202 02E2  
                    l1140 015C                      l1132 014D                      l1124 013D  
                    l1204 02E3                      l1150 0182                      l1142 0163  
                    l1134 0151                      l1126 0142                      l1206 02E5  
                    l1160 019A                      l1152 0183                      l1144 0167  
                    l1136 0153                      l1128 0144                      l1400 0129  
                    l1154 018A                      l1146 016B                      l1138 0159  
                    l1410 0130                      l1402 012A                      l1148 017C  
                    l1156 0190                      l1420 02EA                      l1412 0131  
                    l1404 012D                      l1500 0034                      l1158 0195  
                    l1430 0280                      l1190 02DA                      l1414 0134  
                    l1406 012E                      l1510 003B                      l1502 0035  
                    l1432 0287                      l1424 0269                      l1192 02DB  
                    l1416 030D                      l1440 0243                      l1360 019F  
                    l1408 012F                      l1512 0041                      l1520 0054  
                    l1504 0037                      l1434 028D                      l1426 026D  
                    l1194 02DC                      l1450 0318                      l1418 0313  
                    l1442 0248                      l1370 01CE                      l1362 01B1  
                    l1530 0071                      l1522 0058                      l1514 0047  
                    l1506 0038                      l1428 0271                      l1196 02DD  
                    l1188 02D4                      l1452 031F                      l1444 0250  
                    l1372 01E0                      l1364 01B4                      l1380 01FE  
                    l1460 02C8                      l1540 008C                      l1532 0079  
                    l1524 005D                      l1516 0048                      l1508 0038  
                    l1462 0297                      l1198 02DE                      l1446 025D  
                    l1438 023E                      l1374 01EE                      l1366 01C1  
                    l1390 00FC                      l1550 009F                      l1542 008E  
                    l1534 007B                      l1526 0062                      l1518 004E  
                    l1448 0318                      l1376 01EF                      l1368 01C5  
                    l1392 0125                      l1384 00CA                      l1456 02B6  
                    l1552 00A7                      l1544 0096                      l1536 0083  
                    l1528 0063                      l1480 0019                      l1378 01F8  
                    l1394 0126                      l1386 00D1                      l1458 02C5  
                    l1538 0086                      l1490 001F                      l1482 0019  
                    l1396 0127                      l1388 00FA                      l1548 009D  
                    l1492 0020                      l1484 001A                      l1398 0128  
                    l1558 00AD                      l1494 002F                      l1486 001D  
                    l1496 0032                      l1488 001E                      l1498 0033  
                    l1596 00B5                      STR_1 0306                      STR_2 0309  
                    STR_3 0309                      STR_4 0309                      u1000 031F  
                    u1001 031E                      u1100 0071                      u1101 0070  
                    u1105 006D                      u1050 0041                      u1051 0040  
                    u1060 0047                      u1061 0046                      u1117 0028  
                    u1070 0058                      u1071 0057                      u1080 005D  
                    u1081 005C                      u1090 0062                      u1091 0061  
                    _TMR0 0001                      _main 0019                      _init 02B6  
                    btemp 007E                      start 000A                     ?_main 0070  
                   ?_init 0070           __end_of___awdiv 019F           __end_of___lldiv 0207  
         ___awdiv@divisor 0022                     i1l130 022F                     i1l132 0234  
         ___awdiv@counter 0027                     _RCREG 001A                     _SPBRG 0099  
                   _PORTB 0006                     u80_20 020B                     u80_21 020A  
                   u81_20 021C                     u81_21 021B                     u82_20 022D  
                   u82_21 022C                     u82_25 0229                     _TXREG 0019  
        __end_of_UARTInit 0136          __end_of_TMR0_ISR 023B                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 000B  
            __end_of_main 00CA              __end_of_init 02D4                    ??_main 0036  
                  ??_init 0075             main@detect_on 003A     __end_of_UARTDataReady 02F7  
        ___awdiv@dividend 0024                    i1l1320 021E                    i1l1312 0207  
                  i1l1322 022D                    i1l1314 020B                    i1l1324 0230  
                  i1l1316 0213                    i1l1326 0232                    i1l1318 021C  
                  i1l1328 0233                    _INTCON 000B     __end_of_Servo_8_Write 02B6  
                  ___wmul 0269                 ??___awdiv 0026                    _data_s 003C  
               ??___lldiv 0074                _Servo_Init 02D4          ___awdiv@quotient 0029  
                  saved_w 007E   __end_of__initialization 0017            __pcstackCOMMON 0070  
               ?_UARTInit 002D                 ?_TMR0_ISR 0070            _OPTION_REGbits 0081  
UARTSendString@max_length 0075                __pbssBANK0 003C                __pmaintext 0019  
                 ?___wmul 0074                ??_UARTInit 0032                ??_TMR0_ISR 0070  
              __pintentry 0004               ?_Servo_Init 0070             ?_UARTReadChar 0070  
              __stringtab 0300             ?_UARTSendChar 0070                   ___awdiv 0136  
                 ___lldiv 019F                 _CMCONbits 001F            _UARTSendString 023B  
                 __ptext1 02B6                   __ptext2 00CA                   __ptext3 019F  
                 __ptext4 023B                   __ptext5 030C                   __ptext6 0318  
                 __ptext7 02EA                   __ptext8 02D4                   __ptext9 0294  
                 _cont_sr 0078            ??_UARTReadChar 0076      end_of_initialization 0017  
          ??_UARTSendChar 0074           ___lldiv@divisor 0020           ___lldiv@counter 002C  
               _RCSTAbits 0018    __end_of_UARTSendString 0269                 _PORTAbits 0005  
               _PORTBbits 0006                 _TRISAbits 0085                 _TRISBbits 0086  
               _TXSTAbits 0098           ?_UARTSendString 0075            __end_of___wmul 0294  
     start_initialization 000B      __end_of_UARTReadChar 0323                  ??___wmul 0078  
            ??_Servo_Init 0074      __end_of_UARTSendChar 0318               __pbssCOMMON 0078  
               ___latbits 0000             __pcstackBANK0 0020             _UARTDataReady 02EA  
      __end_of_Servo_Init 02EA             _Servo_8_Write 0294             UARTSendChar@c 0074  
                ?___awdiv 0022                  ?___lldiv 0020                 __pstrings 0300  
          ?_UARTDataReady 0074         interrupt_function 0004            ___wmul@product 0020  
         UARTSendString@i 0021            ?_Servo_8_Write 0070                  _PIR1bits 000C  
                _UARTInit 00CA                  _TMR0_ISR 0207               __stringbase 0305  
       ___wmul@multiplier 0074                 main@letra 0039          ??_UARTSendString 0076  
        Servo_8_Write@ang 002E              UARTInit@BRGH 0031        __end_of__stringtab 0306  
         ??_UARTDataReady 0020                  __ptext10 0269                  __ptext11 0136  
                __ptext12 0207              _UARTReadChar 0318              _UARTSendChar 030C  
         ??_Servo_8_Write 002B                _INTCONbits 000B         UARTSendString@str 0020  
                intlevel1 0000          ___lldiv@dividend 0024                 stringcode 0300  
        ___lldiv@quotient 0028                  stringdir 0300                  stringtab 0300  
