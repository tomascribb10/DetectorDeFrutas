

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jul 17 21:02:39 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F628A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  008C                     	;# 
    88  008E                     	;# 
    89  0092                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009F                     	;# 
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  008C                     	;# 
   125  008E                     	;# 
   126  0092                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009F                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  008C                     	;# 
   162  008E                     	;# 
   163  0092                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009F                     	;# 
   171  0005                     _PORTAbits	set	5
   172  0005                     _PORTA	set	5
   173  001F                     _CMCONbits	set	31
   174  001A                     _RCREG	set	26
   175  000C                     _PIR1bits	set	12
   176  0019                     _TXREG	set	25
   177  0018                     _RCSTAbits	set	24
   178  0085                     _TRISA	set	133
   179  0086                     _TRISBbits	set	134
   180  0098                     _TXSTAbits	set	152
   181  0099                     _SPBRG	set	153
   182                           
   183                           	psect	strings
   184  0001                     __pstrings:
   185  0001                     stringtab:
   186  0001                     __stringtab:
   187                           
   188                           ;	String table - string pointers are 1 byte each
   189  0001  1BFF               	btfsc	btemp+1,7
   190  0002  280B               	ljmp	stringcode
   191  0003  1383               	bcf	3,7
   192  0004  187F               	btfsc	btemp+1,0
   193  0005  1783               	bsf	3,7
   194  0006  0800               	movf	0,w
   195  0007  0A84               	incf	4,f
   196  0008  1903               	skipnz
   197  0009  0AFF               	incf	btemp+1,f
   198  000A  0008               	return
   199  000B                     stringcode:
   200  000B                     stringdir:
   201  000B  3000               	movlw	high stringdir
   202  000C  008A               	movwf	10
   203  000D  0804               	movf	4,w
   204  000E  0A84               	incf	4,f
   205  000F  0782               	addwf	2,f
   206  0010                     __stringbase:
   207  0010  3400               	retlw	0
   208  0011                     __end_of__stringtab:
   209  0011                     STR_5:
   210  0011  340A               	retlw	10
   211  0012  340D               	retlw	13
   212  0013  3450               	retlw	80	;'P'
   213  0014  3472               	retlw	114	;'r'
   214  0015  3465               	retlw	101	;'e'
   215  0016  346E               	retlw	110	;'n'
   216  0017  3464               	retlw	100	;'d'
   217  0018  3469               	retlw	105	;'i'
   218  0019  3465               	retlw	101	;'e'
   219  001A  346E               	retlw	110	;'n'
   220  001B  3464               	retlw	100	;'d'
   221  001C  346F               	retlw	111	;'o'
   222  001D  3420               	retlw	32	;' '
   223  001E  344C               	retlw	76	;'L'
   224  001F  3465               	retlw	101	;'e'
   225  0020  3464               	retlw	100	;'d'
   226  0021  3420               	retlw	32	;' '
   227  0022  3400               	retlw	0
   228  0023  3400               	retlw	0
   229  0024                     STR_6:
   230  0024  340A               	retlw	10
   231  0025  340D               	retlw	13
   232  0026  3441               	retlw	65	;'A'
   233  0027  3470               	retlw	112	;'p'
   234  0028  3461               	retlw	97	;'a'
   235  0029  3467               	retlw	103	;'g'
   236  002A  3461               	retlw	97	;'a'
   237  002B  346E               	retlw	110	;'n'
   238  002C  3464               	retlw	100	;'d'
   239  002D  346F               	retlw	111	;'o'
   240  002E  3420               	retlw	32	;' '
   241  002F  344C               	retlw	76	;'L'
   242  0030  3465               	retlw	101	;'e'
   243  0031  3464               	retlw	100	;'d'
   244  0032  3420               	retlw	32	;' '
   245  0033  3400               	retlw	0
   246  0034  3400               	retlw	0
   247  0035                     STR_2:
   248  0035  340A               	retlw	10
   249  0036  340D               	retlw	13
   250  0037  3452               	retlw	82	;'R'
   251  0038  3465               	retlw	101	;'e'
   252  0039  3463               	retlw	99	;'c'
   253  003A  3465               	retlw	101	;'e'
   254  003B  3469               	retlw	105	;'i'
   255  003C  3476               	retlw	118	;'v'
   256  003D  3465               	retlw	101	;'e'
   257  003E  3464               	retlw	100	;'d'
   258  003F  3420               	retlw	32	;' '
   259  0040  3400               	retlw	0
   260  0041  3400               	retlw	0
   261  0042                     STR_3:
   262  0042  3420               	retlw	32	;' '
   263  0043  3462               	retlw	98	;'b'
   264  0044  3479               	retlw	121	;'y'
   265  0045  3474               	retlw	116	;'t'
   266  0046  3465               	retlw	101	;'e'
   267  0047  3473               	retlw	115	;'s'
   268  0048  343A               	retlw	58	;':'
   269  0049  3420               	retlw	32	;' '
   270  004A  3400               	retlw	0
   271  004B  3400               	retlw	0
   272  004C                     STR_4:
   273  004C  340A               	retlw	10
   274  004D  340D               	retlw	13
   275  004E  3400               	retlw	0
   276  004F  3400               	retlw	0
   277  0050                     STR_1:
   278  0050  343E               	retlw	62	;'>'
   279  0051  3420               	retlw	32	;' '
   280  0052  3400               	retlw	0
   281  0053  3400               	retlw	0
   282  0024                     
   283                           	psect	cinit
   284  07FE                     start_initialization:	
   285                           ; #config settings
   286                           
   287  07FE                     __initialization:
   288  07FE                     end_of_initialization:	
   289                           ;End of C runtime variable initialization code
   290                           
   291  07FE                     __end_of__initialization:
   292  07FE  0183               	clrf	3
   293  07FF  2F2A               	ljmp	_main	;jump to C main() function
   294                           
   295                           	psect	cstackCOMMON
   296  0070                     __pcstackCOMMON:
   297  0070                     ?_UARTSendChar:
   298  0070                     ??_UARTSendChar:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_UARTDataReady:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ??_UARTDataReady:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_UARTReadChar:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_init:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_main:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?___lwdiv:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?___lwmod:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0070                     ?___lldiv:	
   323                           ; 2 bytes @ 0x0
   324                           
   325  0070                     UARTSendChar@c:	
   326                           ; 4 bytes @ 0x0
   327                           
   328  0070                     ___lwdiv@divisor:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ___lwmod@divisor:	
   332                           ; 2 bytes @ 0x0
   333                           
   334  0070                     ___lldiv@divisor:	
   335                           ; 2 bytes @ 0x0
   336                           
   337                           
   338                           ; 4 bytes @ 0x0
   339  0070                     	ds	1
   340  0071                     ?_UARTSendString:
   341  0071                     ??_UARTReadChar:	
   342                           ; 1 bytes @ 0x1
   343                           
   344  0071                     ?_UARTReadString:	
   345                           ; 1 bytes @ 0x1
   346                           
   347  0071                     UARTReadString@max_length:	
   348                           ; 1 bytes @ 0x1
   349                           
   350  0071                     UARTSendString@str:	
   351                           ; 1 bytes @ 0x1
   352                           
   353                           
   354                           ; 2 bytes @ 0x1
   355  0071                     	ds	1
   356  0072                     ??_UARTReadString:
   357  0072                     ___lwdiv@dividend:	
   358                           ; 1 bytes @ 0x2
   359                           
   360  0072                     ___lwmod@dividend:	
   361                           ; 2 bytes @ 0x2
   362                           
   363                           
   364                           ; 2 bytes @ 0x2
   365  0072                     	ds	1
   366  0073                     UARTSendString@max_length:
   367                           
   368                           ; 1 bytes @ 0x3
   369  0073                     	ds	1
   370  0074                     ??_UARTSendString:
   371  0074                     ??___lwdiv:	
   372                           ; 1 bytes @ 0x4
   373                           
   374  0074                     ??___lwmod:	
   375                           ; 1 bytes @ 0x4
   376                           
   377  0074                     UARTReadString@buf:	
   378                           ; 1 bytes @ 0x4
   379                           
   380  0074                     ___lldiv@dividend:	
   381                           ; 1 bytes @ 0x4
   382                           
   383                           
   384                           ; 4 bytes @ 0x4
   385  0074                     	ds	1
   386  0075                     UARTReadString@tmp:
   387  0075                     ___lwmod@counter:	
   388                           ; 1 bytes @ 0x5
   389                           
   390  0075                     ___lwdiv@quotient:	
   391                           ; 1 bytes @ 0x5
   392                           
   393                           
   394                           ; 2 bytes @ 0x5
   395  0075                     	ds	1
   396  0076                     UARTReadString@i:
   397                           
   398                           ; 1 bytes @ 0x6
   399  0076                     	ds	1
   400  0077                     ___lwdiv@counter:
   401  0077                     UARTSendString@i:	
   402                           ; 1 bytes @ 0x7
   403                           
   404                           
   405                           ; 2 bytes @ 0x7
   406  0077                     	ds	1
   407  0078                     ?_utoa:
   408  0078                     ??___lldiv:	
   409                           ; 1 bytes @ 0x8
   410                           
   411  0078                     utoa@val:	
   412                           ; 1 bytes @ 0x8
   413                           
   414                           
   415                           ; 2 bytes @ 0x8
   416  0078                     	ds	1
   417  0079                     ___lldiv@quotient:
   418                           
   419                           ; 4 bytes @ 0x9
   420  0079                     	ds	1
   421  007A                     utoa@base:
   422                           
   423                           ; 2 bytes @ 0xA
   424  007A                     	ds	2
   425  007C                     ??_utoa:
   426                           
   427                           ; 1 bytes @ 0xC
   428  007C                     	ds	1
   429  007D                     ??_itoa:
   430  007D                     ___lldiv@counter:	
   431                           ; 1 bytes @ 0xD
   432                           
   433                           
   434                           ; 1 bytes @ 0xD
   435  007D                     	ds	1
   436  007E                     ??_init:
   437                           
   438                           	psect	cstackBANK0
   439  0020                     __pcstackBANK0:	
   440                           ; 1 bytes @ 0xE
   441                           
   442  0020                     ?_UARTInit:
   443  0020                     utoa@v:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0020                     UARTInit@baud_rate:	
   447                           ; 2 bytes @ 0x0
   448                           
   449                           
   450                           ; 4 bytes @ 0x0
   451  0020                     	ds	2
   452  0022                     utoa@c:
   453                           
   454                           ; 1 bytes @ 0x2
   455  0022                     	ds	1
   456  0023                     utoa@buf:
   457                           
   458                           ; 1 bytes @ 0x3
   459  0023                     	ds	1
   460  0024                     ?_itoa:
   461  0024                     UARTInit@BRGH:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0024                     itoa@val:	
   465                           ; 1 bytes @ 0x4
   466                           
   467                           
   468                           ; 2 bytes @ 0x4
   469  0024                     	ds	1
   470  0025                     ??_UARTInit:
   471                           
   472                           ; 1 bytes @ 0x5
   473  0025                     	ds	1
   474  0026                     itoa@base:
   475                           
   476                           ; 2 bytes @ 0x6
   477  0026                     	ds	2
   478  0028                     itoa@buf:
   479                           
   480                           ; 1 bytes @ 0x8
   481  0028                     	ds	1
   482  0029                     ??_main:
   483                           
   484                           ; 1 bytes @ 0x9
   485  0029                     	ds	3
   486  002C                     main@readBuf:
   487                           
   488                           ; 16 bytes @ 0xC
   489  002C                     	ds	16
   490  003C                     main@tmpBuf:
   491                           
   492                           ; 8 bytes @ 0x1C
   493  003C                     	ds	8
   494  0044                     main@letra:
   495                           
   496                           ; 1 bytes @ 0x24
   497  0044                     	ds	1
   498  0045                     main@nRead:
   499                           
   500                           ; 2 bytes @ 0x25
   501  0045                     	ds	2
   502                           
   503                           	psect	maintext
   504  072A                     __pmaintext:	
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 61 in file "main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  readBuf        16   12[BANK0 ] PTR unsigned char [16]
   515 ;;  tmpBuf          8   28[BANK0 ] PTR unsigned char [8]
   516 ;;  nRead           2   37[BANK0 ] int 
   517 ;;  letra           1   36[BANK0 ] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : B00/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   527 ;;      Params:         0       0       0       0
   528 ;;      Locals:         0      27       0       0
   529 ;;      Temps:          0       3       0       0
   530 ;;      Totals:         0      30       0       0
   531 ;;Total ram usage:       30 bytes
   532 ;; Hardware stack levels required when called: 3
   533 ;; This function calls:
   534 ;;		_UARTReadString
   535 ;;		_UARTSendString
   536 ;;		_init
   537 ;;		_itoa
   538 ;; This function is called by:
   539 ;;		Startup code after reset
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543  072A                     _main:	
   544                           ;psect for function _main
   545                           
   546  072A                     l1196:	
   547                           ;incstack = 0
   548                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   549                           
   550  072A                     l1198:
   551                           
   552                           ;main.c: 65:     char letra;;main.c: 66:     init();
   553  072A  24B7               	fcall	_init
   554  072B                     l1200:
   555                           
   556                           ;main.c: 67:     PORTAbits.RA0 = 1;
   557  072B  1283               	bcf	3,5	;RP0=0, select bank0
   558  072C  1303               	bcf	3,6	;RP1=0, select bank0
   559  072D  1405               	bsf	5,0	;volatile
   560  072E                     l1202:
   561                           
   562                           ;main.c: 68:     PORTAbits.RA1 = 1;
   563  072E  1485               	bsf	5,1	;volatile
   564  072F                     l1204:
   565                           
   566                           ;main.c: 69:     PORTAbits.RA2 = 1;
   567  072F  1505               	bsf	5,2	;volatile
   568  0730                     l1206:
   569                           
   570                           ;main.c: 70:     PORTA = 0b00000111;
   571  0730  3007               	movlw	7
   572  0731  0085               	movwf	5	;volatile
   573  0732                     l1208:
   574                           
   575                           ;main.c: 74:         UARTSendString("> \0", 16);
   576  0732  3040               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   577  0733  00F1               	movwf	UARTSendString@str
   578  0734  3080               	movlw	128
   579  0735  00F2               	movwf	UARTSendString@str+1
   580  0736  3010               	movlw	16
   581  0737  00A9               	movwf	??_main
   582  0738  0829               	movf	??_main,w
   583  0739  00F3               	movwf	UARTSendString@max_length
   584  073A  25B1               	fcall	_UARTSendString
   585  073B                     l1210:
   586                           
   587                           ;main.c: 76:         nRead = UARTReadString(readBuf, 16);
   588  073B  3010               	movlw	16
   589  073C  1283               	bcf	3,5	;RP0=0, select bank0
   590  073D  1303               	bcf	3,6	;RP1=0, select bank0
   591  073E  00A9               	movwf	??_main
   592  073F  0829               	movf	??_main,w
   593  0740  00F1               	movwf	UARTReadString@max_length
   594  0741  302C               	movlw	(low (main@readBuf| 0))& (0+255)
   595  0742  252B               	fcall	_UARTReadString
   596  0743  1283               	bcf	3,5	;RP0=0, select bank0
   597  0744  1303               	bcf	3,6	;RP1=0, select bank0
   598  0745  00AA               	movwf	??_main+1
   599  0746  01AB               	clrf	??_main+2
   600  0747  082A               	movf	??_main+1,w
   601  0748  00C5               	movwf	main@nRead
   602  0749  082B               	movf	??_main+2,w
   603  074A  00C6               	movwf	main@nRead+1
   604  074B                     l1212:
   605                           
   606                           ;main.c: 78:         itoa(tmpBuf, nRead, 10);
   607  074B  0846               	movf	main@nRead+1,w
   608  074C  00A5               	movwf	itoa@val+1
   609  074D  0845               	movf	main@nRead,w
   610  074E  00A4               	movwf	itoa@val
   611  074F  300A               	movlw	10
   612  0750  00A6               	movwf	itoa@base
   613  0751  3000               	movlw	0
   614  0752  00A7               	movwf	itoa@base+1
   615  0753  303C               	movlw	(low (main@tmpBuf| 0))& (0+255)
   616  0754  24CF               	fcall	_itoa
   617  0755                     l1214:
   618                           
   619                           ;main.c: 79:         UARTSendString("\n\rReceived \0", 16);
   620  0755  3025               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   621  0756  00F1               	movwf	UARTSendString@str
   622  0757  3080               	movlw	128
   623  0758  00F2               	movwf	UARTSendString@str+1
   624  0759  3010               	movlw	16
   625  075A  1283               	bcf	3,5	;RP0=0, select bank0
   626  075B  1303               	bcf	3,6	;RP1=0, select bank0
   627  075C  00A9               	movwf	??_main
   628  075D  0829               	movf	??_main,w
   629  075E  00F3               	movwf	UARTSendString@max_length
   630  075F  25B1               	fcall	_UARTSendString
   631  0760                     l1216:
   632                           
   633                           ;main.c: 80:         UARTSendString(tmpBuf, 16);
   634  0760  303C               	movlw	(low (main@tmpBuf| 0))& (0+255)
   635  0761  00F1               	movwf	UARTSendString@str
   636  0762  3000               	movlw	0
   637  0763  00F2               	movwf	UARTSendString@str+1
   638  0764  3010               	movlw	16
   639  0765  1283               	bcf	3,5	;RP0=0, select bank0
   640  0766  1303               	bcf	3,6	;RP1=0, select bank0
   641  0767  00A9               	movwf	??_main
   642  0768  0829               	movf	??_main,w
   643  0769  00F3               	movwf	UARTSendString@max_length
   644  076A  25B1               	fcall	_UARTSendString
   645  076B                     l1218:
   646                           
   647                           ;main.c: 81:         UARTSendString(" bytes: \0", 16);
   648  076B  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   649  076C  00F1               	movwf	UARTSendString@str
   650  076D  3080               	movlw	128
   651  076E  00F2               	movwf	UARTSendString@str+1
   652  076F  3010               	movlw	16
   653  0770  1283               	bcf	3,5	;RP0=0, select bank0
   654  0771  1303               	bcf	3,6	;RP1=0, select bank0
   655  0772  00A9               	movwf	??_main
   656  0773  0829               	movf	??_main,w
   657  0774  00F3               	movwf	UARTSendString@max_length
   658  0775  25B1               	fcall	_UARTSendString
   659  0776                     l1220:
   660                           
   661                           ;main.c: 83:         UARTSendString(readBuf, nRead);
   662  0776  302C               	movlw	(low (main@readBuf| 0))& (0+255)
   663  0777  00F1               	movwf	UARTSendString@str
   664  0778  3000               	movlw	0
   665  0779  00F2               	movwf	UARTSendString@str+1
   666  077A  1283               	bcf	3,5	;RP0=0, select bank0
   667  077B  1303               	bcf	3,6	;RP1=0, select bank0
   668  077C  0845               	movf	main@nRead,w
   669  077D  00A9               	movwf	??_main
   670  077E  0829               	movf	??_main,w
   671  077F  00F3               	movwf	UARTSendString@max_length
   672  0780  25B1               	fcall	_UARTSendString
   673  0781                     l1222:
   674                           
   675                           ;main.c: 84:         UARTSendString("\n\r\0", 16);
   676  0781  303C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   677  0782  00F1               	movwf	UARTSendString@str
   678  0783  3080               	movlw	128
   679  0784  00F2               	movwf	UARTSendString@str+1
   680  0785  3010               	movlw	16
   681  0786  1283               	bcf	3,5	;RP0=0, select bank0
   682  0787  1303               	bcf	3,6	;RP1=0, select bank0
   683  0788  00A9               	movwf	??_main
   684  0789  0829               	movf	??_main,w
   685  078A  00F3               	movwf	UARTSendString@max_length
   686  078B  25B1               	fcall	_UARTSendString
   687  078C                     l1224:
   688                           
   689                           ;main.c: 94:         letra = readBuf[0];
   690  078C  1283               	bcf	3,5	;RP0=0, select bank0
   691  078D  1303               	bcf	3,6	;RP1=0, select bank0
   692  078E  082C               	movf	main@readBuf,w
   693  078F  00A9               	movwf	??_main
   694  0790  0829               	movf	??_main,w
   695  0791  00C4               	movwf	main@letra
   696                           
   697                           ;main.c: 96:         switch (letra){
   698  0792  2FE1               	goto	l1252
   699  0793                     l1226:
   700                           
   701                           ;main.c: 98:                 UARTSendString("\n\rPrendiendo Led \0", 16);
   702  0793  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   703  0794  00F1               	movwf	UARTSendString@str
   704  0795  3080               	movlw	128
   705  0796  00F2               	movwf	UARTSendString@str+1
   706  0797  3010               	movlw	16
   707  0798  00A9               	movwf	??_main
   708  0799  0829               	movf	??_main,w
   709  079A  00F3               	movwf	UARTSendString@max_length
   710  079B  25B1               	fcall	_UARTSendString
   711  079C                     l1228:
   712                           
   713                           ;main.c: 99:                 PORTAbits.RA0 = 1;
   714  079C  1283               	bcf	3,5	;RP0=0, select bank0
   715  079D  1303               	bcf	3,6	;RP1=0, select bank0
   716  079E  1405               	bsf	5,0	;volatile
   717                           
   718                           ;main.c: 100:                 break;
   719  079F  2F32               	goto	l1208
   720  07A0                     l1230:
   721                           
   722                           ;main.c: 102:                 UARTSendString("\n\rApagando Led \0", 16);
   723  07A0  3014               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   724  07A1  00F1               	movwf	UARTSendString@str
   725  07A2  3080               	movlw	128
   726  07A3  00F2               	movwf	UARTSendString@str+1
   727  07A4  3010               	movlw	16
   728  07A5  00A9               	movwf	??_main
   729  07A6  0829               	movf	??_main,w
   730  07A7  00F3               	movwf	UARTSendString@max_length
   731  07A8  25B1               	fcall	_UARTSendString
   732  07A9                     l1232:
   733                           
   734                           ;main.c: 103:                 PORTAbits.RA0 = 0;
   735  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   736  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   737  07AB  1005               	bcf	5,0	;volatile
   738                           
   739                           ;main.c: 104:                 break;
   740  07AC  2F32               	goto	l1208
   741  07AD                     l1234:
   742                           
   743                           ;main.c: 106:                 UARTSendString("\n\rPrendiendo Led \0", 16);
   744  07AD  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   745  07AE  00F1               	movwf	UARTSendString@str
   746  07AF  3080               	movlw	128
   747  07B0  00F2               	movwf	UARTSendString@str+1
   748  07B1  3010               	movlw	16
   749  07B2  00A9               	movwf	??_main
   750  07B3  0829               	movf	??_main,w
   751  07B4  00F3               	movwf	UARTSendString@max_length
   752  07B5  25B1               	fcall	_UARTSendString
   753  07B6                     l1236:
   754                           
   755                           ;main.c: 107:                 PORTAbits.RA1 = 1;
   756  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   757  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   758  07B8  1485               	bsf	5,1	;volatile
   759                           
   760                           ;main.c: 108:                 break;
   761  07B9  2F32               	goto	l1208
   762  07BA                     l1238:
   763                           
   764                           ;main.c: 110:                 UARTSendString("\n\rApagando Led \0", 16);
   765  07BA  3014               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   766  07BB  00F1               	movwf	UARTSendString@str
   767  07BC  3080               	movlw	128
   768  07BD  00F2               	movwf	UARTSendString@str+1
   769  07BE  3010               	movlw	16
   770  07BF  00A9               	movwf	??_main
   771  07C0  0829               	movf	??_main,w
   772  07C1  00F3               	movwf	UARTSendString@max_length
   773  07C2  25B1               	fcall	_UARTSendString
   774  07C3                     l1240:
   775                           
   776                           ;main.c: 111:                 PORTAbits.RA1 = 0;
   777  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   778  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   779  07C5  1085               	bcf	5,1	;volatile
   780                           
   781                           ;main.c: 112:                 break;
   782  07C6  2F32               	goto	l1208
   783  07C7                     l1242:
   784                           
   785                           ;main.c: 114:                 UARTSendString("\n\rPrendiendo Led \0", 16);
   786  07C7  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   787  07C8  00F1               	movwf	UARTSendString@str
   788  07C9  3080               	movlw	128
   789  07CA  00F2               	movwf	UARTSendString@str+1
   790  07CB  3010               	movlw	16
   791  07CC  00A9               	movwf	??_main
   792  07CD  0829               	movf	??_main,w
   793  07CE  00F3               	movwf	UARTSendString@max_length
   794  07CF  25B1               	fcall	_UARTSendString
   795  07D0                     l1244:
   796                           
   797                           ;main.c: 115:                 PORTAbits.RA2 = 1;
   798  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   799  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   800  07D2  1505               	bsf	5,2	;volatile
   801                           
   802                           ;main.c: 116:                 break;
   803  07D3  2F32               	goto	l1208
   804  07D4                     l1246:
   805                           
   806                           ;main.c: 118:                 UARTSendString("\n\rApagando Led \0", 16);
   807  07D4  3014               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   808  07D5  00F1               	movwf	UARTSendString@str
   809  07D6  3080               	movlw	128
   810  07D7  00F2               	movwf	UARTSendString@str+1
   811  07D8  3010               	movlw	16
   812  07D9  00A9               	movwf	??_main
   813  07DA  0829               	movf	??_main,w
   814  07DB  00F3               	movwf	UARTSendString@max_length
   815  07DC  25B1               	fcall	_UARTSendString
   816  07DD                     l1248:
   817                           
   818                           ;main.c: 119:                 PORTAbits.RA2 = 0;
   819  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   820  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   821  07DF  1105               	bcf	5,2	;volatile
   822                           
   823                           ;main.c: 120:                 break;
   824  07E0  2F32               	goto	l1208
   825  07E1                     l1252:
   826  07E1  0844               	movf	main@letra,w
   827  07E2  00A9               	movwf	??_main
   828  07E3  01AA               	clrf	??_main+1
   829                           
   830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   831                           ; Switch size 1, requested type "simple"
   832                           ; Number of cases is 1, Range of values is 0 to 0
   833                           ; switch strategies available:
   834                           ; Name         Instructions Cycles
   835                           ; simple_byte            4     3 (average)
   836                           ; direct_byte            7     6 (fixed)
   837                           ; jumptable            260     6 (fixed)
   838                           ;	Chosen strategy is simple_byte
   839  07E4  082A               	movf	??_main+1,w
   840  07E5  3A00               	xorlw	0	; case 0
   841  07E6  1903               	skipnz
   842  07E7  2FE9               	goto	l1290
   843  07E8  2F32               	goto	l1208
   844  07E9                     l1290:
   845                           
   846                           ; Switch size 1, requested type "simple"
   847                           ; Number of cases is 6, Range of values is 97 to 102
   848                           ; switch strategies available:
   849                           ; Name         Instructions Cycles
   850                           ; direct_byte           15     9 (fixed)
   851                           ; simple_byte           19    10 (average)
   852                           ; jumptable            263     9 (fixed)
   853                           ;	Chosen strategy is simple_byte
   854  07E9  0829               	movf	??_main,w
   855  07EA  3A61               	xorlw	97	; case 97
   856  07EB  1903               	skipnz
   857  07EC  2F93               	goto	l1226
   858  07ED  3A03               	xorlw	3	; case 98
   859  07EE  1903               	skipnz
   860  07EF  2FA0               	goto	l1230
   861  07F0  3A01               	xorlw	1	; case 99
   862  07F1  1903               	skipnz
   863  07F2  2FAD               	goto	l1234
   864  07F3  3A07               	xorlw	7	; case 100
   865  07F4  1903               	skipnz
   866  07F5  2FBA               	goto	l1238
   867  07F6  3A01               	xorlw	1	; case 101
   868  07F7  1903               	skipnz
   869  07F8  2FC7               	goto	l1242
   870  07F9  3A03               	xorlw	3	; case 102
   871  07FA  1903               	skipnz
   872  07FB  2FD4               	goto	l1246
   873  07FC  2F32               	goto	l1208
   874  07FD  2800               	ljmp	start
   875  07FE                     __end_of_main:
   876                           
   877                           	psect	text1
   878  04CF                     __ptext1:	
   879 ;; *************** function _itoa *****************
   880 ;; Defined at:
   881 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  buf             1    wreg     PTR unsigned char 
   884 ;;		 -> main@tmpBuf(8), 
   885 ;;  val             2    4[BANK0 ] int 
   886 ;;  base            2    6[BANK0 ] int 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  buf             1    8[BANK0 ] PTR unsigned char 
   889 ;;		 -> main@tmpBuf(8), 
   890 ;;  cp              1    0        PTR unsigned char 
   891 ;;		 -> main@tmpBuf(8), 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      PTR unsigned char 
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   901 ;;      Params:         0       4       0       0
   902 ;;      Locals:         0       1       0       0
   903 ;;      Temps:          1       0       0       0
   904 ;;      Totals:         1       5       0       0
   905 ;;Total ram usage:        6 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 2
   908 ;; This function calls:
   909 ;;		_utoa
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915  04CF                     _itoa:	
   916                           ;psect for function _itoa
   917                           
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   921                           ;itoa@buf stored from wreg
   922  04CF  1283               	bcf	3,5	;RP0=0, select bank0
   923  04D0  1303               	bcf	3,6	;RP1=0, select bank0
   924  04D1  00A8               	movwf	itoa@buf
   925  04D2                     l1182:
   926  04D2                     l1184:
   927  04D2  1FA5               	btfss	itoa@val+1,7
   928  04D3  2CD5               	goto	u741
   929  04D4  2CD6               	goto	u740
   930  04D5                     u741:
   931  04D5  2CE6               	goto	l1192
   932  04D6                     u740:
   933  04D6                     l1186:
   934  04D6  302D               	movlw	45
   935  04D7  00FD               	movwf	??_itoa
   936  04D8  0828               	movf	itoa@buf,w
   937  04D9  0084               	movwf	4
   938  04DA  087D               	movf	??_itoa,w
   939  04DB  1383               	bcf	3,7	;select IRP bank0
   940  04DC  0080               	movwf	0
   941  04DD                     l1188:
   942  04DD  3001               	movlw	1
   943  04DE  00FD               	movwf	??_itoa
   944  04DF  087D               	movf	??_itoa,w
   945  04E0  07A8               	addwf	itoa@buf,f
   946  04E1                     l1190:
   947  04E1  09A4               	comf	itoa@val,f
   948  04E2  09A5               	comf	itoa@val+1,f
   949  04E3  0AA4               	incf	itoa@val,f
   950  04E4  1903               	skipnz
   951  04E5  0AA5               	incf	itoa@val+1,f
   952  04E6                     l1192:
   953  04E6  0825               	movf	itoa@val+1,w
   954  04E7  00F9               	movwf	utoa@val+1
   955  04E8  0824               	movf	itoa@val,w
   956  04E9  00F8               	movwf	utoa@val
   957  04EA  0827               	movf	itoa@base+1,w
   958  04EB  00FB               	movwf	utoa@base+1
   959  04EC  0826               	movf	itoa@base,w
   960  04ED  00FA               	movwf	utoa@base
   961  04EE  0828               	movf	itoa@buf,w
   962  04EF  265C               	fcall	_utoa
   963  04F0                     l628:
   964  04F0  0008               	return
   965  04F1                     __end_of_itoa:
   966                           
   967                           	psect	text2
   968  065C                     __ptext2:	
   969 ;; *************** function _utoa *****************
   970 ;; Defined at:
   971 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  buf             1    wreg     PTR unsigned char 
   974 ;;		 -> main@tmpBuf(8), 
   975 ;;  val             2    8[COMMON] unsigned int 
   976 ;;  base            2   10[COMMON] int 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  buf             1    3[BANK0 ] PTR unsigned char 
   979 ;;		 -> main@tmpBuf(8), 
   980 ;;  v               2    0[BANK0 ] unsigned int 
   981 ;;  c               1    2[BANK0 ] unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      PTR unsigned char 
   984 ;; Registers used:
   985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   991 ;;      Params:         4       0       0       0
   992 ;;      Locals:         0       4       0       0
   993 ;;      Temps:          1       0       0       0
   994 ;;      Totals:         5       4       0       0
   995 ;;Total ram usage:        9 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 1
   998 ;; This function calls:
   999 ;;		___lwdiv
  1000 ;;		___lwmod
  1001 ;; This function is called by:
  1002 ;;		_itoa
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006  065C                     _utoa:	
  1007                           ;psect for function _utoa
  1008                           
  1009                           
  1010                           ;incstack = 0
  1011                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1012                           ;utoa@buf stored from wreg
  1013  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1014  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1015  065E  00A3               	movwf	utoa@buf
  1016  065F                     l1112:
  1017  065F  0879               	movf	utoa@val+1,w
  1018  0660  00A1               	movwf	utoa@v+1
  1019  0661  0878               	movf	utoa@val,w
  1020  0662  00A0               	movwf	utoa@v
  1021  0663                     l1114:
  1022  0663  087B               	movf	utoa@base+1,w
  1023  0664  00F1               	movwf	___lwdiv@divisor+1
  1024  0665  087A               	movf	utoa@base,w
  1025  0666  00F0               	movwf	___lwdiv@divisor
  1026  0667  0821               	movf	utoa@v+1,w
  1027  0668  00F3               	movwf	___lwdiv@dividend+1
  1028  0669  0820               	movf	utoa@v,w
  1029  066A  00F2               	movwf	___lwdiv@dividend
  1030  066B  256D               	fcall	___lwdiv
  1031  066C  0871               	movf	?___lwdiv+1,w
  1032  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1033  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1034  066F  00A1               	movwf	utoa@v+1
  1035  0670  0870               	movf	?___lwdiv,w
  1036  0671  00A0               	movwf	utoa@v
  1037  0672                     l1116:
  1038  0672  3001               	movlw	1
  1039  0673  00FC               	movwf	??_utoa
  1040  0674  087C               	movf	??_utoa,w
  1041  0675  07A3               	addwf	utoa@buf,f
  1042  0676                     l1118:
  1043  0676  0820               	movf	utoa@v,w
  1044  0677  0421               	iorwf	utoa@v+1,w
  1045  0678  1D03               	btfss	3,2
  1046  0679  2E7B               	goto	u631
  1047  067A  2E7C               	goto	u630
  1048  067B                     u631:
  1049  067B  2E63               	goto	l1114
  1050  067C                     u630:
  1051  067C                     l1120:
  1052  067C  0823               	movf	utoa@buf,w
  1053  067D  0084               	movwf	4
  1054  067E  1383               	bcf	3,7	;select IRP bank0
  1055  067F  0180               	clrf	0
  1056  0680                     l1122:
  1057  0680  3001               	movlw	1
  1058  0681  02A3               	subwf	utoa@buf,f
  1059  0682                     l1124:
  1060  0682  087B               	movf	utoa@base+1,w
  1061  0683  00F1               	movwf	___lwmod@divisor+1
  1062  0684  087A               	movf	utoa@base,w
  1063  0685  00F0               	movwf	___lwmod@divisor
  1064  0686  0879               	movf	utoa@val+1,w
  1065  0687  00F3               	movwf	___lwmod@dividend+1
  1066  0688  0878               	movf	utoa@val,w
  1067  0689  00F2               	movwf	___lwmod@dividend
  1068  068A  24F1               	fcall	___lwmod
  1069  068B  0870               	movf	?___lwmod,w
  1070  068C  00FC               	movwf	??_utoa
  1071  068D  087C               	movf	??_utoa,w
  1072  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1073  068F  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0690  00A2               	movwf	utoa@c
  1075  0691                     l1126:
  1076  0691  087B               	movf	utoa@base+1,w
  1077  0692  00F1               	movwf	___lwdiv@divisor+1
  1078  0693  087A               	movf	utoa@base,w
  1079  0694  00F0               	movwf	___lwdiv@divisor
  1080  0695  0879               	movf	utoa@val+1,w
  1081  0696  00F3               	movwf	___lwdiv@dividend+1
  1082  0697  0878               	movf	utoa@val,w
  1083  0698  00F2               	movwf	___lwdiv@dividend
  1084  0699  256D               	fcall	___lwdiv
  1085  069A  0871               	movf	?___lwdiv+1,w
  1086  069B  00F9               	movwf	utoa@val+1
  1087  069C  0870               	movf	?___lwdiv,w
  1088  069D  00F8               	movwf	utoa@val
  1089  069E                     l1128:
  1090  069E  300A               	movlw	10
  1091  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1092  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1093  06A1  0222               	subwf	utoa@c,w
  1094  06A2  1C03               	skipc
  1095  06A3  2EA5               	goto	u641
  1096  06A4  2EA6               	goto	u640
  1097  06A5                     u641:
  1098  06A5  2EAA               	goto	l634
  1099  06A6                     u640:
  1100  06A6                     l1130:
  1101  06A6  3007               	movlw	7
  1102  06A7  00FC               	movwf	??_utoa
  1103  06A8  087C               	movf	??_utoa,w
  1104  06A9  07A2               	addwf	utoa@c,f
  1105  06AA                     l634:
  1106  06AA  3030               	movlw	48
  1107  06AB  00FC               	movwf	??_utoa
  1108  06AC  087C               	movf	??_utoa,w
  1109  06AD  07A2               	addwf	utoa@c,f
  1110  06AE                     l1132:
  1111  06AE  0822               	movf	utoa@c,w
  1112  06AF  00FC               	movwf	??_utoa
  1113  06B0  0823               	movf	utoa@buf,w
  1114  06B1  0084               	movwf	4
  1115  06B2  087C               	movf	??_utoa,w
  1116  06B3  1383               	bcf	3,7	;select IRP bank0
  1117  06B4  0080               	movwf	0
  1118  06B5                     l1134:
  1119  06B5  3001               	movlw	1
  1120  06B6  02A3               	subwf	utoa@buf,f
  1121  06B7                     l1136:
  1122  06B7  0878               	movf	utoa@val,w
  1123  06B8  0479               	iorwf	utoa@val+1,w
  1124  06B9  1D03               	btfss	3,2
  1125  06BA  2EBC               	goto	u651
  1126  06BB  2EBD               	goto	u650
  1127  06BC                     u651:
  1128  06BC  2E82               	goto	l1124
  1129  06BD                     u650:
  1130  06BD                     l1138:
  1131                           
  1132                           ;	Return value of _utoa is never used
  1133  06BD  3001               	movlw	1
  1134  06BE  00FC               	movwf	??_utoa
  1135  06BF  087C               	movf	??_utoa,w
  1136  06C0  07A3               	addwf	utoa@buf,f
  1137  06C1                     l636:
  1138  06C1  0008               	return
  1139  06C2                     __end_of_utoa:
  1140                           
  1141                           	psect	text3
  1142  04F1                     __ptext3:	
  1143 ;; *************** function ___lwmod *****************
  1144 ;; Defined at:
  1145 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  divisor         2    0[COMMON] unsigned int 
  1148 ;;  dividend        2    2[COMMON] unsigned int 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  counter         1    5[COMMON] unsigned char 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  2    0[COMMON] unsigned int 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1160 ;;      Params:         4       0       0       0
  1161 ;;      Locals:         1       0       0       0
  1162 ;;      Temps:          1       0       0       0
  1163 ;;      Totals:         6       0       0       0
  1164 ;;Total ram usage:        6 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_utoa
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173  04F1                     ___lwmod:	
  1174                           ;psect for function ___lwmod
  1175                           
  1176  04F1                     l1046:	
  1177                           ;incstack = 0
  1178                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1179                           
  1180  04F1  0870               	movf	___lwmod@divisor,w
  1181  04F2  0471               	iorwf	___lwmod@divisor+1,w
  1182  04F3  1903               	btfsc	3,2
  1183  04F4  2CF6               	goto	u521
  1184  04F5  2CF7               	goto	u520
  1185  04F6                     u521:
  1186  04F6  2D26               	goto	l1064
  1187  04F7                     u520:
  1188  04F7                     l1048:
  1189  04F7  01F5               	clrf	___lwmod@counter
  1190  04F8  0AF5               	incf	___lwmod@counter,f
  1191  04F9  2D05               	goto	l1054
  1192  04FA                     l1050:
  1193  04FA  3001               	movlw	1
  1194  04FB                     u535:
  1195  04FB  1003               	clrc
  1196  04FC  0DF0               	rlf	___lwmod@divisor,f
  1197  04FD  0DF1               	rlf	___lwmod@divisor+1,f
  1198  04FE  3EFF               	addlw	-1
  1199  04FF  1D03               	skipz
  1200  0500  2CFB               	goto	u535
  1201  0501                     l1052:
  1202  0501  3001               	movlw	1
  1203  0502  00F4               	movwf	??___lwmod
  1204  0503  0874               	movf	??___lwmod,w
  1205  0504  07F5               	addwf	___lwmod@counter,f
  1206  0505                     l1054:
  1207  0505  1FF1               	btfss	___lwmod@divisor+1,7
  1208  0506  2D08               	goto	u541
  1209  0507  2D09               	goto	u540
  1210  0508                     u541:
  1211  0508  2CFA               	goto	l1050
  1212  0509                     u540:
  1213  0509                     l1056:
  1214  0509  0871               	movf	___lwmod@divisor+1,w
  1215  050A  0273               	subwf	___lwmod@dividend+1,w
  1216  050B  1D03               	skipz
  1217  050C  2D0F               	goto	u555
  1218  050D  0870               	movf	___lwmod@divisor,w
  1219  050E  0272               	subwf	___lwmod@dividend,w
  1220  050F                     u555:
  1221  050F  1C03               	skipc
  1222  0510  2D12               	goto	u551
  1223  0511  2D13               	goto	u550
  1224  0512                     u551:
  1225  0512  2D19               	goto	l1060
  1226  0513                     u550:
  1227  0513                     l1058:
  1228  0513  0870               	movf	___lwmod@divisor,w
  1229  0514  02F2               	subwf	___lwmod@dividend,f
  1230  0515  0871               	movf	___lwmod@divisor+1,w
  1231  0516  1C03               	skipc
  1232  0517  03F3               	decf	___lwmod@dividend+1,f
  1233  0518  02F3               	subwf	___lwmod@dividend+1,f
  1234  0519                     l1060:
  1235  0519  3001               	movlw	1
  1236  051A                     u565:
  1237  051A  1003               	clrc
  1238  051B  0CF1               	rrf	___lwmod@divisor+1,f
  1239  051C  0CF0               	rrf	___lwmod@divisor,f
  1240  051D  3EFF               	addlw	-1
  1241  051E  1D03               	skipz
  1242  051F  2D1A               	goto	u565
  1243  0520                     l1062:
  1244  0520  3001               	movlw	1
  1245  0521  02F5               	subwf	___lwmod@counter,f
  1246  0522  1D03               	btfss	3,2
  1247  0523  2D25               	goto	u571
  1248  0524  2D26               	goto	u570
  1249  0525                     u571:
  1250  0525  2D09               	goto	l1056
  1251  0526                     u570:
  1252  0526                     l1064:
  1253  0526  0873               	movf	___lwmod@dividend+1,w
  1254  0527  00F1               	movwf	?___lwmod+1
  1255  0528  0872               	movf	___lwmod@dividend,w
  1256  0529  00F0               	movwf	?___lwmod
  1257  052A                     l456:
  1258  052A  0008               	return
  1259  052B                     __end_of___lwmod:
  1260                           
  1261                           	psect	text4
  1262  056D                     __ptext4:	
  1263 ;; *************** function ___lwdiv *****************
  1264 ;; Defined at:
  1265 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  divisor         2    0[COMMON] unsigned int 
  1268 ;;  dividend        2    2[COMMON] unsigned int 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  quotient        2    5[COMMON] unsigned int 
  1271 ;;  counter         1    7[COMMON] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  2    0[COMMON] unsigned int 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1281 ;;      Params:         4       0       0       0
  1282 ;;      Locals:         3       0       0       0
  1283 ;;      Temps:          1       0       0       0
  1284 ;;      Totals:         8       0       0       0
  1285 ;;Total ram usage:        8 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_utoa
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294  056D                     ___lwdiv:	
  1295                           ;psect for function ___lwdiv
  1296                           
  1297  056D                     l1020:	
  1298                           ;incstack = 0
  1299                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1300                           
  1301  056D  01F5               	clrf	___lwdiv@quotient
  1302  056E  01F6               	clrf	___lwdiv@quotient+1
  1303  056F                     l1022:
  1304  056F  0870               	movf	___lwdiv@divisor,w
  1305  0570  0471               	iorwf	___lwdiv@divisor+1,w
  1306  0571  1903               	btfsc	3,2
  1307  0572  2D74               	goto	u451
  1308  0573  2D75               	goto	u450
  1309  0574                     u451:
  1310  0574  2DAC               	goto	l1042
  1311  0575                     u450:
  1312  0575                     l1024:
  1313  0575  01F7               	clrf	___lwdiv@counter
  1314  0576  0AF7               	incf	___lwdiv@counter,f
  1315  0577  2D83               	goto	l1030
  1316  0578                     l1026:
  1317  0578  3001               	movlw	1
  1318  0579                     u465:
  1319  0579  1003               	clrc
  1320  057A  0DF0               	rlf	___lwdiv@divisor,f
  1321  057B  0DF1               	rlf	___lwdiv@divisor+1,f
  1322  057C  3EFF               	addlw	-1
  1323  057D  1D03               	skipz
  1324  057E  2D79               	goto	u465
  1325  057F                     l1028:
  1326  057F  3001               	movlw	1
  1327  0580  00F4               	movwf	??___lwdiv
  1328  0581  0874               	movf	??___lwdiv,w
  1329  0582  07F7               	addwf	___lwdiv@counter,f
  1330  0583                     l1030:
  1331  0583  1FF1               	btfss	___lwdiv@divisor+1,7
  1332  0584  2D86               	goto	u471
  1333  0585  2D87               	goto	u470
  1334  0586                     u471:
  1335  0586  2D78               	goto	l1026
  1336  0587                     u470:
  1337  0587                     l1032:
  1338  0587  3001               	movlw	1
  1339  0588                     u485:
  1340  0588  1003               	clrc
  1341  0589  0DF5               	rlf	___lwdiv@quotient,f
  1342  058A  0DF6               	rlf	___lwdiv@quotient+1,f
  1343  058B  3EFF               	addlw	-1
  1344  058C  1D03               	skipz
  1345  058D  2D88               	goto	u485
  1346  058E  0871               	movf	___lwdiv@divisor+1,w
  1347  058F  0273               	subwf	___lwdiv@dividend+1,w
  1348  0590  1D03               	skipz
  1349  0591  2D94               	goto	u495
  1350  0592  0870               	movf	___lwdiv@divisor,w
  1351  0593  0272               	subwf	___lwdiv@dividend,w
  1352  0594                     u495:
  1353  0594  1C03               	skipc
  1354  0595  2D97               	goto	u491
  1355  0596  2D98               	goto	u490
  1356  0597                     u491:
  1357  0597  2D9F               	goto	l1038
  1358  0598                     u490:
  1359  0598                     l1034:
  1360  0598  0870               	movf	___lwdiv@divisor,w
  1361  0599  02F2               	subwf	___lwdiv@dividend,f
  1362  059A  0871               	movf	___lwdiv@divisor+1,w
  1363  059B  1C03               	skipc
  1364  059C  03F3               	decf	___lwdiv@dividend+1,f
  1365  059D  02F3               	subwf	___lwdiv@dividend+1,f
  1366  059E                     l1036:
  1367  059E  1475               	bsf	___lwdiv@quotient,0
  1368  059F                     l1038:
  1369  059F  3001               	movlw	1
  1370  05A0                     u505:
  1371  05A0  1003               	clrc
  1372  05A1  0CF1               	rrf	___lwdiv@divisor+1,f
  1373  05A2  0CF0               	rrf	___lwdiv@divisor,f
  1374  05A3  3EFF               	addlw	-1
  1375  05A4  1D03               	skipz
  1376  05A5  2DA0               	goto	u505
  1377  05A6                     l1040:
  1378  05A6  3001               	movlw	1
  1379  05A7  02F7               	subwf	___lwdiv@counter,f
  1380  05A8  1D03               	btfss	3,2
  1381  05A9  2DAB               	goto	u511
  1382  05AA  2DAC               	goto	u510
  1383  05AB                     u511:
  1384  05AB  2D87               	goto	l1032
  1385  05AC                     u510:
  1386  05AC                     l1042:
  1387  05AC  0876               	movf	___lwdiv@quotient+1,w
  1388  05AD  00F1               	movwf	?___lwdiv+1
  1389  05AE  0875               	movf	___lwdiv@quotient,w
  1390  05AF  00F0               	movwf	?___lwdiv
  1391  05B0                     l446:
  1392  05B0  0008               	return
  1393  05B1                     __end_of___lwdiv:
  1394                           
  1395                           	psect	text5
  1396  04B7                     __ptext5:	
  1397 ;; *************** function _init *****************
  1398 ;; Defined at:
  1399 ;;		line 41 in file "main.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, status,2, status,0, pclath, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1413 ;;      Params:         0       0       0       0
  1414 ;;      Locals:         0       0       0       0
  1415 ;;      Temps:          0       0       0       0
  1416 ;;      Totals:         0       0       0       0
  1417 ;;Total ram usage:        0 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; Hardware stack levels required when called: 2
  1420 ;; This function calls:
  1421 ;;		_UARTInit
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427  04B7                     _init:	
  1428                           ;psect for function _init
  1429                           
  1430  04B7                     l1176:	
  1431                           ;incstack = 0
  1432                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1433                           
  1434                           
  1435                           ;main.c: 49:     CMCONbits.CM0 = 1;
  1436  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1437  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1438  04B9  141F               	bsf	31,0	;volatile
  1439                           
  1440                           ;main.c: 50:     CMCONbits.CM1 = 1;
  1441  04BA  149F               	bsf	31,1	;volatile
  1442                           
  1443                           ;main.c: 51:     CMCONbits.CM2 = 1;
  1444  04BB  151F               	bsf	31,2	;volatile
  1445                           
  1446                           ;main.c: 54:     TRISBbits.TRISB1 = 0;
  1447  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  1448  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  1449  04BE  1086               	bcf	6,1	;volatile
  1450  04BF                     l1178:
  1451                           
  1452                           ;main.c: 55:     TRISA = 0x00;
  1453  04BF  0185               	clrf	5	;volatile
  1454                           
  1455                           ;main.c: 56:     PORTA = 0;
  1456  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1457  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1458  04C2  0185               	clrf	5	;volatile
  1459  04C3                     l1180:
  1460                           
  1461                           ;main.c: 58:     UARTInit(9600, 1);
  1462  04C3  3000               	movlw	0
  1463  04C4  00A3               	movwf	UARTInit@baud_rate+3
  1464  04C5  3000               	movlw	0
  1465  04C6  00A2               	movwf	UARTInit@baud_rate+2
  1466  04C7  3025               	movlw	37
  1467  04C8  00A1               	movwf	UARTInit@baud_rate+1
  1468  04C9  3080               	movlw	128
  1469  04CA  00A0               	movwf	UARTInit@baud_rate
  1470  04CB  01A4               	clrf	UARTInit@BRGH
  1471  04CC  0AA4               	incf	UARTInit@BRGH,f
  1472  04CD  26C2               	fcall	_UARTInit
  1473  04CE                     l72:
  1474  04CE  0008               	return
  1475  04CF                     __end_of_init:
  1476                           
  1477                           	psect	text6
  1478  06C2                     __ptext6:	
  1479 ;; *************** function _UARTInit *****************
  1480 ;; Defined at:
  1481 ;;		line 15 in file "UART.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
  1484 ;;  BRGH            1    4[BANK0 ] const unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0, pclath, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1496 ;;      Params:         0       5       0       0
  1497 ;;      Locals:         0       0       0       0
  1498 ;;      Temps:          0       4       0       0
  1499 ;;      Totals:         0       9       0       0
  1500 ;;Total ram usage:        9 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 1
  1503 ;; This function calls:
  1504 ;;		___lldiv
  1505 ;; This function is called by:
  1506 ;;		_init
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510  06C2                     _UARTInit:	
  1511                           ;psect for function _UARTInit
  1512                           
  1513  06C2                     l1068:	
  1514                           ;incstack = 0
  1515                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  1516                           
  1517                           
  1518                           ;UART.c: 17:     if (BRGH == 0) {
  1519  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  1520  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  1521  06C4  0824               	movf	UARTInit@BRGH,w
  1522  06C5  1D03               	btfss	3,2
  1523  06C6  2EC8               	goto	u581
  1524  06C7  2EC9               	goto	u580
  1525  06C8                     u581:
  1526  06C8  2EF2               	goto	l1074
  1527  06C9                     u580:
  1528  06C9                     l1070:
  1529                           
  1530                           ;UART.c: 18:         SPBRG = 4000000/(64*baud_rate) - 1;
  1531  06C9  0820               	movf	UARTInit@baud_rate,w
  1532  06CA  00A5               	movwf	??_UARTInit
  1533  06CB  0821               	movf	UARTInit@baud_rate+1,w
  1534  06CC  00A6               	movwf	??_UARTInit+1
  1535  06CD  0822               	movf	UARTInit@baud_rate+2,w
  1536  06CE  00A7               	movwf	??_UARTInit+2
  1537  06CF  0823               	movf	UARTInit@baud_rate+3,w
  1538  06D0  00A8               	movwf	??_UARTInit+3
  1539  06D1  3006               	movlw	6
  1540  06D2                     u595:
  1541  06D2  1003               	clrc
  1542  06D3  0DA5               	rlf	??_UARTInit,f
  1543  06D4  0DA6               	rlf	??_UARTInit+1,f
  1544  06D5  0DA7               	rlf	??_UARTInit+2,f
  1545  06D6  0DA8               	rlf	??_UARTInit+3,f
  1546  06D7                     u590:
  1547  06D7  3EFF               	addlw	-1
  1548  06D8  1D03               	skipz
  1549  06D9  2ED2               	goto	u595
  1550  06DA  0828               	movf	??_UARTInit+3,w
  1551  06DB  00F3               	movwf	___lldiv@divisor+3
  1552  06DC  0827               	movf	??_UARTInit+2,w
  1553  06DD  00F2               	movwf	___lldiv@divisor+2
  1554  06DE  0826               	movf	??_UARTInit+1,w
  1555  06DF  00F1               	movwf	___lldiv@divisor+1
  1556  06E0  0825               	movf	??_UARTInit,w
  1557  06E1  00F0               	movwf	___lldiv@divisor
  1558  06E2  3000               	movlw	0
  1559  06E3  00F7               	movwf	___lldiv@dividend+3
  1560  06E4  303D               	movlw	61
  1561  06E5  00F6               	movwf	___lldiv@dividend+2
  1562  06E6  3009               	movlw	9
  1563  06E7  00F5               	movwf	___lldiv@dividend+1
  1564  06E8  3000               	movlw	0
  1565  06E9  00F4               	movwf	___lldiv@dividend
  1566  06EA  25F6               	fcall	___lldiv
  1567  06EB  0870               	movf	?___lldiv,w
  1568  06EC  3EFF               	addlw	255
  1569  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  1570  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  1571  06EF  0099               	movwf	25	;volatile
  1572  06F0                     l1072:
  1573                           
  1574                           ;UART.c: 19:         TXSTAbits.BRGH = 0;
  1575  06F0  1118               	bcf	24,2	;volatile
  1576                           
  1577                           ;UART.c: 20:     } else {
  1578  06F1  2F1A               	goto	l1078
  1579  06F2                     l1074:
  1580                           
  1581                           ;UART.c: 21:         SPBRG = 4000000/(16*baud_rate) - 1;
  1582  06F2  0820               	movf	UARTInit@baud_rate,w
  1583  06F3  00A5               	movwf	??_UARTInit
  1584  06F4  0821               	movf	UARTInit@baud_rate+1,w
  1585  06F5  00A6               	movwf	??_UARTInit+1
  1586  06F6  0822               	movf	UARTInit@baud_rate+2,w
  1587  06F7  00A7               	movwf	??_UARTInit+2
  1588  06F8  0823               	movf	UARTInit@baud_rate+3,w
  1589  06F9  00A8               	movwf	??_UARTInit+3
  1590  06FA  3004               	movlw	4
  1591  06FB                     u605:
  1592  06FB  1003               	clrc
  1593  06FC  0DA5               	rlf	??_UARTInit,f
  1594  06FD  0DA6               	rlf	??_UARTInit+1,f
  1595  06FE  0DA7               	rlf	??_UARTInit+2,f
  1596  06FF  0DA8               	rlf	??_UARTInit+3,f
  1597  0700                     u600:
  1598  0700  3EFF               	addlw	-1
  1599  0701  1D03               	skipz
  1600  0702  2EFB               	goto	u605
  1601  0703  0828               	movf	??_UARTInit+3,w
  1602  0704  00F3               	movwf	___lldiv@divisor+3
  1603  0705  0827               	movf	??_UARTInit+2,w
  1604  0706  00F2               	movwf	___lldiv@divisor+2
  1605  0707  0826               	movf	??_UARTInit+1,w
  1606  0708  00F1               	movwf	___lldiv@divisor+1
  1607  0709  0825               	movf	??_UARTInit,w
  1608  070A  00F0               	movwf	___lldiv@divisor
  1609  070B  3000               	movlw	0
  1610  070C  00F7               	movwf	___lldiv@dividend+3
  1611  070D  303D               	movlw	61
  1612  070E  00F6               	movwf	___lldiv@dividend+2
  1613  070F  3009               	movlw	9
  1614  0710  00F5               	movwf	___lldiv@dividend+1
  1615  0711  3000               	movlw	0
  1616  0712  00F4               	movwf	___lldiv@dividend
  1617  0713  25F6               	fcall	___lldiv
  1618  0714  0870               	movf	?___lldiv,w
  1619  0715  3EFF               	addlw	255
  1620  0716  1683               	bsf	3,5	;RP0=1, select bank1
  1621  0717  1303               	bcf	3,6	;RP1=0, select bank1
  1622  0718  0099               	movwf	25	;volatile
  1623  0719                     l1076:
  1624                           
  1625                           ;UART.c: 22:         TXSTAbits.BRGH = 1;
  1626  0719  1518               	bsf	24,2	;volatile
  1627  071A                     l1078:
  1628                           
  1629                           ;UART.c: 26:     TXSTAbits.TX9 = 0;
  1630  071A  1318               	bcf	24,6	;volatile
  1631  071B                     l1080:
  1632                           
  1633                           ;UART.c: 27:     TXSTAbits.TXEN = 1;
  1634  071B  1698               	bsf	24,5	;volatile
  1635  071C                     l1082:
  1636                           
  1637                           ;UART.c: 28:     TXSTAbits.SYNC = 0;
  1638  071C  1218               	bcf	24,4	;volatile
  1639  071D                     l1084:
  1640                           
  1641                           ;UART.c: 29:     TXSTAbits.TRMT = 1;
  1642  071D  1498               	bsf	24,1	;volatile
  1643  071E                     l1086:
  1644                           
  1645                           ;UART.c: 32:     RCSTAbits.SPEN = 1;
  1646  071E  1283               	bcf	3,5	;RP0=0, select bank0
  1647  071F  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0720  1798               	bsf	24,7	;volatile
  1649  0721                     l1088:
  1650                           
  1651                           ;UART.c: 33:     RCSTAbits.RX9 = 0;
  1652  0721  1318               	bcf	24,6	;volatile
  1653  0722                     l1090:
  1654                           
  1655                           ;UART.c: 34:     RCSTAbits.CREN = 1;
  1656  0722  1618               	bsf	24,4	;volatile
  1657  0723                     l1092:
  1658                           
  1659                           ;UART.c: 35:     RCSTAbits.FERR = 0;
  1660  0723  1118               	bcf	24,2	;volatile
  1661  0724                     l1094:
  1662                           
  1663                           ;UART.c: 36:     RCSTAbits.OERR = 0;
  1664  0724  1098               	bcf	24,1	;volatile
  1665  0725                     l1096:
  1666                           
  1667                           ;UART.c: 39:     TRISBbits.TRISB1 = 1;
  1668  0725  1683               	bsf	3,5	;RP0=1, select bank1
  1669  0726  1303               	bcf	3,6	;RP1=0, select bank1
  1670  0727  1486               	bsf	6,1	;volatile
  1671  0728                     l1098:
  1672                           
  1673                           ;UART.c: 40:     TRISBbits.TRISB2 = 1;
  1674  0728  1506               	bsf	6,2	;volatile
  1675  0729                     l19:
  1676  0729  0008               	return
  1677  072A                     __end_of_UARTInit:
  1678                           
  1679                           	psect	text7
  1680  05F6                     __ptext7:	
  1681 ;; *************** function ___lldiv *****************
  1682 ;; Defined at:
  1683 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  divisor         4    0[COMMON] unsigned long 
  1686 ;;  dividend        4    4[COMMON] unsigned long 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  quotient        4    9[COMMON] unsigned long 
  1689 ;;  counter         1   13[COMMON] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  4    0[COMMON] unsigned long 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, status,0
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1699 ;;      Params:         8       0       0       0
  1700 ;;      Locals:         5       0       0       0
  1701 ;;      Temps:          1       0       0       0
  1702 ;;      Totals:        14       0       0       0
  1703 ;;Total ram usage:       14 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_UARTInit
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712  05F6                     ___lldiv:	
  1713                           ;psect for function ___lldiv
  1714                           
  1715  05F6                     l996:	
  1716                           ;incstack = 0
  1717                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1718                           
  1719  05F6  3000               	movlw	0
  1720  05F7  00FC               	movwf	___lldiv@quotient+3
  1721  05F8  3000               	movlw	0
  1722  05F9  00FB               	movwf	___lldiv@quotient+2
  1723  05FA  3000               	movlw	0
  1724  05FB  00FA               	movwf	___lldiv@quotient+1
  1725  05FC  3000               	movlw	0
  1726  05FD  00F9               	movwf	___lldiv@quotient
  1727  05FE  0873               	movf	___lldiv@divisor+3,w
  1728  05FF  0472               	iorwf	___lldiv@divisor+2,w
  1729  0600  0471               	iorwf	___lldiv@divisor+1,w
  1730  0601  0470               	iorwf	___lldiv@divisor,w
  1731  0602  1903               	skipnz
  1732  0603  2E05               	goto	u381
  1733  0604  2E06               	goto	u380
  1734  0605                     u381:
  1735  0605  2E53               	goto	l1016
  1736  0606                     u380:
  1737  0606                     l998:
  1738  0606  01FD               	clrf	___lldiv@counter
  1739  0607  0AFD               	incf	___lldiv@counter,f
  1740  0608  2E16               	goto	l1002
  1741  0609                     l1000:
  1742  0609  3001               	movlw	1
  1743  060A  00F8               	movwf	??___lldiv
  1744  060B                     u395:
  1745  060B  1003               	clrc
  1746  060C  0DF0               	rlf	___lldiv@divisor,f
  1747  060D  0DF1               	rlf	___lldiv@divisor+1,f
  1748  060E  0DF2               	rlf	___lldiv@divisor+2,f
  1749  060F  0DF3               	rlf	___lldiv@divisor+3,f
  1750  0610  0BF8               	decfsz	??___lldiv,f
  1751  0611  2E0B               	goto	u395
  1752  0612  3001               	movlw	1
  1753  0613  00F8               	movwf	??___lldiv
  1754  0614  0878               	movf	??___lldiv,w
  1755  0615  07FD               	addwf	___lldiv@counter,f
  1756  0616                     l1002:
  1757  0616  1FF3               	btfss	___lldiv@divisor+3,7
  1758  0617  2E19               	goto	u401
  1759  0618  2E1A               	goto	u400
  1760  0619                     u401:
  1761  0619  2E09               	goto	l1000
  1762  061A                     u400:
  1763  061A                     l1004:
  1764  061A  3001               	movlw	1
  1765  061B  00F8               	movwf	??___lldiv
  1766  061C                     u415:
  1767  061C  1003               	clrc
  1768  061D  0DF9               	rlf	___lldiv@quotient,f
  1769  061E  0DFA               	rlf	___lldiv@quotient+1,f
  1770  061F  0DFB               	rlf	___lldiv@quotient+2,f
  1771  0620  0DFC               	rlf	___lldiv@quotient+3,f
  1772  0621  0BF8               	decfsz	??___lldiv,f
  1773  0622  2E1C               	goto	u415
  1774  0623                     l1006:
  1775  0623  0873               	movf	___lldiv@divisor+3,w
  1776  0624  0277               	subwf	___lldiv@dividend+3,w
  1777  0625  1D03               	skipz
  1778  0626  2E31               	goto	u425
  1779  0627  0872               	movf	___lldiv@divisor+2,w
  1780  0628  0276               	subwf	___lldiv@dividend+2,w
  1781  0629  1D03               	skipz
  1782  062A  2E31               	goto	u425
  1783  062B  0871               	movf	___lldiv@divisor+1,w
  1784  062C  0275               	subwf	___lldiv@dividend+1,w
  1785  062D  1D03               	skipz
  1786  062E  2E31               	goto	u425
  1787  062F  0870               	movf	___lldiv@divisor,w
  1788  0630  0274               	subwf	___lldiv@dividend,w
  1789  0631                     u425:
  1790  0631  1C03               	skipc
  1791  0632  2E34               	goto	u421
  1792  0633  2E35               	goto	u420
  1793  0634                     u421:
  1794  0634  2E44               	goto	l1012
  1795  0635                     u420:
  1796  0635                     l1008:
  1797  0635  0870               	movf	___lldiv@divisor,w
  1798  0636  02F4               	subwf	___lldiv@dividend,f
  1799  0637  0871               	movf	___lldiv@divisor+1,w
  1800  0638  1C03               	skipc
  1801  0639  0F71               	incfsz	___lldiv@divisor+1,w
  1802  063A  02F5               	subwf	___lldiv@dividend+1,f
  1803  063B  0872               	movf	___lldiv@divisor+2,w
  1804  063C  1C03               	skipc
  1805  063D  0F72               	incfsz	___lldiv@divisor+2,w
  1806  063E  02F6               	subwf	___lldiv@dividend+2,f
  1807  063F  0873               	movf	___lldiv@divisor+3,w
  1808  0640  1C03               	skipc
  1809  0641  0F73               	incfsz	___lldiv@divisor+3,w
  1810  0642  02F7               	subwf	___lldiv@dividend+3,f
  1811  0643                     l1010:
  1812  0643  1479               	bsf	___lldiv@quotient,0
  1813  0644                     l1012:
  1814  0644  3001               	movlw	1
  1815  0645                     u435:
  1816  0645  1003               	clrc
  1817  0646  0CF3               	rrf	___lldiv@divisor+3,f
  1818  0647  0CF2               	rrf	___lldiv@divisor+2,f
  1819  0648  0CF1               	rrf	___lldiv@divisor+1,f
  1820  0649  0CF0               	rrf	___lldiv@divisor,f
  1821  064A  3EFF               	addlw	-1
  1822  064B  1D03               	skipz
  1823  064C  2E45               	goto	u435
  1824  064D                     l1014:
  1825  064D  3001               	movlw	1
  1826  064E  02FD               	subwf	___lldiv@counter,f
  1827  064F  1D03               	btfss	3,2
  1828  0650  2E52               	goto	u441
  1829  0651  2E53               	goto	u440
  1830  0652                     u441:
  1831  0652  2E1A               	goto	l1004
  1832  0653                     u440:
  1833  0653                     l1016:
  1834  0653  087C               	movf	___lldiv@quotient+3,w
  1835  0654  00F3               	movwf	?___lldiv+3
  1836  0655  087B               	movf	___lldiv@quotient+2,w
  1837  0656  00F2               	movwf	?___lldiv+2
  1838  0657  087A               	movf	___lldiv@quotient+1,w
  1839  0658  00F1               	movwf	?___lldiv+1
  1840  0659  0879               	movf	___lldiv@quotient,w
  1841  065A  00F0               	movwf	?___lldiv
  1842  065B                     l210:
  1843  065B  0008               	return
  1844  065C                     __end_of___lldiv:
  1845                           
  1846                           	psect	text8
  1847  05B1                     __ptext8:	
  1848 ;; *************** function _UARTSendString *****************
  1849 ;; Defined at:
  1850 ;;		line 57 in file "UART.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  str             2    1[COMMON] PTR const unsigned char 
  1853 ;;		 -> STR_10(17), STR_9(19), STR_8(17), STR_7(19), 
  1854 ;;		 -> STR_6(17), STR_5(19), STR_4(4), STR_3(10), 
  1855 ;;		 -> STR_2(13), main@tmpBuf(8), main@readBuf(16), STR_1(4), 
  1856 ;;  max_length      1    3[COMMON] const unsigned char 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  i               2    7[COMMON] int 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1868 ;;      Params:         3       0       0       0
  1869 ;;      Locals:         2       0       0       0
  1870 ;;      Temps:          3       0       0       0
  1871 ;;      Totals:         8       0       0       0
  1872 ;;Total ram usage:        8 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 1
  1875 ;; This function calls:
  1876 ;;		_UARTSendChar
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882  05B1                     _UARTSendString:	
  1883                           ;psect for function _UARTSendString
  1884                           
  1885  05B1                     l1142:	
  1886                           ;incstack = 0
  1887                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1888                           
  1889                           
  1890                           ;UART.c: 58:     int i = 0;
  1891  05B1  01F7               	clrf	UARTSendString@i
  1892  05B2  01F8               	clrf	UARTSendString@i+1
  1893                           
  1894                           ;UART.c: 59:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  1895  05B3  01F7               	clrf	UARTSendString@i
  1896  05B4  01F8               	clrf	UARTSendString@i+1
  1897  05B5  2DD0               	goto	l1148
  1898  05B6                     l1144:
  1899                           
  1900                           ;UART.c: 60:         UARTSendChar(str[i]);
  1901  05B6  0877               	movf	UARTSendString@i,w
  1902  05B7  0771               	addwf	UARTSendString@str,w
  1903  05B8  00F5               	movwf	??_UARTSendString+1
  1904  05B9  0872               	movf	UARTSendString@str+1,w
  1905  05BA  00F4               	movwf	??_UARTSendString
  1906  05BB  1803               	skipnc
  1907  05BC  0AF4               	incf	??_UARTSendString,f
  1908  05BD  1FF7               	btfss	UARTSendString@i,7
  1909  05BE  2DC0               	goto	u660
  1910  05BF  03F4               	decf	??_UARTSendString,f
  1911  05C0                     u660:
  1912  05C0  0874               	movf	??_UARTSendString,w
  1913  05C1  00F6               	movwf	??_UARTSendString+2
  1914  05C2  0876               	movf	??_UARTSendString+2,w
  1915  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1916  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1917  05C5  00FF               	movwf	btemp+1
  1918  05C6  0875               	movf	??_UARTSendString+1,w
  1919  05C7  0084               	movwf	4
  1920  05C8  2001               	fcall	stringtab
  1921  05C9  24AB               	fcall	_UARTSendChar
  1922  05CA                     l1146:
  1923                           
  1924                           ;UART.c: 61:     }
  1925  05CA  3001               	movlw	1
  1926  05CB  07F7               	addwf	UARTSendString@i,f
  1927  05CC  1803               	skipnc
  1928  05CD  0AF8               	incf	UARTSendString@i+1,f
  1929  05CE  3000               	movlw	0
  1930  05CF  07F8               	addwf	UARTSendString@i+1,f
  1931  05D0                     l1148:
  1932  05D0  0878               	movf	UARTSendString@i+1,w
  1933  05D1  3A80               	xorlw	128
  1934  05D2  00F4               	movwf	??_UARTSendString
  1935  05D3  3080               	movlw	128
  1936  05D4  0274               	subwf	??_UARTSendString,w
  1937  05D5  1D03               	skipz
  1938  05D6  2DD9               	goto	u675
  1939  05D7  0873               	movf	UARTSendString@max_length,w
  1940  05D8  0277               	subwf	UARTSendString@i,w
  1941  05D9                     u675:
  1942  05D9  1803               	skipnc
  1943  05DA  2DDC               	goto	u671
  1944  05DB  2DDD               	goto	u670
  1945  05DC                     u671:
  1946  05DC  2DF5               	goto	l33
  1947  05DD                     u670:
  1948  05DD                     l1150:
  1949  05DD  0877               	movf	UARTSendString@i,w
  1950  05DE  0771               	addwf	UARTSendString@str,w
  1951  05DF  00F5               	movwf	??_UARTSendString+1
  1952  05E0  0872               	movf	UARTSendString@str+1,w
  1953  05E1  00F4               	movwf	??_UARTSendString
  1954  05E2  1803               	skipnc
  1955  05E3  0AF4               	incf	??_UARTSendString,f
  1956  05E4  1FF7               	btfss	UARTSendString@i,7
  1957  05E5  2DE7               	goto	u680
  1958  05E6  03F4               	decf	??_UARTSendString,f
  1959  05E7                     u680:
  1960  05E7  0874               	movf	??_UARTSendString,w
  1961  05E8  00F6               	movwf	??_UARTSendString+2
  1962  05E9  0876               	movf	??_UARTSendString+2,w
  1963  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1964  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1965  05EC  00FF               	movwf	btemp+1
  1966  05ED  0875               	movf	??_UARTSendString+1,w
  1967  05EE  0084               	movwf	4
  1968  05EF  2001               	fcall	stringtab
  1969  05F0  3A00               	xorlw	0
  1970  05F1  1D03               	skipz
  1971  05F2  2DF4               	goto	u691
  1972  05F3  2DF5               	goto	u690
  1973  05F4                     u691:
  1974  05F4  2DB6               	goto	l1144
  1975  05F5                     u690:
  1976  05F5                     l33:
  1977  05F5  0008               	return
  1978  05F6                     __end_of_UARTSendString:
  1979                           
  1980                           	psect	text9
  1981  04AB                     __ptext9:	
  1982 ;; *************** function _UARTSendChar *****************
  1983 ;; Defined at:
  1984 ;;		line 47 in file "UART.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  c               1    wreg     const unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  c               1    0[COMMON] const unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1998 ;;      Params:         0       0       0       0
  1999 ;;      Locals:         1       0       0       0
  2000 ;;      Temps:          0       0       0       0
  2001 ;;      Totals:         1       0       0       0
  2002 ;;Total ram usage:        1 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_UARTSendString
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011  04AB                     _UARTSendChar:	
  2012                           ;psect for function _UARTSendChar
  2013                           
  2014                           
  2015                           ;incstack = 0
  2016                           ; Regs used in _UARTSendChar: [wreg]
  2017                           ;UARTSendChar@c stored from wreg
  2018  04AB  00F0               	movwf	UARTSendChar@c
  2019  04AC                     l1100:
  2020  04AC                     l22:	
  2021                           ;UART.c: 48:     while (TXSTAbits.TRMT == 0);
  2022                           
  2023  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  2024  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  2025  04AE  1C98               	btfss	24,1	;volatile
  2026  04AF  2CB1               	goto	u611
  2027  04B0  2CB2               	goto	u610
  2028  04B1                     u611:
  2029  04B1  2CAC               	goto	l22
  2030  04B2                     u610:
  2031  04B2                     l1102:
  2032                           
  2033                           ;UART.c: 49:     TXREG = c;
  2034  04B2  0870               	movf	UARTSendChar@c,w
  2035  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2036  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2037  04B5  0099               	movwf	25	;volatile
  2038  04B6                     l25:
  2039  04B6  0008               	return
  2040  04B7                     __end_of_UARTSendChar:
  2041                           
  2042                           	psect	text10
  2043  052B                     __ptext10:	
  2044 ;; *************** function _UARTReadString *****************
  2045 ;; Defined at:
  2046 ;;		line 88 in file "UART.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  buf             1    wreg     PTR unsigned char 
  2049 ;;		 -> main@readBuf(16), 
  2050 ;;  max_length      1    1[COMMON] unsigned char 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  buf             1    4[COMMON] PTR unsigned char 
  2053 ;;		 -> main@readBuf(16), 
  2054 ;;  i               1    6[COMMON] unsigned char 
  2055 ;;  tmp             1    5[COMMON] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      unsigned char 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2065 ;;      Params:         1       0       0       0
  2066 ;;      Locals:         3       0       0       0
  2067 ;;      Temps:          2       0       0       0
  2068 ;;      Totals:         6       0       0       0
  2069 ;;Total ram usage:        6 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 2
  2072 ;; This function calls:
  2073 ;;		_UARTReadChar
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079  052B                     _UARTReadString:	
  2080                           ;psect for function _UARTReadString
  2081                           
  2082                           
  2083                           ;incstack = 0
  2084                           ; Regs used in _UARTReadString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2085                           ;UARTReadString@buf stored from wreg
  2086  052B  00F4               	movwf	UARTReadString@buf
  2087  052C                     l1152:
  2088  052C                     l1154:
  2089                           
  2090                           ;UART.c: 91:     for (i=0 ; i<max_length-1 ; i++) {
  2091  052C  01F6               	clrf	UARTReadString@i
  2092  052D  2D52               	goto	l1168
  2093  052E                     l1156:
  2094                           
  2095                           ;UART.c: 92:         tmp = UARTReadChar();
  2096  052E  24A1               	fcall	_UARTReadChar
  2097  052F  00F2               	movwf	??_UARTReadString
  2098  0530  0872               	movf	??_UARTReadString,w
  2099  0531  00F5               	movwf	UARTReadString@tmp
  2100  0532                     l1158:
  2101                           
  2102                           ;UART.c: 94:         if (tmp == '\0' || tmp == '\n' || tmp == '\r') {
  2103  0532  0875               	movf	UARTReadString@tmp,w
  2104  0533  1903               	btfsc	3,2
  2105  0534  2D36               	goto	u701
  2106  0535  2D37               	goto	u700
  2107  0536                     u701:
  2108  0536  2D64               	goto	l1170
  2109  0537                     u700:
  2110  0537                     l1160:
  2111  0537  300A               	movlw	10
  2112  0538  0675               	xorwf	UARTReadString@tmp,w
  2113  0539  1903               	btfsc	3,2
  2114  053A  2D3C               	goto	u711
  2115  053B  2D3D               	goto	u710
  2116  053C                     u711:
  2117  053C  2D64               	goto	l1170
  2118  053D                     u710:
  2119  053D                     l1162:
  2120  053D  300D               	movlw	13
  2121  053E  0675               	xorwf	UARTReadString@tmp,w
  2122  053F  1D03               	btfss	3,2
  2123  0540  2D42               	goto	u721
  2124  0541  2D43               	goto	u720
  2125  0542                     u721:
  2126  0542  2D44               	goto	l1164
  2127  0543                     u720:
  2128  0543  2D64               	goto	l1170
  2129  0544                     l1164:
  2130                           
  2131                           ;UART.c: 97:         buf[i] = tmp;
  2132  0544  0875               	movf	UARTReadString@tmp,w
  2133  0545  00F2               	movwf	??_UARTReadString
  2134  0546  0876               	movf	UARTReadString@i,w
  2135  0547  0774               	addwf	UARTReadString@buf,w
  2136  0548  00F3               	movwf	??_UARTReadString+1
  2137  0549  0873               	movf	??_UARTReadString+1,w
  2138  054A  0084               	movwf	4
  2139  054B  0872               	movf	??_UARTReadString,w
  2140  054C  1383               	bcf	3,7	;select IRP bank0
  2141  054D  0080               	movwf	0
  2142  054E                     l1166:
  2143                           
  2144                           ;UART.c: 98:     }
  2145  054E  3001               	movlw	1
  2146  054F  00F2               	movwf	??_UARTReadString
  2147  0550  0872               	movf	??_UARTReadString,w
  2148  0551  07F6               	addwf	UARTReadString@i,f
  2149  0552                     l1168:
  2150  0552  0871               	movf	UARTReadString@max_length,w
  2151  0553  3EFF               	addlw	255
  2152  0554  00F2               	movwf	??_UARTReadString
  2153  0555  30FF               	movlw	255
  2154  0556  1803               	skipnc
  2155  0557  3000               	movlw	0
  2156  0558  00F3               	movwf	??_UARTReadString+1
  2157  0559  0873               	movf	??_UARTReadString+1,w
  2158  055A  3A80               	xorlw	128
  2159  055B  3C80               	sublw	128
  2160  055C  1D03               	skipz
  2161  055D  2D60               	goto	u735
  2162  055E  0872               	movf	??_UARTReadString,w
  2163  055F  0276               	subwf	UARTReadString@i,w
  2164  0560                     u735:
  2165  0560  1C03               	skipc
  2166  0561  2D63               	goto	u731
  2167  0562  2D64               	goto	u730
  2168  0563                     u731:
  2169  0563  2D2E               	goto	l1156
  2170  0564                     u730:
  2171  0564                     l1170:
  2172                           
  2173                           ;UART.c: 100:     buf[i+1] = '\0';
  2174  0564  0876               	movf	UARTReadString@i,w
  2175  0565  0774               	addwf	UARTReadString@buf,w
  2176  0566  00F2               	movwf	??_UARTReadString
  2177  0567  0A72               	incf	??_UARTReadString,w
  2178  0568  0084               	movwf	4
  2179  0569  1383               	bcf	3,7	;select IRP bank0
  2180  056A  0180               	clrf	0
  2181  056B                     l1172:
  2182                           
  2183                           ;UART.c: 102:     return i;
  2184  056B  0876               	movf	UARTReadString@i,w
  2185  056C                     l51:
  2186  056C  0008               	return
  2187  056D                     __end_of_UARTReadString:
  2188                           
  2189                           	psect	text11
  2190  04A1                     __ptext11:	
  2191 ;; *************** function _UARTReadChar *****************
  2192 ;; Defined at:
  2193 ;;		line 76 in file "UART.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      unsigned char 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2207 ;;      Params:         0       0       0       0
  2208 ;;      Locals:         0       0       0       0
  2209 ;;      Temps:          0       0       0       0
  2210 ;;      Totals:         0       0       0       0
  2211 ;;Total ram usage:        0 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 1
  2214 ;; This function calls:
  2215 ;;		_UARTDataReady
  2216 ;; This function is called by:
  2217 ;;		_UARTReadString
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221  04A1                     _UARTReadChar:	
  2222                           ;psect for function _UARTReadChar
  2223                           
  2224  04A1                     l1104:	
  2225                           ;incstack = 0
  2226                           ; Regs used in _UARTReadChar: [wreg+status,2+status,0+pclath+cstack]
  2227                           
  2228  04A1                     l1106:	
  2229                           ;UART.c: 77:     while (!UARTDataReady());
  2230                           
  2231  04A1  249A               	fcall	_UARTDataReady
  2232  04A2  3A00               	xorlw	0
  2233  04A3  1903               	skipnz
  2234  04A4  2CA6               	goto	u621
  2235  04A5  2CA7               	goto	u620
  2236  04A6                     u621:
  2237  04A6  2CA1               	goto	l1106
  2238  04A7                     u620:
  2239  04A7                     l1108:
  2240                           
  2241                           ;UART.c: 78:     return RCREG;
  2242  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2243  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2244  04A9  081A               	movf	26,w	;volatile
  2245  04AA                     l42:
  2246  04AA  0008               	return
  2247  04AB                     __end_of_UARTReadChar:
  2248                           
  2249                           	psect	text12
  2250  049A                     __ptext12:	
  2251 ;; *************** function _UARTDataReady *****************
  2252 ;; Defined at:
  2253 ;;		line 68 in file "UART.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      unsigned char 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2267 ;;      Params:         0       0       0       0
  2268 ;;      Locals:         0       0       0       0
  2269 ;;      Temps:          1       0       0       0
  2270 ;;      Totals:         1       0       0       0
  2271 ;;Total ram usage:        1 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_UARTReadChar
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280  049A                     _UARTDataReady:	
  2281                           ;psect for function _UARTDataReady
  2282                           
  2283  049A                     l992:	
  2284                           ;incstack = 0
  2285                           ; Regs used in _UARTDataReady: [wreg+status,2+status,0]
  2286                           
  2287                           
  2288                           ;UART.c: 69:     return PIR1bits.RCIF;
  2289  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2290  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2291  049C  0E0C               	swapf	12,w	;volatile
  2292  049D  00F0               	movwf	??_UARTDataReady
  2293  049E  0C70               	rrf	??_UARTDataReady,w
  2294  049F  3901               	andlw	1
  2295  04A0                     l36:
  2296  04A0  0008               	return
  2297  04A1                     __end_of_UARTDataReady:
  2298  007E                     btemp	set	126	;btemp
  2299  007E                     wtemp0	set	126
  2300                           
  2301                           	psect	idloc
  2302                           
  2303                           ;Config register IDLOC0 @ 0x2000
  2304                           ;	unspecified, using default values
  2305  2000                     	org	8192
  2306  2000  3FFF               	dw	16383
  2307                           
  2308                           ;Config register IDLOC1 @ 0x2001
  2309                           ;	unspecified, using default values
  2310  2001                     	org	8193
  2311  2001  3FFF               	dw	16383
  2312                           
  2313                           ;Config register IDLOC2 @ 0x2002
  2314                           ;	unspecified, using default values
  2315  2002                     	org	8194
  2316  2002  3FFF               	dw	16383
  2317                           
  2318                           ;Config register IDLOC3 @ 0x2003
  2319                           ;	unspecified, using default values
  2320  2003                     	org	8195
  2321  2003  3FFF               	dw	16383
  2322                           
  2323                           	psect	config
  2324                           
  2325                           ;Config register CONFIG @ 0x2007
  2326                           ;	Oscillator Selection bits
  2327                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  2328                           ;	Watchdog Timer Enable bit
  2329                           ;	WDTE = OFF, WDT disabled
  2330                           ;	Power-up Timer Enable bit
  2331                           ;	PWRTE = ON, PWRT enabled
  2332                           ;	RA5/MCLR/VPP Pin Function Select bit
  2333                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  2334                           ;	Brown-out Detect Enable bit
  2335                           ;	BOREN = ON, BOD enabled
  2336                           ;	Low-Voltage Programming Enable bit
  2337                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  2338                           ;	Data EE Memory Code Protection bit
  2339                           ;	CPD = OFF, Data memory code protection off
  2340                           ;	Flash Program Memory Code Protection bit
  2341                           ;	CP = OFF, Code protection off
  2342  2007                     	org	8199
  2343  2007  3F50               	dw	16208

Data Sizes:
    Strings     67
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      39
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> main@tmpBuf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 16
		 -> main@tmpBuf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> main@tmpBuf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 16
		 -> main@tmpBuf(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 16
		 -> main@tmpBuf(BANK0[8]), 

    main@tmpBuf	PTR unsigned char [8] size(1) Largest target is 0

    main@readBuf	PTR unsigned char [16] size(1) Largest target is 0

    UARTReadString@buf	PTR unsigned char  size(1) Largest target is 32
		 -> main@readBuf(BANK0[16]), 

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_10(CODE[17]), STR_9(CODE[19]), STR_8(CODE[17]), STR_7(CODE[19]), 
		 -> STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[4]), STR_3(CODE[10]), 
		 -> STR_2(CODE[13]), main@tmpBuf(BANK0[8]), main@readBuf(BANK0[16]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _UARTInit->___lldiv
    _UARTSendString->_UARTSendChar
    _UARTReadChar->_UARTDataReady

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa
    _init->_UARTInit

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    4826
                                              9 BANK0     30    30      0
                     _UARTReadString
                     _UARTSendString
                               _init
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1612
                                             13 COMMON     1     1      0
                                              4 BANK0      5     1      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     684
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     684
                                              0 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       8     5      3    1981
                                              1 COMMON     8     5      3
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTReadString                                       6     5      1     356
                                              1 COMMON     6     5      1
                       _UARTReadChar
 ---------------------------------------------------------------------------------
 (2) _UARTReadChar                                         0     0      0       0
                      _UARTDataReady
 ---------------------------------------------------------------------------------
 (3) _UARTDataReady                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTReadString
     _UARTReadChar
       _UARTDataReady
   _UARTSendString
     _UARTSendChar
   _init
     _UARTInit
       ___lldiv
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     27      27       3       48.8%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jul 17 21:02:39 2022

       UARTInit@baud_rate 0020                         pc 0002                        l22 04AC  
                      l25 04B6                        l33 05F5                        l42 04AA  
                      l51 056C                        l19 0729                        l36 04A0  
                      l72 04CE                        fsr 0004                       l210 065B  
                     l446 05B0                       l456 052A                       l634 06AA  
                     l636 06C1                       l628 04F0                       l992 049A  
                     l996 05F6                       l998 0606                       u400 061A  
                     u401 0619                       u420 0635                       u421 0634  
                     u510 05AC                       u415 061C                       u511 05AB  
                     u440 0653                       u600 0700                       u520 04F7  
                     u441 0652                       u425 0631                       u505 05A0  
                     u521 04F6                       u610 04B2                       u450 0575  
                     u611 04B1                       u435 0645                       u451 0574  
                     u620 04A7                       u700 0537                       u380 0606  
                     u540 0509                       u621 04A6                       u701 0536  
                     u381 0605                       u605 06FB                       u541 0508  
                     u710 053D                       u470 0587                       u550 0513  
                     u630 067C                       u711 053C                       u471 0586  
                     u551 0512                       u535 04FB                       u631 067B  
                     u720 0543                       u640 06A6                       u721 0542  
                     u465 0579                       u641 06A5                       u730 0564  
                     u490 0598                       u570 0526                       u650 06BD  
                     u731 0563                       u395 060B                       u491 0597  
                     u571 0525                       u555 050F                       u651 06BC  
                     u660 05C0                       u580 06C9                       u740 04D6  
                     u581 06C8                       u485 0588                       u565 051A  
                     u741 04D5                       u670 05DD                       u590 06D7  
                     u735 0560                       u671 05DC                       u495 0594  
                     u680 05E7                       u690 05F5                       u691 05F4  
                     u675 05D9                       u595 06D2                       fsr0 0004  
                     indf 0000                      l1000 0609                      l1010 0643  
                    l1002 0616                      l1100 04AC                      l1012 0644  
                    l1004 061A                      l1020 056D                      l1102 04B2  
                    l1014 064D                      l1006 0623                      l1030 0583  
                    l1022 056F                      l1104 04A1                      l1008 0635  
                    l1016 0653                      l1040 05A6                      l1032 0587  
                    l1024 0575                      l1120 067C                      l1112 065F  
                    l1200 072B                      l1106 04A1                      l1034 0598  
                    l1026 0578                      l1042 05AC                      l1050 04FA  
                    l1130 06A6                      l1122 0680                      l1114 0663  
                    l1210 073B                      l1202 072E                      l1108 04A7  
                    l1036 059E                      l1028 057F                      l1060 0519  
                    l1052 0501                      l1132 06AE                      l1124 0682  
                    l1116 0672                      l1220 0776                      l1212 074B  
                    l1204 072F                      l1150 05DD                      l1142 05B1  
                    l1070 06C9                      l1038 059F                      l1062 0520  
                    l1054 0505                      l1046 04F1                      l1134 06B5  
                    l1126 0691                      l1118 0676                      l1230 07A0  
                    l1222 0781                      l1214 0755                      l1206 0730  
                    l1160 0537                      l1152 052C                      l1144 05B6  
                    l1080 071B                      l1072 06F0                      l1056 0509  
                    l1048 04F7                      l1064 0526                      l1136 06B7  
                    l1128 069E                      l1240 07C3                      l1232 07A9  
                    l1224 078C                      l1216 0760                      l1208 0732  
                    l1162 053D                      l1170 0564                      l1154 052C  
                    l1146 05CA                      l1090 0722                      l1082 071C  
                    l1074 06F2                      l1058 0513                      l1138 06BD  
                    l1242 07C7                      l1234 07AD                      l1226 0793  
                    l1218 076B                      l1172 056B                      l1164 0544  
                    l1156 052E                      l1148 05D0                      l1092 0723  
                    l1084 071D                      l1076 0719                      l1068 06C2  
                    l1180 04C3                      l1244 07D0                      l1236 07B6  
                    l1228 079C                      l1252 07E1                      l1166 054E  
                    l1158 0532                      l1094 0724                      l1086 071E  
                    l1078 071A                      l1190 04E1                      l1182 04D2  
                    l1246 07D4                      l1238 07BA                      l1168 0552  
                    l1096 0725                      l1088 0721                      l1176 04B7  
                    l1192 04E6                      l1184 04D2                      l1248 07DD  
                    l1098 0728                      l1178 04BF                      l1186 04D6  
                    l1290 07E9                      l1188 04DD                      l1196 072A  
                    l1198 072A                      STR_1 0050                      STR_2 0035  
                    STR_3 0042                      STR_4 004C                      STR_5 0011  
                    STR_6 0024                      STR_7 0011                      STR_8 0024  
                    STR_9 0011               main@readBuf 002C                      _main 072A  
                    _init 04B7                      _itoa 04CF                      btemp 007E  
                    _utoa 065C                      start 0000                     ?_main 0070  
                   ?_init 0070                     ?_itoa 0024                     STR_10 0024  
         __end_of___lldiv 065C                     ?_utoa 0078           __end_of___lwdiv 05B1  
         __end_of___lwmod 052B                     _RCREG 001A                     _SPBRG 0099  
                   _PORTA 0005                     _TRISA 0085                     _TXREG 0019  
        __end_of_UARTInit 072A                     pclath 000A                     utoa@c 0022  
                   utoa@v 0020                     status 0003                     wtemp0 007E  
         __initialization 07FE              __end_of_main 07FE              __end_of_init 04CF  
            __end_of_itoa 04F1              __end_of_utoa 06C2                    ??_main 0029  
                  ??_init 007E                    ??_itoa 007D                    ??_utoa 007C  
   __end_of_UARTDataReady 04A1                 ??___lldiv 0078                 ??___lwdiv 0074  
               ??___lwmod 0074   __end_of__initialization 07FE            __pcstackCOMMON 0070  
               ?_UARTInit 0020  UARTSendString@max_length 0073         UARTReadString@buf 0074  
              __pmaintext 072A         UARTReadString@tmp 0075                ??_UARTInit 0025  
           ?_UARTReadChar 0070            _UARTReadString 052B                __stringtab 0001  
           ?_UARTSendChar 0070                   ___lldiv 05F6                   ___lwdiv 056D  
                 ___lwmod 04F1                 _CMCONbits 001F            _UARTSendString 05B1  
                 __ptext1 04CF                   __ptext2 065C                   __ptext3 04F1  
                 __ptext4 056D                   __ptext5 04B7                   __ptext6 06C2  
                 __ptext7 05F6                   __ptext8 05B1                   __ptext9 04AB  
  __end_of_UARTReadString 056D            ??_UARTReadChar 0071      end_of_initialization 07FE  
          ??_UARTSendChar 0070                   itoa@buf 0028                   itoa@val 0024  
         ___lldiv@divisor 0070           ___lldiv@counter 007D                 _RCSTAbits 0018  
  __end_of_UARTSendString 05F6                   utoa@buf 0023                   utoa@val 0078  
               _PORTAbits 0005                 _TRISBbits 0086           ?_UARTReadString 0071  
               _TXSTAbits 0098                main@tmpBuf 003C           ?_UARTSendString 0071  
     start_initialization 07FE           UARTReadString@i 0076      __end_of_UARTReadChar 04AB  
    __end_of_UARTSendChar 04B7  UARTReadString@max_length 0071                 ___latbits 0000  
           __pcstackBANK0 0020             _UARTDataReady 049A          ___lwdiv@dividend 0072  
           UARTSendChar@c 0070                  ?___lldiv 0070                  ?___lwdiv 0070  
                ?___lwmod 0070                 __pstrings 0001            ?_UARTDataReady 0070  
        ___lwdiv@quotient 0075           UARTSendString@i 0077                  _PIR1bits 000C  
                _UARTInit 06C2               __stringbase 0010          ??_UARTReadString 0072  
               main@nRead 0045                 main@letra 0044          ??_UARTSendString 0074  
            UARTInit@BRGH 0024        __end_of__stringtab 0011           ??_UARTDataReady 0070  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 052B  
                __ptext11 04A1                  __ptext12 049A              _UARTReadChar 04A1  
            _UARTSendChar 04AB                  itoa@base 0026         UARTSendString@str 0071  
        ___lwmod@dividend 0072          ___lldiv@dividend 0074                 stringcode 000B  
                utoa@base 007A          ___lldiv@quotient 0079           ___lwmod@divisor 0070  
         ___lwmod@counter 0075                  stringdir 000B                  stringtab 0001  
