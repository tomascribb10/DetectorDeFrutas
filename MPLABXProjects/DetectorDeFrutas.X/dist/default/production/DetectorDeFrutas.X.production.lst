

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Nov 21 17:14:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F628A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  008C                     	;# 
    83  008E                     	;# 
    84  0092                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009F                     	;# 
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  008C                     	;# 
   120  008E                     	;# 
   121  0092                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009F                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  008C                     	;# 
   157  008E                     	;# 
   158  0092                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009A                     	;# 
   162  009B                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009F                     	;# 
   166  001A                     _RCREG	set	26
   167  000C                     _PIR1bits	set	12
   168  0019                     _TXREG	set	25
   169  0018                     _RCSTAbits	set	24
   170  0006                     _PORTBbits	set	6
   171  0006                     _PORTB	set	6
   172  0005                     _PORTA	set	5
   173  001F                     _CMCONbits	set	31
   174  0098                     _TXSTAbits	set	152
   175  0099                     _SPBRG	set	153
   176  0086                     _TRISB	set	134
   177  0085                     _TRISA	set	133
   178  0086                     _TRISBbits	set	134
   179                           
   180                           	psect	strings
   181  0001                     __pstrings:
   182  0001                     stringtab:
   183  0001                     __stringtab:
   184  0001                     stringcode:	
   185                           ;	String table - string pointers are 1 byte each
   186                           
   187  0001                     stringdir:
   188  0001  3000               	movlw	high stringdir
   189  0002  008A               	movwf	10
   190  0003  0804               	movf	4,w
   191  0004  0A84               	incf	4,f
   192  0005  0782               	addwf	2,f
   193  0006                     __stringbase:
   194  0006  3400               	retlw	0
   195  0007                     __end_of__stringtab:
   196  0007                     STR_2:
   197  0007  340A               	retlw	10
   198  0008  340D               	retlw	13
   199  0009  3450               	retlw	80	;'P'
   200  000A  3472               	retlw	114	;'r'
   201  000B  3465               	retlw	101	;'e'
   202  000C  346E               	retlw	110	;'n'
   203  000D  3464               	retlw	100	;'d'
   204  000E  3469               	retlw	105	;'i'
   205  000F  3465               	retlw	101	;'e'
   206  0010  346E               	retlw	110	;'n'
   207  0011  3464               	retlw	100	;'d'
   208  0012  346F               	retlw	111	;'o'
   209  0013  3420               	retlw	32	;' '
   210  0014  344C               	retlw	76	;'L'
   211  0015  3465               	retlw	101	;'e'
   212  0016  3464               	retlw	100	;'d'
   213  0017  3420               	retlw	32	;' '
   214  0018  3400               	retlw	0
   215  0019  3400               	retlw	0
   216  001A                     STR_3:
   217  001A  340A               	retlw	10
   218  001B  340D               	retlw	13
   219  001C  3441               	retlw	65	;'A'
   220  001D  3470               	retlw	112	;'p'
   221  001E  3461               	retlw	97	;'a'
   222  001F  3467               	retlw	103	;'g'
   223  0020  3461               	retlw	97	;'a'
   224  0021  346E               	retlw	110	;'n'
   225  0022  3464               	retlw	100	;'d'
   226  0023  346F               	retlw	111	;'o'
   227  0024  3420               	retlw	32	;' '
   228  0025  344C               	retlw	76	;'L'
   229  0026  3465               	retlw	101	;'e'
   230  0027  3464               	retlw	100	;'d'
   231  0028  3420               	retlw	32	;' '
   232  0029  3400               	retlw	0
   233  002A  3400               	retlw	0
   234  002B                     STR_1:
   235  002B  3454               	retlw	84	;'T'
   236  002C  344F               	retlw	79	;'O'
   237  002D  344D               	retlw	77	;'M'
   238  002E  343E               	retlw	62	;'>'
   239  002F  3420               	retlw	32	;' '
   240  0030  3400               	retlw	0
   241  0031  3400               	retlw	0
   242  001A                     
   243                           	psect	cinit
   244  07FE                     start_initialization:	
   245                           ; #config settings
   246                           
   247  07FE                     __initialization:
   248  07FE                     end_of_initialization:	
   249                           ;End of C runtime variable initialization code
   250                           
   251  07FE                     __end_of__initialization:
   252  07FE  0183               	clrf	3
   253  07FF  2F84               	ljmp	_main	;jump to C main() function
   254                           
   255                           	psect	cstackCOMMON
   256  0070                     __pcstackCOMMON:
   257  0070                     ?_UARTReadChar:
   258  0070                     ?_init:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_main:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_UARTSendChar:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ??_UARTSendChar:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_UARTDataReady:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?___lldiv:	
   274                           ; 2 bytes @ 0x0
   275                           
   276  0070                     UARTSendChar@c:	
   277                           ; 4 bytes @ 0x0
   278                           
   279  0070                     ___lldiv@divisor:	
   280                           ; 1 bytes @ 0x0
   281                           
   282                           
   283                           ; 4 bytes @ 0x0
   284  0070                     	ds	1
   285  0071                     ?_UARTSendString:
   286  0071                     UARTSendString@max_length:	
   287                           ; 1 bytes @ 0x1
   288                           
   289                           
   290                           ; 1 bytes @ 0x1
   291  0071                     	ds	1
   292  0072                     ??_UARTSendString:
   293  0072                     ??_UARTDataReady:	
   294                           ; 1 bytes @ 0x2
   295                           
   296                           
   297                           ; 1 bytes @ 0x2
   298  0072                     	ds	1
   299  0073                     UARTSendString@i:
   300                           
   301                           ; 2 bytes @ 0x3
   302  0073                     	ds	1
   303  0074                     ___lldiv@dividend:
   304                           
   305                           ; 4 bytes @ 0x4
   306  0074                     	ds	1
   307  0075                     ??_UARTReadChar:
   308  0075                     UARTSendString@str:	
   309                           ; 1 bytes @ 0x5
   310                           
   311                           
   312                           ; 1 bytes @ 0x5
   313  0075                     	ds	3
   314  0078                     ??___lldiv:
   315                           
   316                           ; 1 bytes @ 0x8
   317  0078                     	ds	1
   318  0079                     ___lldiv@quotient:
   319                           
   320                           ; 4 bytes @ 0x9
   321  0079                     	ds	4
   322  007D                     ___lldiv@counter:
   323                           
   324                           ; 1 bytes @ 0xD
   325  007D                     	ds	1
   326  007E                     ??_init:
   327                           
   328                           	psect	cstackBANK0
   329  0020                     __pcstackBANK0:	
   330                           ; 1 bytes @ 0xE
   331                           
   332  0020                     ?_UARTInit:
   333  0020                     UARTInit@baud_rate:	
   334                           ; 1 bytes @ 0x0
   335                           
   336                           
   337                           ; 4 bytes @ 0x0
   338  0020                     	ds	4
   339  0024                     UARTInit@BRGH:
   340                           
   341                           ; 1 bytes @ 0x4
   342  0024                     	ds	1
   343  0025                     ??_UARTInit:
   344                           
   345                           ; 1 bytes @ 0x5
   346  0025                     	ds	4
   347  0029                     ??_main:
   348                           
   349                           ; 1 bytes @ 0x9
   350  0029                     	ds	2
   351  002B                     main@letra:
   352                           
   353                           ; 1 bytes @ 0xB
   354  002B                     	ds	1
   355                           
   356                           	psect	maintext
   357  0784                     __pmaintext:	
   358 ;;
   359 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   360 ;;
   361 ;; *************** function _main *****************
   362 ;; Defined at:
   363 ;;		line 63 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;  readBuf        32    0        PTR unsigned char [16]
   368 ;;  tmpBuf         16    0        PTR unsigned char [8]
   369 ;;  nRead           2    0        int 
   370 ;;  letra           1   11[BANK0 ] unsigned char 
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : B00/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   380 ;;      Params:         0       0       0       0
   381 ;;      Locals:         0       1       0       0
   382 ;;      Temps:          0       2       0       0
   383 ;;      Totals:         0       3       0       0
   384 ;;Total ram usage:        3 bytes
   385 ;; Hardware stack levels required when called: 3
   386 ;; This function calls:
   387 ;;		_UARTDataReady
   388 ;;		_UARTReadChar
   389 ;;		_UARTSendString
   390 ;;		_init
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396  0784                     _main:	
   397                           ;psect for function _main
   398                           
   399  0784                     l957:	
   400                           ;incstack = 0
   401                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   402                           
   403  0784                     l959:
   404                           
   405                           ;main.c: 67:     char letra;;main.c: 68:     init();
   406  0784  2670               	fcall	_init
   407  0785                     l961:
   408                           
   409                           ;main.c: 69:     PORTBbits.RB0 = 1;
   410  0785  1283               	bcf	3,5	;RP0=0, select bank0
   411  0786  1303               	bcf	3,6	;RP1=0, select bank0
   412  0787  1406               	bsf	6,0	;volatile
   413  0788                     l963:
   414                           
   415                           ;main.c: 70:     PORTBbits.RB1 = 0;
   416  0788  1086               	bcf	6,1	;volatile
   417  0789                     l965:
   418                           
   419                           ;main.c: 71:     PORTBbits.RB2 = 1;
   420  0789  1506               	bsf	6,2	;volatile
   421  078A                     l967:
   422                           
   423                           ;main.c: 72:     UARTSendString("TOM> \0", 16);
   424  078A  3010               	movlw	16
   425  078B  00A9               	movwf	??_main
   426  078C  0829               	movf	??_main,w
   427  078D  00F1               	movwf	UARTSendString@max_length
   428  078E  3025               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   429  078F  268E               	fcall	_UARTSendString
   430  0790                     l969:
   431                           
   432                           ;main.c: 75:         if(UARTDataReady() > 0){
   433  0790  2663               	fcall	_UARTDataReady
   434  0791  0871               	movf	?_UARTDataReady+1,w
   435  0792  3A80               	xorlw	128
   436  0793  00FF               	movwf	btemp+1
   437  0794  3080               	movlw	128
   438  0795  027F               	subwf	btemp+1,w
   439  0796  1D03               	skipz
   440  0797  2F9A               	goto	u345
   441  0798  3001               	movlw	1
   442  0799  0270               	subwf	?_UARTDataReady,w
   443  079A                     u345:
   444  079A  1C03               	skipc
   445  079B  2F9D               	goto	u341
   446  079C  2F9E               	goto	u340
   447  079D                     u341:
   448  079D  2F90               	goto	l969
   449  079E                     u340:
   450  079E                     l971:
   451                           
   452                           ;main.c: 90:             letra = UARTReadChar();
   453  079E  264C               	fcall	_UARTReadChar
   454  079F  1283               	bcf	3,5	;RP0=0, select bank0
   455  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   456  07A1  00A9               	movwf	??_main
   457  07A2  0829               	movf	??_main,w
   458  07A3  00AB               	movwf	main@letra
   459                           
   460                           ;main.c: 92:             switch (letra){
   461  07A4  2FE1               	goto	l999
   462  07A5                     l973:
   463                           
   464                           ;main.c: 94:                     UARTSendString("\n\rPrendiendo Led \0", 16);
   465  07A5  3010               	movlw	16
   466  07A6  00A9               	movwf	??_main
   467  07A7  0829               	movf	??_main,w
   468  07A8  00F1               	movwf	UARTSendString@max_length
   469  07A9  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   470  07AA  268E               	fcall	_UARTSendString
   471  07AB                     l975:
   472                           
   473                           ;main.c: 95:                     PORTBbits.RB0 = 1;
   474  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   475  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   476  07AD  1406               	bsf	6,0	;volatile
   477                           
   478                           ;main.c: 96:                     break;
   479  07AE  2F90               	goto	l969
   480  07AF                     l977:
   481                           
   482                           ;main.c: 98:                     UARTSendString("\n\rApagando Led \0", 16);
   483  07AF  3010               	movlw	16
   484  07B0  00A9               	movwf	??_main
   485  07B1  0829               	movf	??_main,w
   486  07B2  00F1               	movwf	UARTSendString@max_length
   487  07B3  3014               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   488  07B4  268E               	fcall	_UARTSendString
   489  07B5                     l979:
   490                           
   491                           ;main.c: 99:                     PORTBbits.RB0 = 0;
   492  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   493  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   494  07B7  1006               	bcf	6,0	;volatile
   495                           
   496                           ;main.c: 100:                     break;
   497  07B8  2F90               	goto	l969
   498  07B9                     l981:
   499                           
   500                           ;main.c: 102:                     UARTSendString("\n\rPrendiendo Led \0", 16);
   501  07B9  3010               	movlw	16
   502  07BA  00A9               	movwf	??_main
   503  07BB  0829               	movf	??_main,w
   504  07BC  00F1               	movwf	UARTSendString@max_length
   505  07BD  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   506  07BE  268E               	fcall	_UARTSendString
   507  07BF                     l983:
   508                           
   509                           ;main.c: 103:                     PORTBbits.RB1 = 1;
   510  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   511  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   512  07C1  1486               	bsf	6,1	;volatile
   513                           
   514                           ;main.c: 104:                     break;
   515  07C2  2F90               	goto	l969
   516  07C3                     l985:
   517                           
   518                           ;main.c: 106:                     UARTSendString("\n\rApagando Led \0", 16);
   519  07C3  3010               	movlw	16
   520  07C4  00A9               	movwf	??_main
   521  07C5  0829               	movf	??_main,w
   522  07C6  00F1               	movwf	UARTSendString@max_length
   523  07C7  3014               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   524  07C8  268E               	fcall	_UARTSendString
   525  07C9                     l987:
   526                           
   527                           ;main.c: 107:                     PORTBbits.RB1 = 0;
   528  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   529  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   530  07CB  1086               	bcf	6,1	;volatile
   531                           
   532                           ;main.c: 108:                     break;
   533  07CC  2F90               	goto	l969
   534  07CD                     l989:
   535                           
   536                           ;main.c: 110:                     UARTSendString("\n\rPrendiendo Led \0", 16);
   537  07CD  3010               	movlw	16
   538  07CE  00A9               	movwf	??_main
   539  07CF  0829               	movf	??_main,w
   540  07D0  00F1               	movwf	UARTSendString@max_length
   541  07D1  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   542  07D2  268E               	fcall	_UARTSendString
   543  07D3                     l991:
   544                           
   545                           ;main.c: 111:                     PORTBbits.RB2 = 1;
   546  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   547  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   548  07D5  1506               	bsf	6,2	;volatile
   549                           
   550                           ;main.c: 112:                     break;
   551  07D6  2F90               	goto	l969
   552  07D7                     l993:
   553                           
   554                           ;main.c: 114:                     UARTSendString("\n\rApagando Led \0", 16);
   555  07D7  3010               	movlw	16
   556  07D8  00A9               	movwf	??_main
   557  07D9  0829               	movf	??_main,w
   558  07DA  00F1               	movwf	UARTSendString@max_length
   559  07DB  3014               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   560  07DC  268E               	fcall	_UARTSendString
   561  07DD                     l995:
   562                           
   563                           ;main.c: 115:                     PORTBbits.RB2 = 0;
   564  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   565  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   566  07DF  1106               	bcf	6,2	;volatile
   567                           
   568                           ;main.c: 116:                     break;
   569  07E0  2F90               	goto	l969
   570  07E1                     l999:
   571  07E1  082B               	movf	main@letra,w
   572  07E2  00A9               	movwf	??_main
   573  07E3  01AA               	clrf	??_main+1
   574                           
   575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   576                           ; Switch size 1, requested type "simple"
   577                           ; Number of cases is 1, Range of values is 0 to 0
   578                           ; switch strategies available:
   579                           ; Name         Instructions Cycles
   580                           ; simple_byte            4     3 (average)
   581                           ; direct_byte            7     6 (fixed)
   582                           ; jumptable            260     6 (fixed)
   583                           ;	Chosen strategy is simple_byte
   584  07E4  082A               	movf	??_main+1,w
   585  07E5  3A00               	xorlw	0	; case 0
   586  07E6  1903               	skipnz
   587  07E7  2FE9               	goto	l1053
   588  07E8  2F90               	goto	l969
   589  07E9                     l1053:
   590                           
   591                           ; Switch size 1, requested type "simple"
   592                           ; Number of cases is 6, Range of values is 97 to 102
   593                           ; switch strategies available:
   594                           ; Name         Instructions Cycles
   595                           ; direct_byte           15     9 (fixed)
   596                           ; simple_byte           19    10 (average)
   597                           ; jumptable            263     9 (fixed)
   598                           ;	Chosen strategy is simple_byte
   599  07E9  0829               	movf	??_main,w
   600  07EA  3A61               	xorlw	97	; case 97
   601  07EB  1903               	skipnz
   602  07EC  2FA5               	goto	l973
   603  07ED  3A03               	xorlw	3	; case 98
   604  07EE  1903               	skipnz
   605  07EF  2FAF               	goto	l977
   606  07F0  3A01               	xorlw	1	; case 99
   607  07F1  1903               	skipnz
   608  07F2  2FB9               	goto	l981
   609  07F3  3A07               	xorlw	7	; case 100
   610  07F4  1903               	skipnz
   611  07F5  2FC3               	goto	l985
   612  07F6  3A01               	xorlw	1	; case 101
   613  07F7  1903               	skipnz
   614  07F8  2FCD               	goto	l989
   615  07F9  3A03               	xorlw	3	; case 102
   616  07FA  1903               	skipnz
   617  07FB  2FD7               	goto	l993
   618  07FC  2F90               	goto	l969
   619  07FD  2800               	ljmp	start
   620  07FE                     __end_of_main:
   621                           
   622                           	psect	text1
   623  0670                     __ptext1:	
   624 ;; *************** function _init *****************
   625 ;; Defined at:
   626 ;;		line 41 in file "main.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   640 ;;      Params:         0       0       0       0
   641 ;;      Locals:         0       0       0       0
   642 ;;      Temps:          0       0       0       0
   643 ;;      Totals:         0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; Hardware stack levels required when called: 2
   647 ;; This function calls:
   648 ;;		_UARTInit
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654  0670                     _init:	
   655                           ;psect for function _init
   656                           
   657  0670                     l933:	
   658                           ;incstack = 0
   659                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   660                           
   661                           
   662                           ;main.c: 49:     CMCONbits.CM0 = 1;
   663  0670  1283               	bcf	3,5	;RP0=0, select bank0
   664  0671  1303               	bcf	3,6	;RP1=0, select bank0
   665  0672  141F               	bsf	31,0	;volatile
   666                           
   667                           ;main.c: 50:     CMCONbits.CM1 = 1;
   668  0673  149F               	bsf	31,1	;volatile
   669                           
   670                           ;main.c: 51:     CMCONbits.CM2 = 1;
   671  0674  151F               	bsf	31,2	;volatile
   672                           
   673                           ;main.c: 54:     TRISBbits.TRISB1 = 0;
   674  0675  1683               	bsf	3,5	;RP0=1, select bank1
   675  0676  1303               	bcf	3,6	;RP1=0, select bank1
   676  0677  1086               	bcf	6,1	;volatile
   677  0678                     l935:
   678                           
   679                           ;main.c: 55:     TRISA = 0x00;
   680  0678  0185               	clrf	5	;volatile
   681                           
   682                           ;main.c: 56:     PORTA = 0;
   683  0679  1283               	bcf	3,5	;RP0=0, select bank0
   684  067A  1303               	bcf	3,6	;RP1=0, select bank0
   685  067B  0185               	clrf	5	;volatile
   686                           
   687                           ;main.c: 57:     TRISB = 0x00;
   688  067C  1683               	bsf	3,5	;RP0=1, select bank1
   689  067D  1303               	bcf	3,6	;RP1=0, select bank1
   690  067E  0186               	clrf	6	;volatile
   691                           
   692                           ;main.c: 58:     PORTB = 0;
   693  067F  1283               	bcf	3,5	;RP0=0, select bank0
   694  0680  1303               	bcf	3,6	;RP1=0, select bank0
   695  0681  0186               	clrf	6	;volatile
   696  0682                     l937:
   697                           
   698                           ;main.c: 60:     UARTInit(9600, 1);
   699  0682  3000               	movlw	0
   700  0683  00A3               	movwf	UARTInit@baud_rate+3
   701  0684  3000               	movlw	0
   702  0685  00A2               	movwf	UARTInit@baud_rate+2
   703  0686  3025               	movlw	37
   704  0687  00A1               	movwf	UARTInit@baud_rate+1
   705  0688  3080               	movlw	128
   706  0689  00A0               	movwf	UARTInit@baud_rate
   707  068A  01A4               	clrf	UARTInit@BRGH
   708  068B  0AA4               	incf	UARTInit@BRGH,f
   709  068C  271C               	fcall	_UARTInit
   710  068D                     l25:
   711  068D  0008               	return
   712  068E                     __end_of_init:
   713                           
   714                           	psect	text2
   715  071C                     __ptext2:	
   716 ;; *************** function _UARTInit *****************
   717 ;; Defined at:
   718 ;;		line 15 in file "UART.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
   721 ;;  BRGH            1    4[BANK0 ] const unsigned char 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   733 ;;      Params:         0       5       0       0
   734 ;;      Locals:         0       0       0       0
   735 ;;      Temps:          0       4       0       0
   736 ;;      Totals:         0       9       0       0
   737 ;;Total ram usage:        9 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; Hardware stack levels required when called: 1
   740 ;; This function calls:
   741 ;;		___lldiv
   742 ;; This function is called by:
   743 ;;		_init
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747  071C                     _UARTInit:	
   748                           ;psect for function _UARTInit
   749                           
   750  071C                     l893:	
   751                           ;incstack = 0
   752                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
   753                           
   754                           
   755                           ;UART.c: 17:     if (BRGH == 0) {
   756  071C  1283               	bcf	3,5	;RP0=0, select bank0
   757  071D  1303               	bcf	3,6	;RP1=0, select bank0
   758  071E  0824               	movf	UARTInit@BRGH,w
   759  071F  1D03               	btfss	3,2
   760  0720  2F22               	goto	u271
   761  0721  2F23               	goto	u270
   762  0722                     u271:
   763  0722  2F4C               	goto	l899
   764  0723                     u270:
   765  0723                     l895:
   766                           
   767                           ;UART.c: 18:         SPBRG = 4000000/(64*baud_rate) - 1;
   768  0723  0820               	movf	UARTInit@baud_rate,w
   769  0724  00A5               	movwf	??_UARTInit
   770  0725  0821               	movf	UARTInit@baud_rate+1,w
   771  0726  00A6               	movwf	??_UARTInit+1
   772  0727  0822               	movf	UARTInit@baud_rate+2,w
   773  0728  00A7               	movwf	??_UARTInit+2
   774  0729  0823               	movf	UARTInit@baud_rate+3,w
   775  072A  00A8               	movwf	??_UARTInit+3
   776  072B  3006               	movlw	6
   777  072C                     u285:
   778  072C  1003               	clrc
   779  072D  0DA5               	rlf	??_UARTInit,f
   780  072E  0DA6               	rlf	??_UARTInit+1,f
   781  072F  0DA7               	rlf	??_UARTInit+2,f
   782  0730  0DA8               	rlf	??_UARTInit+3,f
   783  0731                     u280:
   784  0731  3EFF               	addlw	-1
   785  0732  1D03               	skipz
   786  0733  2F2C               	goto	u285
   787  0734  0828               	movf	??_UARTInit+3,w
   788  0735  00F3               	movwf	___lldiv@divisor+3
   789  0736  0827               	movf	??_UARTInit+2,w
   790  0737  00F2               	movwf	___lldiv@divisor+2
   791  0738  0826               	movf	??_UARTInit+1,w
   792  0739  00F1               	movwf	___lldiv@divisor+1
   793  073A  0825               	movf	??_UARTInit,w
   794  073B  00F0               	movwf	___lldiv@divisor
   795  073C  3000               	movlw	0
   796  073D  00F7               	movwf	___lldiv@dividend+3
   797  073E  303D               	movlw	61
   798  073F  00F6               	movwf	___lldiv@dividend+2
   799  0740  3009               	movlw	9
   800  0741  00F5               	movwf	___lldiv@dividend+1
   801  0742  3000               	movlw	0
   802  0743  00F4               	movwf	___lldiv@dividend
   803  0744  26B6               	fcall	___lldiv
   804  0745  0870               	movf	?___lldiv,w
   805  0746  3EFF               	addlw	255
   806  0747  1683               	bsf	3,5	;RP0=1, select bank1
   807  0748  1303               	bcf	3,6	;RP1=0, select bank1
   808  0749  0099               	movwf	25	;volatile
   809  074A                     l897:
   810                           
   811                           ;UART.c: 19:         TXSTAbits.BRGH = 0;
   812  074A  1118               	bcf	24,2	;volatile
   813                           
   814                           ;UART.c: 20:     } else {
   815  074B  2F74               	goto	l903
   816  074C                     l899:
   817                           
   818                           ;UART.c: 21:         SPBRG = 4000000/(16*baud_rate) - 1;
   819  074C  0820               	movf	UARTInit@baud_rate,w
   820  074D  00A5               	movwf	??_UARTInit
   821  074E  0821               	movf	UARTInit@baud_rate+1,w
   822  074F  00A6               	movwf	??_UARTInit+1
   823  0750  0822               	movf	UARTInit@baud_rate+2,w
   824  0751  00A7               	movwf	??_UARTInit+2
   825  0752  0823               	movf	UARTInit@baud_rate+3,w
   826  0753  00A8               	movwf	??_UARTInit+3
   827  0754  3004               	movlw	4
   828  0755                     u295:
   829  0755  1003               	clrc
   830  0756  0DA5               	rlf	??_UARTInit,f
   831  0757  0DA6               	rlf	??_UARTInit+1,f
   832  0758  0DA7               	rlf	??_UARTInit+2,f
   833  0759  0DA8               	rlf	??_UARTInit+3,f
   834  075A                     u290:
   835  075A  3EFF               	addlw	-1
   836  075B  1D03               	skipz
   837  075C  2F55               	goto	u295
   838  075D  0828               	movf	??_UARTInit+3,w
   839  075E  00F3               	movwf	___lldiv@divisor+3
   840  075F  0827               	movf	??_UARTInit+2,w
   841  0760  00F2               	movwf	___lldiv@divisor+2
   842  0761  0826               	movf	??_UARTInit+1,w
   843  0762  00F1               	movwf	___lldiv@divisor+1
   844  0763  0825               	movf	??_UARTInit,w
   845  0764  00F0               	movwf	___lldiv@divisor
   846  0765  3000               	movlw	0
   847  0766  00F7               	movwf	___lldiv@dividend+3
   848  0767  303D               	movlw	61
   849  0768  00F6               	movwf	___lldiv@dividend+2
   850  0769  3009               	movlw	9
   851  076A  00F5               	movwf	___lldiv@dividend+1
   852  076B  3000               	movlw	0
   853  076C  00F4               	movwf	___lldiv@dividend
   854  076D  26B6               	fcall	___lldiv
   855  076E  0870               	movf	?___lldiv,w
   856  076F  3EFF               	addlw	255
   857  0770  1683               	bsf	3,5	;RP0=1, select bank1
   858  0771  1303               	bcf	3,6	;RP1=0, select bank1
   859  0772  0099               	movwf	25	;volatile
   860  0773                     l901:
   861                           
   862                           ;UART.c: 22:         TXSTAbits.BRGH = 1;
   863  0773  1518               	bsf	24,2	;volatile
   864  0774                     l903:
   865                           
   866                           ;UART.c: 26:     TXSTAbits.TX9 = 0;
   867  0774  1318               	bcf	24,6	;volatile
   868  0775                     l905:
   869                           
   870                           ;UART.c: 27:     TXSTAbits.TXEN = 1;
   871  0775  1698               	bsf	24,5	;volatile
   872  0776                     l907:
   873                           
   874                           ;UART.c: 28:     TXSTAbits.SYNC = 0;
   875  0776  1218               	bcf	24,4	;volatile
   876  0777                     l909:
   877                           
   878                           ;UART.c: 29:     TXSTAbits.TRMT = 1;
   879  0777  1498               	bsf	24,1	;volatile
   880  0778                     l911:
   881                           
   882                           ;UART.c: 32:     RCSTAbits.SPEN = 1;
   883  0778  1283               	bcf	3,5	;RP0=0, select bank0
   884  0779  1303               	bcf	3,6	;RP1=0, select bank0
   885  077A  1798               	bsf	24,7	;volatile
   886  077B                     l913:
   887                           
   888                           ;UART.c: 33:     RCSTAbits.RX9 = 0;
   889  077B  1318               	bcf	24,6	;volatile
   890  077C                     l915:
   891                           
   892                           ;UART.c: 34:     RCSTAbits.CREN = 1;
   893  077C  1618               	bsf	24,4	;volatile
   894  077D                     l917:
   895                           
   896                           ;UART.c: 35:     RCSTAbits.FERR = 0;
   897  077D  1118               	bcf	24,2	;volatile
   898  077E                     l919:
   899                           
   900                           ;UART.c: 36:     RCSTAbits.OERR = 0;
   901  077E  1098               	bcf	24,1	;volatile
   902  077F                     l921:
   903                           
   904                           ;UART.c: 39:     TRISBbits.TRISB1 = 1;
   905  077F  1683               	bsf	3,5	;RP0=1, select bank1
   906  0780  1303               	bcf	3,6	;RP1=0, select bank1
   907  0781  1486               	bsf	6,1	;volatile
   908  0782                     l923:
   909                           
   910                           ;UART.c: 40:     TRISBbits.TRISB2 = 1;
   911  0782  1506               	bsf	6,2	;volatile
   912  0783                     l61:
   913  0783  0008               	return
   914  0784                     __end_of_UARTInit:
   915                           
   916                           	psect	text3
   917  06B6                     __ptext3:	
   918 ;; *************** function ___lldiv *****************
   919 ;; Defined at:
   920 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  divisor         4    0[COMMON] unsigned long 
   923 ;;  dividend        4    4[COMMON] unsigned long 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  quotient        4    9[COMMON] unsigned long 
   926 ;;  counter         1   13[COMMON] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  4    0[COMMON] unsigned long 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   936 ;;      Params:         8       0       0       0
   937 ;;      Locals:         5       0       0       0
   938 ;;      Temps:          1       0       0       0
   939 ;;      Totals:        14       0       0       0
   940 ;;Total ram usage:       14 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_UARTInit
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949  06B6                     ___lldiv:	
   950                           ;psect for function ___lldiv
   951                           
   952  06B6                     l869:	
   953                           ;incstack = 0
   954                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   955                           
   956  06B6  3000               	movlw	0
   957  06B7  00FC               	movwf	___lldiv@quotient+3
   958  06B8  3000               	movlw	0
   959  06B9  00FB               	movwf	___lldiv@quotient+2
   960  06BA  3000               	movlw	0
   961  06BB  00FA               	movwf	___lldiv@quotient+1
   962  06BC  3000               	movlw	0
   963  06BD  00F9               	movwf	___lldiv@quotient
   964  06BE  0873               	movf	___lldiv@divisor+3,w
   965  06BF  0472               	iorwf	___lldiv@divisor+2,w
   966  06C0  0471               	iorwf	___lldiv@divisor+1,w
   967  06C1  0470               	iorwf	___lldiv@divisor,w
   968  06C2  1903               	skipnz
   969  06C3  2EC5               	goto	u201
   970  06C4  2EC6               	goto	u200
   971  06C5                     u201:
   972  06C5  2F13               	goto	l889
   973  06C6                     u200:
   974  06C6                     l871:
   975  06C6  01FD               	clrf	___lldiv@counter
   976  06C7  0AFD               	incf	___lldiv@counter,f
   977  06C8  2ED6               	goto	l875
   978  06C9                     l873:
   979  06C9  3001               	movlw	1
   980  06CA  00F8               	movwf	??___lldiv
   981  06CB                     u215:
   982  06CB  1003               	clrc
   983  06CC  0DF0               	rlf	___lldiv@divisor,f
   984  06CD  0DF1               	rlf	___lldiv@divisor+1,f
   985  06CE  0DF2               	rlf	___lldiv@divisor+2,f
   986  06CF  0DF3               	rlf	___lldiv@divisor+3,f
   987  06D0  0BF8               	decfsz	??___lldiv,f
   988  06D1  2ECB               	goto	u215
   989  06D2  3001               	movlw	1
   990  06D3  00F8               	movwf	??___lldiv
   991  06D4  0878               	movf	??___lldiv,w
   992  06D5  07FD               	addwf	___lldiv@counter,f
   993  06D6                     l875:
   994  06D6  1FF3               	btfss	___lldiv@divisor+3,7
   995  06D7  2ED9               	goto	u221
   996  06D8  2EDA               	goto	u220
   997  06D9                     u221:
   998  06D9  2EC9               	goto	l873
   999  06DA                     u220:
  1000  06DA                     l877:
  1001  06DA  3001               	movlw	1
  1002  06DB  00F8               	movwf	??___lldiv
  1003  06DC                     u235:
  1004  06DC  1003               	clrc
  1005  06DD  0DF9               	rlf	___lldiv@quotient,f
  1006  06DE  0DFA               	rlf	___lldiv@quotient+1,f
  1007  06DF  0DFB               	rlf	___lldiv@quotient+2,f
  1008  06E0  0DFC               	rlf	___lldiv@quotient+3,f
  1009  06E1  0BF8               	decfsz	??___lldiv,f
  1010  06E2  2EDC               	goto	u235
  1011  06E3                     l879:
  1012  06E3  0873               	movf	___lldiv@divisor+3,w
  1013  06E4  0277               	subwf	___lldiv@dividend+3,w
  1014  06E5  1D03               	skipz
  1015  06E6  2EF1               	goto	u245
  1016  06E7  0872               	movf	___lldiv@divisor+2,w
  1017  06E8  0276               	subwf	___lldiv@dividend+2,w
  1018  06E9  1D03               	skipz
  1019  06EA  2EF1               	goto	u245
  1020  06EB  0871               	movf	___lldiv@divisor+1,w
  1021  06EC  0275               	subwf	___lldiv@dividend+1,w
  1022  06ED  1D03               	skipz
  1023  06EE  2EF1               	goto	u245
  1024  06EF  0870               	movf	___lldiv@divisor,w
  1025  06F0  0274               	subwf	___lldiv@dividend,w
  1026  06F1                     u245:
  1027  06F1  1C03               	skipc
  1028  06F2  2EF4               	goto	u241
  1029  06F3  2EF5               	goto	u240
  1030  06F4                     u241:
  1031  06F4  2F04               	goto	l885
  1032  06F5                     u240:
  1033  06F5                     l881:
  1034  06F5  0870               	movf	___lldiv@divisor,w
  1035  06F6  02F4               	subwf	___lldiv@dividend,f
  1036  06F7  0871               	movf	___lldiv@divisor+1,w
  1037  06F8  1C03               	skipc
  1038  06F9  0F71               	incfsz	___lldiv@divisor+1,w
  1039  06FA  02F5               	subwf	___lldiv@dividend+1,f
  1040  06FB  0872               	movf	___lldiv@divisor+2,w
  1041  06FC  1C03               	skipc
  1042  06FD  0F72               	incfsz	___lldiv@divisor+2,w
  1043  06FE  02F6               	subwf	___lldiv@dividend+2,f
  1044  06FF  0873               	movf	___lldiv@divisor+3,w
  1045  0700  1C03               	skipc
  1046  0701  0F73               	incfsz	___lldiv@divisor+3,w
  1047  0702  02F7               	subwf	___lldiv@dividend+3,f
  1048  0703                     l883:
  1049  0703  1479               	bsf	___lldiv@quotient,0
  1050  0704                     l885:
  1051  0704  3001               	movlw	1
  1052  0705                     u255:
  1053  0705  1003               	clrc
  1054  0706  0CF3               	rrf	___lldiv@divisor+3,f
  1055  0707  0CF2               	rrf	___lldiv@divisor+2,f
  1056  0708  0CF1               	rrf	___lldiv@divisor+1,f
  1057  0709  0CF0               	rrf	___lldiv@divisor,f
  1058  070A  3EFF               	addlw	-1
  1059  070B  1D03               	skipz
  1060  070C  2F05               	goto	u255
  1061  070D                     l887:
  1062  070D  3001               	movlw	1
  1063  070E  02FD               	subwf	___lldiv@counter,f
  1064  070F  1D03               	btfss	3,2
  1065  0710  2F12               	goto	u261
  1066  0711  2F13               	goto	u260
  1067  0712                     u261:
  1068  0712  2EDA               	goto	l877
  1069  0713                     u260:
  1070  0713                     l889:
  1071  0713  087C               	movf	___lldiv@quotient+3,w
  1072  0714  00F3               	movwf	?___lldiv+3
  1073  0715  087B               	movf	___lldiv@quotient+2,w
  1074  0716  00F2               	movwf	?___lldiv+2
  1075  0717  087A               	movf	___lldiv@quotient+1,w
  1076  0718  00F1               	movwf	?___lldiv+1
  1077  0719  0879               	movf	___lldiv@quotient,w
  1078  071A  00F0               	movwf	?___lldiv
  1079  071B                     l215:
  1080  071B  0008               	return
  1081  071C                     __end_of___lldiv:
  1082                           
  1083                           	psect	text4
  1084  068E                     __ptext4:	
  1085 ;; *************** function _UARTSendString *****************
  1086 ;; Defined at:
  1087 ;;		line 57 in file "UART.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  str             1    wreg     PTR const unsigned char 
  1090 ;;		 -> STR_7(17), STR_6(19), STR_5(17), STR_4(19), 
  1091 ;;		 -> STR_3(17), STR_2(19), STR_1(7), 
  1092 ;;  max_length      1    1[COMMON] const unsigned char 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  str             1    5[COMMON] PTR const unsigned char 
  1095 ;;		 -> STR_7(17), STR_6(19), STR_5(17), STR_4(19), 
  1096 ;;		 -> STR_3(17), STR_2(19), STR_1(7), 
  1097 ;;  i               2    3[COMMON] int 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1107 ;;      Params:         1       0       0       0
  1108 ;;      Locals:         3       0       0       0
  1109 ;;      Temps:          1       0       0       0
  1110 ;;      Totals:         5       0       0       0
  1111 ;;Total ram usage:        5 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; Hardware stack levels required when called: 1
  1114 ;; This function calls:
  1115 ;;		_UARTSendChar
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121  068E                     _UARTSendString:	
  1122                           ;psect for function _UARTSendString
  1123                           
  1124                           
  1125                           ;incstack = 0
  1126                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1127                           ;UARTSendString@str stored from wreg
  1128  068E  00F5               	movwf	UARTSendString@str
  1129  068F                     l939:
  1130                           
  1131                           ;UART.c: 58:     int i = 0;
  1132  068F  01F3               	clrf	UARTSendString@i
  1133  0690  01F4               	clrf	UARTSendString@i+1
  1134                           
  1135                           ;UART.c: 59:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  1136  0691  01F3               	clrf	UARTSendString@i
  1137  0692  01F4               	clrf	UARTSendString@i+1
  1138  0693  2E9F               	goto	l945
  1139  0694                     l941:
  1140                           
  1141                           ;UART.c: 60:         UARTSendChar(str[i]);
  1142  0694  0873               	movf	UARTSendString@i,w
  1143  0695  0775               	addwf	UARTSendString@str,w
  1144  0696  0084               	movwf	4
  1145  0697  2001               	fcall	stringdir
  1146  0698  2657               	fcall	_UARTSendChar
  1147  0699                     l943:
  1148                           
  1149                           ;UART.c: 61:     }
  1150  0699  3001               	movlw	1
  1151  069A  07F3               	addwf	UARTSendString@i,f
  1152  069B  1803               	skipnc
  1153  069C  0AF4               	incf	UARTSendString@i+1,f
  1154  069D  3000               	movlw	0
  1155  069E  07F4               	addwf	UARTSendString@i+1,f
  1156  069F                     l945:
  1157  069F  0874               	movf	UARTSendString@i+1,w
  1158  06A0  3A80               	xorlw	128
  1159  06A1  00F2               	movwf	??_UARTSendString
  1160  06A2  3080               	movlw	128
  1161  06A3  0272               	subwf	??_UARTSendString,w
  1162  06A4  1D03               	skipz
  1163  06A5  2EA8               	goto	u315
  1164  06A6  0871               	movf	UARTSendString@max_length,w
  1165  06A7  0273               	subwf	UARTSendString@i,w
  1166  06A8                     u315:
  1167  06A8  1803               	skipnc
  1168  06A9  2EAB               	goto	u311
  1169  06AA  2EAC               	goto	u310
  1170  06AB                     u311:
  1171  06AB  2EB5               	goto	l75
  1172  06AC                     u310:
  1173  06AC                     l947:
  1174  06AC  0873               	movf	UARTSendString@i,w
  1175  06AD  0775               	addwf	UARTSendString@str,w
  1176  06AE  0084               	movwf	4
  1177  06AF  2001               	fcall	stringdir
  1178  06B0  3A00               	xorlw	0
  1179  06B1  1D03               	skipz
  1180  06B2  2EB4               	goto	u321
  1181  06B3  2EB5               	goto	u320
  1182  06B4                     u321:
  1183  06B4  2E94               	goto	l941
  1184  06B5                     u320:
  1185  06B5                     l75:
  1186  06B5  0008               	return
  1187  06B6                     __end_of_UARTSendString:
  1188                           
  1189                           	psect	text5
  1190  0657                     __ptext5:	
  1191 ;; *************** function _UARTSendChar *****************
  1192 ;; Defined at:
  1193 ;;		line 47 in file "UART.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  c               1    wreg     const unsigned char 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  c               1    0[COMMON] const unsigned char 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1207 ;;      Params:         0       0       0       0
  1208 ;;      Locals:         1       0       0       0
  1209 ;;      Temps:          0       0       0       0
  1210 ;;      Totals:         1       0       0       0
  1211 ;;Total ram usage:        1 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_UARTSendString
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220  0657                     _UARTSendChar:	
  1221                           ;psect for function _UARTSendChar
  1222                           
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _UARTSendChar: [wreg]
  1226                           ;UARTSendChar@c stored from wreg
  1227  0657  00F0               	movwf	UARTSendChar@c
  1228  0658                     l929:
  1229  0658                     l64:	
  1230                           ;UART.c: 48:     while (TXSTAbits.TRMT == 0);
  1231                           
  1232  0658  1683               	bsf	3,5	;RP0=1, select bank1
  1233  0659  1303               	bcf	3,6	;RP1=0, select bank1
  1234  065A  1C98               	btfss	24,1	;volatile
  1235  065B  2E5D               	goto	u301
  1236  065C  2E5E               	goto	u300
  1237  065D                     u301:
  1238  065D  2E58               	goto	l64
  1239  065E                     u300:
  1240  065E                     l931:
  1241                           
  1242                           ;UART.c: 49:     TXREG = c;
  1243  065E  0870               	movf	UARTSendChar@c,w
  1244  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0661  0099               	movwf	25	;volatile
  1247  0662                     l67:
  1248  0662  0008               	return
  1249  0663                     __end_of_UARTSendChar:
  1250                           
  1251                           	psect	text6
  1252  064C                     __ptext6:	
  1253 ;; *************** function _UARTReadChar *****************
  1254 ;; Defined at:
  1255 ;;		line 76 in file "UART.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      unsigned char 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1269 ;;      Params:         0       0       0       0
  1270 ;;      Locals:         0       0       0       0
  1271 ;;      Temps:          0       0       0       0
  1272 ;;      Totals:         0       0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 1
  1276 ;; This function calls:
  1277 ;;		_UARTDataReady
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;;		_UARTReadString
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284  064C                     _UARTReadChar:	
  1285                           ;psect for function _UARTReadChar
  1286                           
  1287  064C                     l949:	
  1288                           ;incstack = 0
  1289                           ; Regs used in _UARTReadChar: [wreg+status,2+status,0+pclath+cstack]
  1290                           
  1291  064C                     l951:	
  1292                           ;UART.c: 77:     while (!UARTDataReady());
  1293                           
  1294  064C  2663               	fcall	_UARTDataReady
  1295  064D  0870               	movf	?_UARTDataReady,w
  1296  064E  0471               	iorwf	?_UARTDataReady+1,w
  1297  064F  1903               	btfsc	3,2
  1298  0650  2E52               	goto	u331
  1299  0651  2E53               	goto	u330
  1300  0652                     u331:
  1301  0652  2E4C               	goto	l951
  1302  0653                     u330:
  1303  0653                     l953:
  1304                           
  1305                           ;UART.c: 78:     return RCREG;
  1306  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0655  081A               	movf	26,w	;volatile
  1309  0656                     l84:
  1310  0656  0008               	return
  1311  0657                     __end_of_UARTReadChar:
  1312                           
  1313                           	psect	text7
  1314  0663                     __ptext7:	
  1315 ;; *************** function _UARTDataReady *****************
  1316 ;; Defined at:
  1317 ;;		line 68 in file "UART.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2    0[COMMON] short 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1331 ;;      Params:         2       0       0       0
  1332 ;;      Locals:         0       0       0       0
  1333 ;;      Temps:          3       0       0       0
  1334 ;;      Totals:         5       0       0       0
  1335 ;;Total ram usage:        5 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;;		_UARTReadChar
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345  0663                     _UARTDataReady:	
  1346                           ;psect for function _UARTDataReady
  1347                           
  1348  0663                     l925:	
  1349                           ;incstack = 0
  1350                           ; Regs used in _UARTDataReady: [wreg+status,2+status,0]
  1351                           
  1352                           
  1353                           ;UART.c: 69:     return PIR1bits.RCIF ? 1 : 0;
  1354  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0665  0E0C               	swapf	12,w	;volatile
  1357  0666  00F2               	movwf	??_UARTDataReady
  1358  0667  0C72               	rrf	??_UARTDataReady,w
  1359  0668  3901               	andlw	1
  1360  0669  00F3               	movwf	??_UARTDataReady+1
  1361  066A  01F4               	clrf	??_UARTDataReady+2
  1362  066B  0873               	movf	??_UARTDataReady+1,w
  1363  066C  00F0               	movwf	?_UARTDataReady
  1364  066D  0874               	movf	??_UARTDataReady+2,w
  1365  066E  00F1               	movwf	?_UARTDataReady+1
  1366  066F                     l78:
  1367  066F  0008               	return
  1368  0670                     __end_of_UARTDataReady:
  1369  007E                     btemp	set	126	;btemp
  1370  007E                     wtemp0	set	126
  1371                           
  1372                           	psect	idloc
  1373                           
  1374                           ;Config register IDLOC0 @ 0x2000
  1375                           ;	unspecified, using default values
  1376  2000                     	org	8192
  1377  2000  3FFF               	dw	16383
  1378                           
  1379                           ;Config register IDLOC1 @ 0x2001
  1380                           ;	unspecified, using default values
  1381  2001                     	org	8193
  1382  2001  3FFF               	dw	16383
  1383                           
  1384                           ;Config register IDLOC2 @ 0x2002
  1385                           ;	unspecified, using default values
  1386  2002                     	org	8194
  1387  2002  3FFF               	dw	16383
  1388                           
  1389                           ;Config register IDLOC3 @ 0x2003
  1390                           ;	unspecified, using default values
  1391  2003                     	org	8195
  1392  2003  3FFF               	dw	16383
  1393                           
  1394                           	psect	config
  1395                           
  1396                           ;Config register CONFIG @ 0x2007
  1397                           ;	Oscillator Selection bits
  1398                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  1399                           ;	Watchdog Timer Enable bit
  1400                           ;	WDTE = OFF, WDT disabled
  1401                           ;	Power-up Timer Enable bit
  1402                           ;	PWRTE = ON, PWRT enabled
  1403                           ;	RA5/MCLR/VPP Pin Function Select bit
  1404                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  1405                           ;	Brown-out Detect Enable bit
  1406                           ;	BOREN = ON, BOD enabled
  1407                           ;	Low-Voltage Programming Enable bit
  1408                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1409                           ;	Data EE Memory Code Protection bit
  1410                           ;	CPD = OFF, Data memory code protection off
  1411                           ;	Flash Program Memory Code Protection bit
  1412                           ;	CP = OFF, Code protection off
  1413  2007                     	org	8199
  1414  2007  3F50               	dw	16208

Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      12
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_7(CODE[17]), STR_6(CODE[19]), STR_5(CODE[17]), STR_4(CODE[19]), 
		 -> STR_3(CODE[17]), STR_2(CODE[19]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _UARTInit->___lldiv
    _UARTSendString->_UARTSendChar
    _UARTReadChar->_UARTDataReady

Critical Paths under _main in BANK0

    _init->_UARTInit

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0    1628
                                              9 BANK0      3     3      0
                      _UARTDataReady
                       _UARTReadChar
                     _UARTSendString
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     684
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     684
                                              0 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       5     4      1     920
                                              1 COMMON     5     4      1
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTReadChar                                         0     0      0       0
                      _UARTDataReady
 ---------------------------------------------------------------------------------
 (2) _UARTDataReady                                        5     3      2       0
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTDataReady
   _UARTReadChar
     _UARTDataReady
   _UARTSendString
     _UARTSendChar
   _init
     _UARTInit
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      C       C       3       15.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Nov 21 17:14:12 2022

       UARTInit@baud_rate 0020                         pc 0002                        l25 068D  
                      l61 0783                        l64 0658                        l67 0662  
                      l75 06B5                        l84 0656                        l78 066F  
                      fsr 0004                       l215 071B                       l901 0773  
                     l911 0778                       l903 0774                       l921 077F  
                     l913 077B                       l905 0775                       l931 065E  
                     l923 0782                       l915 077C                       l907 0776  
                     l925 0663                       l941 0694                       l917 077D  
                     l909 0777                       l933 0670                       l951 064C  
                     l943 0699                       l871 06C6                       l919 077E  
                     l935 0678                       l953 0653                       l929 0658  
                     l945 069F                       l881 06F5                       l873 06C9  
                     l937 0682                       l961 0785                       l947 06AC  
                     l939 068F                       l883 0703                       l875 06D6  
                     l971 079E                       l963 0788                       l949 064C  
                     l885 0704                       l877 06DA                       l869 06B6  
                     l893 071C                       l981 07B9                       l973 07A5  
                     l965 0789                       l957 0784                       l887 070D  
                     l879 06E3                       l895 0723                       l991 07D3  
                     l983 07BF                       l975 07AB                       l967 078A  
                     l959 0784                       l889 0713                       l897 074A  
                     l993 07D7                       l985 07C3                       l977 07AF  
                     l969 0790                       l899 074C                       l995 07DD  
                     l987 07C9                       l979 07B5                       l989 07CD  
                     l999 07E1                       u200 06C6                       u201 06C5  
                     u300 065E                       u220 06DA                       u301 065D  
                     u221 06D9                       u310 06AC                       u311 06AB  
                     u215 06CB                       u320 06B5                       u240 06F5  
                     u321 06B4                       u241 06F4                       u330 0653  
                     u331 0652                       u315 06A8                       u235 06DC  
                     u260 0713                       u340 079E                       u261 0712  
                     u245 06F1                       u341 079D                       u270 0723  
                     u255 0705                       u271 0722                       u280 0731  
                     u345 079A                       u290 075A                       u285 072C  
                     u295 0755                       fsr0 0004                      l1053 07E9  
                    STR_1 002B                      STR_2 0007                      STR_3 001A  
                    STR_4 0007                      STR_5 001A                      STR_6 0007  
                    STR_7 001A                      _main 0784                      _init 0670  
                    btemp 007E                      start 0000                     ?_main 0070  
                   ?_init 0070           __end_of___lldiv 071C                     _RCREG 001A  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _TRISA 0085                     _TRISB 0086                     _TXREG 0019  
        __end_of_UARTInit 0784                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07FE              __end_of_main 07FE  
            __end_of_init 068E                    ??_main 0029                    ??_init 007E  
   __end_of_UARTDataReady 0670                 ??___lldiv 0078   __end_of__initialization 07FE  
          __pcstackCOMMON 0070                 ?_UARTInit 0020  UARTSendString@max_length 0071  
              __pmaintext 0784                ??_UARTInit 0025             ?_UARTReadChar 0070  
              __stringtab 0001             ?_UARTSendChar 0070                   ___lldiv 06B6  
               _CMCONbits 001F            _UARTSendString 068E                   __ptext1 0670  
                 __ptext2 071C                   __ptext3 06B6                   __ptext4 068E  
                 __ptext5 0657                   __ptext6 064C                   __ptext7 0663  
          ??_UARTReadChar 0075      end_of_initialization 07FE            ??_UARTSendChar 0070  
         ___lldiv@divisor 0070           ___lldiv@counter 007D                 _RCSTAbits 0018  
  __end_of_UARTSendString 06B6                 _PORTBbits 0006                 _TRISBbits 0086  
               _TXSTAbits 0098           ?_UARTSendString 0071       start_initialization 07FE  
    __end_of_UARTReadChar 0657      __end_of_UARTSendChar 0663                 ___latbits 0000  
           __pcstackBANK0 0020             _UARTDataReady 0663             UARTSendChar@c 0070  
                ?___lldiv 0070                 __pstrings 0001            ?_UARTDataReady 0070  
         UARTSendString@i 0073                  _PIR1bits 000C                  _UARTInit 071C  
             __stringbase 0006                 main@letra 002B          ??_UARTSendString 0072  
            UARTInit@BRGH 0024        __end_of__stringtab 0007           ??_UARTDataReady 0072  
            _UARTReadChar 064C              _UARTSendChar 0657         UARTSendString@str 0075  
        ___lldiv@dividend 0074                 stringcode 0001          ___lldiv@quotient 0079  
                stringdir 0001                  stringtab 0001  
