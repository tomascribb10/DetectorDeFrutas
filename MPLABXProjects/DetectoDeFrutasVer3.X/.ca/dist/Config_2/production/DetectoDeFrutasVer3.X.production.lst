

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Dec 09 12:57:43 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F628A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  008C                     	;# 
    97  008E                     	;# 
    98  0092                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009F                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0015                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  008C                     	;# 
   134  008E                     	;# 
   135  0092                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009F                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  008C                     	;# 
   171  008E                     	;# 
   172  0092                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009A                     	;# 
   176  009B                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009F                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  008C                     	;# 
   208  008E                     	;# 
   209  0092                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009F                     	;# 
   217  0015                     _CCPR1L	set	21
   218  0016                     _CCPR1H	set	22
   219  0001                     _TMR0	set	1
   220  000B                     _INTCON	set	11
   221  0005                     _PORTAbits	set	5
   222  0006                     _PORTBbits	set	6
   223  0006                     _PORTB	set	6
   224  001F                     _CMCONbits	set	31
   225  0010                     _T1CONbits	set	16
   226  000F                     _TMR1H	set	15
   227  000E                     _TMR1L	set	14
   228  000B                     _INTCONbits	set	11
   229  0010                     _T1CON	set	16
   230  0017                     _CCP1CON	set	23
   231  001A                     _RCREG	set	26
   232  000C                     _PIR1bits	set	12
   233  0019                     _TXREG	set	25
   234  0018                     _RCSTAbits	set	24
   235  0081                     _OPTION_REGbits	set	129
   236  0085                     _TRISAbits	set	133
   237  008C                     _PIE1bits	set	140
   238  0086                     _TRISBbits	set	134
   239  0098                     _TXSTAbits	set	152
   240  0099                     _SPBRG	set	153
   241                           
   242                           	psect	strings
   243  0000'                    __pstrings:
   244  0000'                    stringtab:
   245  0000'                    __stringtab:
   246  0000'                    stringcode:	
   247                           ;	String table - string pointers are 1 byte each
   248                           
   249  0000'                    stringdir:
   250  0000' 3000'              	movlw	high stringdir
   251  0001' 008A               	movwf	10
   252  0002' 0804               	movf	4,w
   253  0003' 0A84               	incf	4,f
   254  0004' 0782               	addwf	2,f
   255  0005'                    __stringbase:
   256  0005' 3400               	retlw	0
   257  0006'                    __end_of__stringtab:
   258  0006'                    STR_1:
   259  0006' 3479               	retlw	121	;'y'
   260  0007' 3400               	retlw	0
   261  0008' 3400               	retlw	0
   262  0006'                    
   263                           	psect	cinit
   264  0000'                    start_initialization:	
   265                           ; #config settings
   266                           
   267  0000'                    __initialization:
   268                           
   269                           ; Clear objects allocated to BANK0
   270  0000' 1383               	bcf	3,7	;select IRP bank0
   271  0001' 3000'              	movlw	low __pbssBANK0
   272  0002' 0084               	movwf	4
   273  0003' 3000'              	movlw	low (__pbssBANK0+18)
   274  0004' 2000'              	fcall	clear_ram0
   275  0005'                    end_of_initialization:	
   276                           ;End of C runtime variable initialization code
   277                           
   278  0005'                    __end_of__initialization:
   279  0005' 0183               	clrf	3
   280  0006' 2800'              	ljmp	_main	;jump to C main() function
   281                           
   282                           	psect	bssBANK0
   283  0000'                    __pbssBANK0:
   284  0000'                    _data_s:
   285  0000'                    	ds	8
   286  0008'                    _frecuencia:
   287  0008'                    	ds	2
   288  000A'                    _valor_pasos:
   289  000A'                    	ds	2
   290  000C'                    _cont_sr:
   291  000C'                    	ds	2
   292  000E'                    _periodo:
   293  000E'                    	ds	4
   294                           
   295                           	psect	clrtext
   296  0000'                    clear_ram0:	
   297                           ;	Called with FSR containing the base address, and
   298                           ;	W with the last address+1
   299                           
   300  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   301  0001'                    clrloop0:
   302  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   303  0002' 0A84               	incf	4,f	;increment pointer
   304  0003' 0604               	xorwf	4,w	;XOR with final address
   305  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   306  0005' 3400               	retlw	0	;all done for this memory range, return
   307  0006' 0604               	xorwf	4,w	;XOR again to restore value
   308  0007' 2801'              	goto	clrloop0	;do the next byte
   309                           
   310                           	psect	cstackBANK1
   311  0000'                    __pcstackBANK1:
   312  0000'                    ?_UARTDataReady:
   313  0000'                    ?___wmul:	
   314                           ; 2 bytes @ 0x0
   315                           
   316  0000'                    ?___lldiv:	
   317                           ; 2 bytes @ 0x0
   318                           
   319  0000'                    UARTSendChar@c:	
   320                           ; 4 bytes @ 0x0
   321                           
   322  0000'                    ___wmul@multiplier:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0000'                    ___lldiv@divisor:	
   326                           ; 2 bytes @ 0x0
   327                           
   328                           
   329                           ; 4 bytes @ 0x0
   330  0000'                    	ds	1
   331  0001'                    ?_UARTSendString:
   332  0001'                    UARTSendString@max_length:	
   333                           ; 1 bytes @ 0x1
   334                           
   335                           
   336                           ; 1 bytes @ 0x1
   337  0001'                    	ds	1
   338  0002'                    ??_UARTSendString:
   339  0002'                    ??_UARTDataReady:	
   340                           ; 1 bytes @ 0x2
   341                           
   342  0002'                    ___wmul@multiplicand:	
   343                           ; 1 bytes @ 0x2
   344                           
   345                           
   346                           ; 2 bytes @ 0x2
   347  0002'                    	ds	1
   348  0003'                    UARTSendString@str:
   349                           
   350                           ; 1 bytes @ 0x3
   351  0003'                    	ds	1
   352  0004'                    UARTSendString@i:
   353  0004'                    ___wmul@product:	
   354                           ; 2 bytes @ 0x4
   355                           
   356  0004'                    ___lldiv@dividend:	
   357                           ; 2 bytes @ 0x4
   358                           
   359                           
   360                           ; 4 bytes @ 0x4
   361  0004'                    	ds	2
   362  0006'                    ?___awdiv:
   363  0006'                    ___awdiv@divisor:	
   364                           ; 2 bytes @ 0x6
   365                           
   366                           
   367                           ; 2 bytes @ 0x6
   368  0006'                    	ds	2
   369  0008'                    ??___lldiv:
   370  0008'                    ___awdiv@dividend:	
   371                           ; 1 bytes @ 0x8
   372                           
   373                           
   374                           ; 2 bytes @ 0x8
   375  0008'                    	ds	1
   376  0009'                    ___lldiv@quotient:
   377                           
   378                           ; 4 bytes @ 0x9
   379  0009'                    	ds	1
   380  000A'                    ??___awdiv:
   381                           
   382                           ; 1 bytes @ 0xA
   383  000A'                    	ds	1
   384  000B'                    ___awdiv@counter:
   385                           
   386                           ; 1 bytes @ 0xB
   387  000B'                    	ds	1
   388  000C'                    ___awdiv@sign:
   389                           
   390                           ; 1 bytes @ 0xC
   391  000C'                    	ds	1
   392  000D'                    ___lldiv@counter:
   393  000D'                    ___awdiv@quotient:	
   394                           ; 1 bytes @ 0xD
   395                           
   396                           
   397                           ; 2 bytes @ 0xD
   398  000D'                    	ds	1
   399  000E'                    ?_UARTInit:
   400  000E'                    UARTInit@baud_rate:	
   401                           ; 1 bytes @ 0xE
   402                           
   403                           
   404                           ; 4 bytes @ 0xE
   405  000E'                    	ds	1
   406  000F'                    ??_Servo_8_Write:
   407                           
   408                           ; 1 bytes @ 0xF
   409  000F'                    	ds	3
   410  0012'                    UARTInit@BRGH:
   411  0012'                    Servo_8_Write@ang:	
   412                           ; 1 bytes @ 0x12
   413                           
   414                           
   415                           ; 1 bytes @ 0x12
   416  0012'                    	ds	1
   417  0013'                    ??_UARTInit:
   418                           
   419                           ; 1 bytes @ 0x13
   420  0013'                    	ds	4
   421  0017'                    ??_main:
   422                           
   423                           ; 1 bytes @ 0x17
   424  0017'                    	ds	3
   425  001A'                    main@letra:
   426                           
   427                           ; 1 bytes @ 0x1A
   428  001A'                    	ds	1
   429  001B'                    main@detect_on:
   430                           
   431                           ; 2 bytes @ 0x1B
   432  001B'                    	ds	2
   433  001D'                    main@contador:
   434                           
   435                           ; 2 bytes @ 0x1D
   436  001D'                    	ds	2
   437                           
   438                           	psect	cstackCOMMON
   439  0000'                    __pcstackCOMMON:
   440  0000'                    ?_Servo_Init:
   441  0000'                    ?_Servo_8_Write:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0000'                    ?_UARTSendChar:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0000'                    ?_UARTReadChar:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0000'                    ?_init:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0000'                    ?_main:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0000'                    ?_TMR0_ISR:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0000'                    ?__Umul8_16:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0000'                    ?___fldiv:	
   463                           ; 2 bytes @ 0x0
   464                           
   465  0000'                    ?___xxtofl:	
   466                           ; 4 bytes @ 0x0
   467                           
   468  0000'                    __Umul8_16@multiplicand:	
   469                           ; 4 bytes @ 0x0
   470                           
   471  0000'                    ___fldiv@a:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0000'                    ___xxtofl@val:	
   475                           ; 4 bytes @ 0x0
   476                           
   477                           
   478                           ; 4 bytes @ 0x0
   479  0000'                    	ds	2
   480  0002'                    ??__Umul8_16:
   481                           
   482                           ; 1 bytes @ 0x2
   483  0002'                    	ds	2
   484  0004'                    ??___xxtofl:
   485  0004'                    __Umul8_16@product:	
   486                           ; 1 bytes @ 0x4
   487                           
   488  0004'                    ___fldiv@b:	
   489                           ; 2 bytes @ 0x4
   490                           
   491                           
   492                           ; 4 bytes @ 0x4
   493  0004'                    	ds	2
   494  0006'                    __Umul8_16@word_mpld:
   495                           
   496                           ; 2 bytes @ 0x6
   497  0006'                    	ds	2
   498  0008'                    ??___fldiv:
   499  0008'                    __Umul8_16@multiplier:	
   500                           ; 1 bytes @ 0x8
   501                           
   502  0008'                    ___xxtofl@sign:	
   503                           ; 1 bytes @ 0x8
   504                           
   505                           
   506                           ; 1 bytes @ 0x8
   507  0008'                    	ds	1
   508  0009'                    ___xxtofl@exp:
   509                           
   510                           ; 1 bytes @ 0x9
   511  0009'                    	ds	1
   512  000A'                    ___xxtofl@arg:
   513                           
   514                           ; 4 bytes @ 0xA
   515  000A'                    	ds	4
   516                           
   517                           	psect	cstackBANK0
   518  0000'                    __pcstackBANK0:
   519  0000'                    ?___flmul:
   520  0000'                    ___fldiv@rem:	
   521                           ; 4 bytes @ 0x0
   522                           
   523  0000'                    ___flmul@b:	
   524                           ; 4 bytes @ 0x0
   525                           
   526                           
   527                           ; 4 bytes @ 0x0
   528  0000'                    	ds	4
   529  0004'                    ___fldiv@sign:
   530  0004'                    ___flmul@a:	
   531                           ; 1 bytes @ 0x4
   532                           
   533                           
   534                           ; 4 bytes @ 0x4
   535  0004'                    	ds	1
   536  0005'                    ___fldiv@new_exp:
   537                           
   538                           ; 2 bytes @ 0x5
   539  0005'                    	ds	2
   540  0007'                    ___fldiv@grs:
   541                           
   542                           ; 4 bytes @ 0x7
   543  0007'                    	ds	1
   544  0008'                    ??___flmul:
   545                           
   546                           ; 1 bytes @ 0x8
   547  0008'                    	ds	3
   548  000B'                    ___fldiv@bexp:
   549                           
   550                           ; 1 bytes @ 0xB
   551  000B'                    	ds	1
   552  000C'                    ___fldiv@aexp:
   553                           
   554                           ; 1 bytes @ 0xC
   555  000C'                    	ds	1
   556  000D'                    ?___fltol:
   557  000D'                    ___flmul@sign:	
   558                           ; 4 bytes @ 0xD
   559                           
   560  000D'                    ___fltol@f1:	
   561                           ; 1 bytes @ 0xD
   562                           
   563                           
   564                           ; 4 bytes @ 0xD
   565  000D'                    	ds	1
   566  000E'                    ___flmul@aexp:
   567                           
   568                           ; 1 bytes @ 0xE
   569  000E'                    	ds	1
   570  000F'                    ___flmul@grs:
   571                           
   572                           ; 4 bytes @ 0xF
   573  000F'                    	ds	2
   574  0011'                    ??___fltol:
   575                           
   576                           ; 1 bytes @ 0x11
   577  0011'                    	ds	2
   578  0013'                    ___flmul@bexp:
   579                           
   580                           ; 1 bytes @ 0x13
   581  0013'                    	ds	1
   582  0014'                    ___flmul@prod:
   583                           
   584                           ; 4 bytes @ 0x14
   585  0014'                    	ds	2
   586  0016'                    ___fltol@sign1:
   587                           
   588                           ; 1 bytes @ 0x16
   589  0016'                    	ds	1
   590  0017'                    ___fltol@exp1:
   591                           
   592                           ; 1 bytes @ 0x17
   593  0017'                    	ds	1
   594  0018'                    ___flmul@temp:
   595                           
   596                           ; 2 bytes @ 0x18
   597  0018'                    	ds	2
   598  001A'                    ??_TMR0_ISR:
   599                           
   600                           ; 1 bytes @ 0x1A
   601  001A'                    	ds	5
   602  001F'                    ??_Servo_Init:
   603  001F'                    ??_UARTSendChar:	
   604                           ; 1 bytes @ 0x1F
   605                           
   606  001F'                    ??_UARTReadChar:	
   607                           ; 1 bytes @ 0x1F
   608                           
   609  001F'                    ??_init:	
   610                           ; 1 bytes @ 0x1F
   611                           
   612  001F'                    ??___wmul:	
   613                           ; 1 bytes @ 0x1F
   614                           
   615                           
   616                           	psect	maintext
   617  0000'                    __pmaintext:	
   618                           ; 1 bytes @ 0x1F
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 92 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  readBuf        32    0        PTR unsigned char [16]
   629 ;;  tmpBuf         16    0        PTR unsigned char [8]
   630 ;;  contador        2   29[BANK1 ] int 
   631 ;;  detect_on       2   27[BANK1 ] int 
   632 ;;  nRead           2    0        int 
   633 ;;  letra           1   26[BANK1 ] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : B00/0
   640 ;;		On exit  : 300/100
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   643 ;;      Params:         0       0       0       0
   644 ;;      Locals:         0       0       5       0
   645 ;;      Temps:          0       0       3       0
   646 ;;      Totals:         0       0       8       0
   647 ;;Total ram usage:        8 bytes
   648 ;; Hardware stack levels required when called: 6
   649 ;; This function calls:
   650 ;;		_Servo_8_Write
   651 ;;		_Servo_Init
   652 ;;		_UARTDataReady
   653 ;;		_UARTReadChar
   654 ;;		_UARTSendString
   655 ;;		_init
   656 ;; This function is called by:
   657 ;;		Startup code after reset
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661  0000'                    _main:	
   662                           ;psect for function _main
   663                           
   664                           
   665                           ;main.c: 96:     char letra;;main.c: 97:     init();
   666                           
   667                           ;incstack = 0
   668                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   669  0000' 2000'              	fcall	_init
   670                           
   671                           ;main.c: 98:     PORTBbits.RB3 = 1;
   672  0001' 1283               	bcf	3,5	;RP0=0, select bank0
   673  0002' 1586               	bsf	6,3	;volatile
   674                           
   675                           ;main.c: 99:     PORTBbits.RB4 = 1;
   676  0003' 1606               	bsf	6,4	;volatile
   677                           
   678                           ;main.c: 100:     PORTBbits.RB5 = 1;
   679  0004' 1686               	bsf	6,5	;volatile
   680                           
   681                           ;main.c: 101:     PORTBbits.RB6 = 1;
   682  0005' 1706               	bsf	6,6	;volatile
   683                           
   684                           ;main.c: 102:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   685  0006' 3006               	movlw	6
   686  0007' 1683               	bsf	3,5	;RP0=1, select bank1
   687  0008' 1303               	bcf	3,6	;RP1=0, select bank1
   688  0009' 0082'              	movwf	(??_main^(0+128)+2)
   689  000A' 3013               	movlw	19
   690  000B' 0081'              	movwf	(??_main^(0+128)+1)
   691  000C' 30AD               	movlw	173
   692  000D' 0080'              	movwf	??_main^(0+128)
   693  000E'                    u3067:
   694  000E' 0B80'              	decfsz	??_main^(0+128),f
   695  000F' 280E'              	goto	u3067
   696  0010' 0B81'              	decfsz	(??_main^(0+128)+1),f
   697  0011' 280E'              	goto	u3067
   698  0012' 0B82'              	decfsz	(??_main^(0+128)+2),f
   699  0013' 280E'              	goto	u3067
   700  0014' 0000               	nop
   701                           
   702                           ;main.c: 103:     PORTBbits.RB3 = 0;
   703  0015' 1283               	bcf	3,5	;RP0=0, select bank0
   704  0016' 1303               	bcf	3,6	;RP1=0, select bank0
   705  0017' 1186               	bcf	6,3	;volatile
   706                           
   707                           ;main.c: 104:     PORTBbits.RB4 = 0;
   708  0018' 1206               	bcf	6,4	;volatile
   709                           
   710                           ;main.c: 105:     PORTBbits.RB5 = 0;
   711  0019' 1286               	bcf	6,5	;volatile
   712                           
   713                           ;main.c: 106:     PORTBbits.RB6 = 0;
   714  001A' 1306               	bcf	6,6	;volatile
   715                           
   716                           ;main.c: 108:     int detect_on = 0;
   717  001B' 1683               	bsf	3,5	;RP0=1, select bank1
   718  001C' 0180'              	clrf	main@detect_on^(0+128)
   719  001D' 0180'              	clrf	(main@detect_on+1)^(0+128)
   720                           
   721                           ;main.c: 109:     Servo_Init();
   722  001E' 2000'              	fcall	_Servo_Init
   723                           
   724                           ;main.c: 110:     int contador = 0;
   725  001F' 1683               	bsf	3,5	;RP0=1, select bank1
   726  0020' 0180'              	clrf	main@contador^(0+128)
   727  0021' 0180'              	clrf	(main@contador+1)^(0+128)
   728                           
   729                           ;main.c: 112:     PORTBbits.RB6 = 1;
   730  0022' 1283               	bcf	3,5	;RP0=0, select bank0
   731  0023' 1706               	bsf	6,6	;volatile
   732  0024'                    l2438:
   733                           
   734                           ;main.c: 122:         if (PORTAbits.RA3 == 1){
   735  0024' 1283               	bcf	3,5	;RP0=0, select bank0
   736  0025' 1303               	bcf	3,6	;RP1=0, select bank0
   737  0026' 1D85               	btfss	5,3	;volatile
   738  0027' 283C'              	goto	l2444
   739                           
   740                           ;main.c: 123:             if (contador < 1000){
   741  0028' 1683               	bsf	3,5	;RP0=1, select bank1
   742  0029' 0800'              	movf	(main@contador+1)^(0+128),w
   743  002A' 3A80               	xorlw	128
   744  002B' 00FF               	movwf	127
   745  002C' 3083               	movlw	131
   746  002D' 027F               	subwf	127,w
   747  002E' 1D03               	skipz
   748  002F' 2832'              	goto	u2985
   749  0030' 30E8               	movlw	232
   750  0031' 0200'              	subwf	main@contador^(0+128),w
   751  0032'                    u2985:
   752  0032' 1803               	skipnc
   753  0033' 2850'              	goto	l2448
   754                           
   755                           ;main.c: 124:                 contador++;
   756  0034' 3001               	movlw	1
   757  0035' 1683               	bsf	3,5	;RP0=1, select bank1
   758  0036' 1303               	bcf	3,6	;RP1=0, select bank1
   759  0037' 0780'              	addwf	main@contador^(0+128),f
   760  0038' 1803               	skipnc
   761  0039' 0A80'              	incf	(main@contador+1)^(0+128),f
   762  003A' 3000               	movlw	0
   763  003B' 284F'              	goto	L1
   764  003C'                    l2444:
   765                           
   766                           ;main.c: 127:             if (contador > 0){
   767  003C' 1683               	bsf	3,5	;RP0=1, select bank1
   768  003D' 0800'              	movf	(main@contador+1)^(0+128),w
   769  003E' 3A80               	xorlw	128
   770  003F' 00FF               	movwf	127
   771  0040' 3080               	movlw	128
   772  0041' 027F               	subwf	127,w
   773  0042' 1D03               	skipz
   774  0043' 2846'              	goto	u2995
   775  0044' 3001               	movlw	1
   776  0045' 0200'              	subwf	main@contador^(0+128),w
   777  0046'                    u2995:
   778  0046' 1C03               	skipc
   779  0047' 2850'              	goto	l2448
   780                           
   781                           ;main.c: 128:                 contador--;
   782  0048' 30FF               	movlw	255
   783  0049' 1683               	bsf	3,5	;RP0=1, select bank1
   784  004A' 1303               	bcf	3,6	;RP1=0, select bank1
   785  004B' 0780'              	addwf	main@contador^(0+128),f
   786  004C' 1803               	skipnc
   787  004D' 0A80'              	incf	(main@contador+1)^(0+128),f
   788  004E' 30FF               	movlw	255
   789  004F'                    L1:
   790  004F' 0780'              	addwf	(main@contador+1)^(0+128),f
   791  0050'                    l2448:
   792                           
   793                           ;main.c: 131:         if (contador < 1 && detect_on == 0){
   794  0050' 1683               	bsf	3,5	;RP0=1, select bank1
   795  0051' 1303               	bcf	3,6	;RP1=0, select bank1
   796  0052' 0800'              	movf	(main@contador+1)^(0+128),w
   797  0053' 3A80               	xorlw	128
   798  0054' 00FF               	movwf	127
   799  0055' 3080               	movlw	128
   800  0056' 027F               	subwf	127,w
   801  0057' 1D03               	skipz
   802  0058' 285B'              	goto	u3005
   803  0059' 3001               	movlw	1
   804  005A' 0200'              	subwf	main@contador^(0+128),w
   805  005B'                    u3005:
   806  005B' 1803               	skipnc
   807  005C' 2866'              	goto	l106
   808  005D' 1683               	bsf	3,5	;RP0=1, select bank1
   809  005E' 1303               	bcf	3,6	;RP1=0, select bank1
   810  005F' 0800'              	movf	main@detect_on^(0+128),w
   811  0060' 0400'              	iorwf	(main@detect_on+1)^(0+128),w
   812  0061' 1D03               	btfss	3,2
   813  0062' 2866'              	goto	l106
   814                           
   815                           ;main.c: 132:             PORTBbits.RB6 = 1;
   816  0063' 1283               	bcf	3,5	;RP0=0, select bank0
   817  0064' 1706               	bsf	6,6	;volatile
   818                           
   819                           ;main.c: 133:         }else{
   820  0065' 2869'              	goto	l107
   821  0066'                    l106:
   822                           
   823                           ;main.c: 134:             PORTBbits.RB6 = 0;
   824  0066' 1283               	bcf	3,5	;RP0=0, select bank0
   825  0067' 1303               	bcf	3,6	;RP1=0, select bank0
   826  0068' 1306               	bcf	6,6	;volatile
   827  0069'                    l107:	
   828                           ;main.c: 135:         }
   829                           
   830                           
   831                           ;main.c: 141:         if(PORTAbits.RA0 == 1){
   832  0069' 1805               	btfsc	5,0	;volatile
   833                           
   834                           ;main.c: 142:             PORTBbits.RB3 = 0;
   835  006A' 1186               	bcf	6,3	;volatile
   836                           
   837                           ;main.c: 144:         if(PORTAbits.RA1 == 1){
   838                           
   839                           ;main.c: 143:         }
   840  006B' 1885               	btfsc	5,1	;volatile
   841                           
   842                           ;main.c: 145:             PORTBbits.RB4 = 0;
   843  006C' 1206               	bcf	6,4	;volatile
   844                           
   845                           ;main.c: 147:         if(PORTAbits.RA2 == 1){
   846                           
   847                           ;main.c: 146:         }
   848  006D' 1905               	btfsc	5,2	;volatile
   849                           
   850                           ;main.c: 148:             PORTBbits.RB5 = 0;
   851  006E' 1286               	bcf	6,5	;volatile
   852                           
   853                           ;main.c: 151:         if(UARTDataReady() > 0){
   854  006F' 2000'              	fcall	_UARTDataReady
   855  0070' 0800'              	movf	(?_UARTDataReady+1)^(0+128),w
   856  0071' 3A80               	xorlw	128
   857  0072' 00FF               	movwf	127
   858  0073' 3080               	movlw	128
   859  0074' 027F               	subwf	127,w
   860  0075' 1D03               	skipz
   861  0076' 2879'              	goto	u3055
   862  0077' 3001               	movlw	1
   863  0078' 0200'              	subwf	?_UARTDataReady^(0+128),w
   864  0079'                    u3055:
   865  0079' 1C03               	skipc
   866  007A' 2824'              	goto	l2438
   867                           
   868                           ;main.c: 166:             letra = UARTReadChar();
   869  007B' 2000'              	fcall	_UARTReadChar
   870  007C' 1683               	bsf	3,5	;RP0=1, select bank1
   871  007D' 0080'              	movwf	??_main^(0+128)
   872  007E' 0800'              	movf	??_main^(0+128),w
   873  007F' 0080'              	movwf	main@letra^(0+128)
   874                           
   875                           ;main.c: 168:             switch (letra){
   876  0080' 28A4'              	goto	l2490
   877  0081'                    l113:	
   878                           ;main.c: 169:                 case 'a':
   879                           
   880                           
   881                           ;main.c: 171:                     PORTBbits.RB3 = 1;
   882  0081' 1283               	bcf	3,5	;RP0=0, select bank0
   883  0082' 1586               	bsf	6,3	;volatile
   884                           
   885                           ;main.c: 172:                     Servo_8_Write(0);
   886  0083' 3000               	movlw	0
   887  0084'                    L2:
   888  0084' 2000'              	fcall	_Servo_8_Write
   889                           
   890                           ;main.c: 173:                     UARTSendString("y\0", 16);
   891  0085' 3010               	movlw	16
   892  0086' 1683               	bsf	3,5	;RP0=1, select bank1
   893  0087' 0080'              	movwf	??_main^(0+128)
   894  0088' 0800'              	movf	??_main^(0+128),w
   895  0089' 0080'              	movwf	UARTSendString@max_length^(0+128)
   896  008A' 3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   897  008B' 2000'              	fcall	_UARTSendString
   898                           
   899                           ;main.c: 174:                     PORTBbits.RB6 = 1;
   900  008C' 1283               	bcf	3,5	;RP0=0, select bank0
   901  008D' 1303               	bcf	3,6	;RP1=0, select bank0
   902  008E' 1706               	bsf	6,6	;volatile
   903                           
   904                           ;main.c: 175:                     detect_on = 0;
   905  008F' 1683               	bsf	3,5	;RP0=1, select bank1
   906  0090' 0180'              	clrf	main@detect_on^(0+128)
   907  0091' 0180'              	clrf	(main@detect_on+1)^(0+128)
   908                           
   909                           ;main.c: 176:                     break;
   910  0092' 2824'              	goto	l2438
   911  0093'                    l115:	
   912                           ;main.c: 177:                 case 'b':
   913                           
   914                           
   915                           ;main.c: 179:                     PORTBbits.RB3 = 0;
   916  0093' 1283               	bcf	3,5	;RP0=0, select bank0
   917  0094' 1186               	bcf	6,3	;volatile
   918                           
   919                           ;main.c: 180:                     break;
   920  0095' 2824'              	goto	l2438
   921  0096'                    l116:	
   922                           ;main.c: 181:                 case 'c':
   923                           
   924                           
   925                           ;main.c: 183:                     PORTBbits.RB4 = 1;
   926  0096' 1283               	bcf	3,5	;RP0=0, select bank0
   927  0097' 1606               	bsf	6,4	;volatile
   928                           
   929                           ;main.c: 184:                     Servo_8_Write(90);
   930  0098' 305A               	movlw	90
   931  0099' 2884'              	goto	L2
   932  009A'                    l117:	
   933                           ;main.c: 189:                 case 'd':
   934                           
   935                           ;main.c: 186:                     PORTBbits.RB6 = 1;
   936                           
   937                           ;main.c: 185:                     UARTSendString("y\0", 16);
   938                           
   939                           
   940                           ;main.c: 191:                     PORTBbits.RB4 = 0;
   941  009A' 1283               	bcf	3,5	;RP0=0, select bank0
   942  009B' 1206               	bcf	6,4	;volatile
   943                           
   944                           ;main.c: 192:                     break;
   945  009C' 2824'              	goto	l2438
   946  009D'                    l118:	
   947                           ;main.c: 193:                 case 'e':
   948                           
   949                           
   950                           ;main.c: 195:                     PORTBbits.RB5 = 1;
   951  009D' 1283               	bcf	3,5	;RP0=0, select bank0
   952  009E' 1686               	bsf	6,5	;volatile
   953                           
   954                           ;main.c: 196:                     Servo_8_Write(180);
   955  009F' 30B4               	movlw	180
   956  00A0' 2884'              	goto	L2
   957  00A1'                    l119:	
   958                           ;main.c: 201:                 case 'f':
   959                           
   960                           ;main.c: 198:                     PORTBbits.RB6 = 1;
   961                           
   962                           ;main.c: 197:                     UARTSendString("y\0", 16);
   963                           
   964                           
   965                           ;main.c: 203:                     PORTBbits.RB5 = 0;
   966  00A1' 1283               	bcf	3,5	;RP0=0, select bank0
   967  00A2' 1286               	bcf	6,5	;volatile
   968                           
   969                           ;main.c: 204:                     break;
   970  00A3' 2824'              	goto	l2438
   971  00A4'                    l2490:
   972  00A4' 0800'              	movf	main@letra^(0+128),w
   973  00A5' 0080'              	movwf	??_main^(0+128)
   974  00A6' 0181'              	clrf	(??_main^(0+128)+1)
   975                           
   976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   977                           ; Switch size 1, requested type "simple"
   978                           ; Number of cases is 1, Range of values is 0 to 0
   979                           ; switch strategies available:
   980                           ; Name         Instructions Cycles
   981                           ; simple_byte            4     3 (average)
   982                           ; direct_byte            7     6 (fixed)
   983                           ; jumptable            260     6 (fixed)
   984                           ;	Chosen strategy is simple_byte
   985  00A7' 0800'              	movf	(??_main+1)^(0+128),w
   986  00A8' 3A00               	xorlw	0	; case 0
   987  00A9' 1903               	skipnz
   988  00AA' 28AC'              	goto	l2528
   989  00AB' 2824'              	goto	l2438
   990  00AC'                    l2528:
   991                           
   992                           ; Switch size 1, requested type "simple"
   993                           ; Number of cases is 6, Range of values is 97 to 102
   994                           ; switch strategies available:
   995                           ; Name         Instructions Cycles
   996                           ; direct_byte           15     9 (fixed)
   997                           ; simple_byte           19    10 (average)
   998                           ; jumptable            263     9 (fixed)
   999                           ;	Chosen strategy is simple_byte
  1000  00AC' 0800'              	movf	??_main^(0+128),w
  1001  00AD' 3A61               	xorlw	97	; case 97
  1002  00AE' 1903               	skipnz
  1003  00AF' 2881'              	goto	l113
  1004  00B0' 3A03               	xorlw	3	; case 98
  1005  00B1' 1903               	skipnz
  1006  00B2' 2893'              	goto	l115
  1007  00B3' 3A01               	xorlw	1	; case 99
  1008  00B4' 1903               	skipnz
  1009  00B5' 2896'              	goto	l116
  1010  00B6' 3A07               	xorlw	7	; case 100
  1011  00B7' 1903               	skipnz
  1012  00B8' 289A'              	goto	l117
  1013  00B9' 3A01               	xorlw	1	; case 101
  1014  00BA' 1903               	skipnz
  1015  00BB' 289D'              	goto	l118
  1016  00BC' 3A03               	xorlw	3	; case 102
  1017  00BD' 1903               	skipnz
  1018  00BE' 28A1'              	goto	l119
  1019  00BF' 2824'              	goto	l2438
  1020  00C0' 2800'              	ljmp	start
  1021  00C1'                    __end_of_main:
  1022                           
  1023                           	psect	text1
  1024  0000'                    __ptext1:	
  1025 ;; *************** function _init *****************
  1026 ;; Defined at:
  1027 ;;		line 57 in file "main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, pclath, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : B00/0
  1038 ;;		On exit  : B00/100
  1039 ;;		Unchanged: 800/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1041 ;;      Params:         0       0       0       0
  1042 ;;      Locals:         0       0       0       0
  1043 ;;      Temps:          0       0       0       0
  1044 ;;      Totals:         0       0       0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; Hardware stack levels required when called: 5
  1048 ;; This function calls:
  1049 ;;		_UARTInit
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055  0000'                    _init:	
  1056                           ;psect for function _init
  1057                           
  1058                           
  1059                           ;main.c: 59:     CCP1CON = 0b00000101;
  1060                           
  1061                           ;incstack = 0
  1062                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1063  0000' 3005               	movlw	5
  1064  0001' 0097               	movwf	23	;volatile
  1065                           
  1066                           ;main.c: 60:     T1CON = 0b00111000;
  1067  0002' 3038               	movlw	56
  1068  0003' 0090               	movwf	16	;volatile
  1069                           
  1070                           ;main.c: 61:     INTCONbits.GIE = 1;
  1071  0004' 178B               	bsf	11,7	;volatile
  1072                           
  1073                           ;main.c: 62:     INTCONbits.PEIE = 1;
  1074  0005' 170B               	bsf	11,6	;volatile
  1075                           
  1076                           ;main.c: 63:     PIE1bits.CCP1IE = 1;
  1077  0006' 1683               	bsf	3,5	;RP0=1, select bank1
  1078  0007' 150C               	bsf	12,2	;volatile
  1079                           
  1080                           ;main.c: 64:     PIR1bits.CCP1IF = 0;
  1081  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  1082  0009' 110C               	bcf	12,2	;volatile
  1083                           
  1084                           ;main.c: 65:     TMR1L = 0x00;
  1085  000A' 018E               	clrf	14	;volatile
  1086                           
  1087                           ;main.c: 66:     TMR1H = 0x00;
  1088  000B' 018F               	clrf	15	;volatile
  1089                           
  1090                           ;main.c: 67:     T1CONbits.TMR1ON = 1;
  1091  000C' 1410               	bsf	16,0	;volatile
  1092                           
  1093                           ;main.c: 71:     CMCONbits.CM0 = 1;
  1094  000D' 141F               	bsf	31,0	;volatile
  1095                           
  1096                           ;main.c: 72:     CMCONbits.CM1 = 1;
  1097  000E' 149F               	bsf	31,1	;volatile
  1098                           
  1099                           ;main.c: 73:     CMCONbits.CM2 = 1;
  1100  000F' 151F               	bsf	31,2	;volatile
  1101                           
  1102                           ;main.c: 78:     TRISAbits.TRISA0 = 1;
  1103  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  1104  0011' 1405               	bsf	5,0	;volatile
  1105                           
  1106                           ;main.c: 79:     TRISAbits.TRISA1 = 1;
  1107  0012' 1485               	bsf	5,1	;volatile
  1108                           
  1109                           ;main.c: 80:     TRISAbits.TRISA2 = 1;
  1110  0013' 1505               	bsf	5,2	;volatile
  1111                           
  1112                           ;main.c: 81:     TRISAbits.TRISA3 = 1;
  1113  0014' 1585               	bsf	5,3	;volatile
  1114                           
  1115                           ;main.c: 83:     TRISBbits.TRISB3 = 0;
  1116  0015' 1186               	bcf	6,3	;volatile
  1117                           
  1118                           ;main.c: 84:     TRISBbits.TRISB4 = 0;
  1119  0016' 1206               	bcf	6,4	;volatile
  1120                           
  1121                           ;main.c: 85:     TRISBbits.TRISB5 = 0;
  1122  0017' 1286               	bcf	6,5	;volatile
  1123                           
  1124                           ;main.c: 86:     TRISBbits.TRISB6 = 0;
  1125  0018' 1306               	bcf	6,6	;volatile
  1126                           
  1127                           ;main.c: 87:     PORTB = 0;
  1128  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  1129  001A' 0186               	clrf	6	;volatile
  1130                           
  1131                           ;main.c: 89:     UARTInit(9600, 1);
  1132  001B' 3000               	movlw	0
  1133  001C' 1683               	bsf	3,5	;RP0=1, select bank1
  1134  001D' 0080'              	movwf	(UARTInit@baud_rate+3)^(0+128)
  1135  001E' 3000               	movlw	0
  1136  001F' 0080'              	movwf	(UARTInit@baud_rate+2)^(0+128)
  1137  0020' 3025               	movlw	37
  1138  0021' 0080'              	movwf	(UARTInit@baud_rate+1)^(0+128)
  1139  0022' 3080               	movlw	128
  1140  0023' 0080'              	movwf	UARTInit@baud_rate^(0+128)
  1141  0024' 0180'              	clrf	UARTInit@BRGH^(0+128)
  1142  0025' 0A80'              	incf	UARTInit@BRGH^(0+128),f
  1143  0026' 2000'              	fcall	_UARTInit
  1144  0027' 0008               	return
  1145  0028'                    __end_of_init:
  1146                           
  1147                           	psect	text2
  1148  0000'                    __ptext2:	
  1149 ;; *************** function _UARTInit *****************
  1150 ;; Defined at:
  1151 ;;		line 15 in file "UART.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  baud_rate       4   14[BANK1 ] const unsigned long 
  1154 ;;  BRGH            1   18[BANK1 ] const unsigned char 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, pclath, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : B00/100
  1163 ;;		On exit  : B00/100
  1164 ;;		Unchanged: 800/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1166 ;;      Params:         0       0       5       0
  1167 ;;      Locals:         0       0       0       0
  1168 ;;      Temps:          0       0       4       0
  1169 ;;      Totals:         0       0       9       0
  1170 ;;Total ram usage:        9 bytes
  1171 ;; Hardware stack levels used: 1
  1172 ;; Hardware stack levels required when called: 4
  1173 ;; This function calls:
  1174 ;;		___lldiv
  1175 ;; This function is called by:
  1176 ;;		_init
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180  0000'                    _UARTInit:	
  1181                           ;psect for function _UARTInit
  1182                           
  1183                           
  1184                           ;UART.c: 17:     if (BRGH == 0) {
  1185                           
  1186                           ;incstack = 0
  1187                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  1188  0000' 0800'              	movf	UARTInit@BRGH^(0+128),w
  1189  0001' 1D03               	btfss	3,2
  1190  0002' 282A'              	goto	l2254
  1191                           
  1192                           ;UART.c: 18:         SPBRG = 4000000/(64*baud_rate) - 1;
  1193  0003' 0800'              	movf	UARTInit@baud_rate^(0+128),w
  1194  0004' 0080'              	movwf	??_UARTInit^(0+128)
  1195  0005' 0800'              	movf	(UARTInit@baud_rate+1)^(0+128),w
  1196  0006' 0081'              	movwf	(??_UARTInit^(0+128)+1)
  1197  0007' 0800'              	movf	(UARTInit@baud_rate+2)^(0+128),w
  1198  0008' 0082'              	movwf	(??_UARTInit^(0+128)+2)
  1199  0009' 0800'              	movf	(UARTInit@baud_rate+3)^(0+128),w
  1200  000A' 0083'              	movwf	(??_UARTInit^(0+128)+3)
  1201  000B' 3006               	movlw	6
  1202  000C'                    u2775:
  1203  000C' 1003               	clrc
  1204  000D' 0D80'              	rlf	??_UARTInit^(0+128),f
  1205  000E' 0D81'              	rlf	(??_UARTInit^(0+128)+1),f
  1206  000F' 0D82'              	rlf	(??_UARTInit^(0+128)+2),f
  1207  0010' 0D83'              	rlf	(??_UARTInit^(0+128)+3),f
  1208  0011' 3EFF               	addlw	-1
  1209  0012' 1D03               	skipz
  1210  0013' 280C'              	goto	u2775
  1211  0014' 0800'              	movf	(??_UARTInit+3)^(0+128),w
  1212  0015' 0080'              	movwf	(___lldiv@divisor+3)^(0+128)
  1213  0016' 0800'              	movf	(??_UARTInit+2)^(0+128),w
  1214  0017' 0080'              	movwf	(___lldiv@divisor+2)^(0+128)
  1215  0018' 0800'              	movf	(??_UARTInit+1)^(0+128),w
  1216  0019' 0080'              	movwf	(___lldiv@divisor+1)^(0+128)
  1217  001A' 0800'              	movf	??_UARTInit^(0+128),w
  1218  001B' 0080'              	movwf	___lldiv@divisor^(0+128)
  1219  001C' 3000               	movlw	0
  1220  001D' 0080'              	movwf	(___lldiv@dividend+3)^(0+128)
  1221  001E' 303D               	movlw	61
  1222  001F' 0080'              	movwf	(___lldiv@dividend+2)^(0+128)
  1223  0020' 3009               	movlw	9
  1224  0021' 0080'              	movwf	(___lldiv@dividend+1)^(0+128)
  1225  0022' 3000               	movlw	0
  1226  0023' 0080'              	movwf	___lldiv@dividend^(0+128)
  1227  0024' 2000'              	fcall	___lldiv
  1228  0025' 0800'              	movf	?___lldiv^(0+128),w
  1229  0026' 3EFF               	addlw	255
  1230  0027' 0099               	movwf	25	;volatile
  1231                           
  1232                           ;UART.c: 19:         TXSTAbits.BRGH = 0;
  1233  0028' 1118               	bcf	24,2	;volatile
  1234                           
  1235                           ;UART.c: 20:     } else {
  1236  0029' 2850'              	goto	l2258
  1237  002A'                    l2254:
  1238                           
  1239                           ;UART.c: 21:         SPBRG = 4000000/(16*baud_rate) - 1;
  1240  002A' 0800'              	movf	UARTInit@baud_rate^(0+128),w
  1241  002B' 0080'              	movwf	??_UARTInit^(0+128)
  1242  002C' 0800'              	movf	(UARTInit@baud_rate+1)^(0+128),w
  1243  002D' 0081'              	movwf	(??_UARTInit^(0+128)+1)
  1244  002E' 0800'              	movf	(UARTInit@baud_rate+2)^(0+128),w
  1245  002F' 0082'              	movwf	(??_UARTInit^(0+128)+2)
  1246  0030' 0800'              	movf	(UARTInit@baud_rate+3)^(0+128),w
  1247  0031' 0083'              	movwf	(??_UARTInit^(0+128)+3)
  1248  0032' 3004               	movlw	4
  1249  0033'                    u2785:
  1250  0033' 1003               	clrc
  1251  0034' 0D80'              	rlf	??_UARTInit^(0+128),f
  1252  0035' 0D81'              	rlf	(??_UARTInit^(0+128)+1),f
  1253  0036' 0D82'              	rlf	(??_UARTInit^(0+128)+2),f
  1254  0037' 0D83'              	rlf	(??_UARTInit^(0+128)+3),f
  1255  0038' 3EFF               	addlw	-1
  1256  0039' 1D03               	skipz
  1257  003A' 2833'              	goto	u2785
  1258  003B' 0800'              	movf	(??_UARTInit+3)^(0+128),w
  1259  003C' 0080'              	movwf	(___lldiv@divisor+3)^(0+128)
  1260  003D' 0800'              	movf	(??_UARTInit+2)^(0+128),w
  1261  003E' 0080'              	movwf	(___lldiv@divisor+2)^(0+128)
  1262  003F' 0800'              	movf	(??_UARTInit+1)^(0+128),w
  1263  0040' 0080'              	movwf	(___lldiv@divisor+1)^(0+128)
  1264  0041' 0800'              	movf	??_UARTInit^(0+128),w
  1265  0042' 0080'              	movwf	___lldiv@divisor^(0+128)
  1266  0043' 3000               	movlw	0
  1267  0044' 0080'              	movwf	(___lldiv@dividend+3)^(0+128)
  1268  0045' 303D               	movlw	61
  1269  0046' 0080'              	movwf	(___lldiv@dividend+2)^(0+128)
  1270  0047' 3009               	movlw	9
  1271  0048' 0080'              	movwf	(___lldiv@dividend+1)^(0+128)
  1272  0049' 3000               	movlw	0
  1273  004A' 0080'              	movwf	___lldiv@dividend^(0+128)
  1274  004B' 2000'              	fcall	___lldiv
  1275  004C' 0800'              	movf	?___lldiv^(0+128),w
  1276  004D' 3EFF               	addlw	255
  1277  004E' 0099               	movwf	25	;volatile
  1278                           
  1279                           ;UART.c: 22:         TXSTAbits.BRGH = 1;
  1280  004F' 1518               	bsf	24,2	;volatile
  1281  0050'                    l2258:
  1282                           
  1283                           ;UART.c: 26:     TXSTAbits.TX9 = 0;
  1284  0050' 1318               	bcf	24,6	;volatile
  1285                           
  1286                           ;UART.c: 27:     TXSTAbits.TXEN = 1;
  1287  0051' 1698               	bsf	24,5	;volatile
  1288                           
  1289                           ;UART.c: 28:     TXSTAbits.SYNC = 0;
  1290  0052' 1218               	bcf	24,4	;volatile
  1291                           
  1292                           ;UART.c: 29:     TXSTAbits.TRMT = 1;
  1293  0053' 1498               	bsf	24,1	;volatile
  1294                           
  1295                           ;UART.c: 32:     RCSTAbits.SPEN = 1;
  1296  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  1297  0055' 1798               	bsf	24,7	;volatile
  1298                           
  1299                           ;UART.c: 33:     RCSTAbits.RX9 = 0;
  1300  0056' 1318               	bcf	24,6	;volatile
  1301                           
  1302                           ;UART.c: 34:     RCSTAbits.CREN = 1;
  1303  0057' 1618               	bsf	24,4	;volatile
  1304                           
  1305                           ;UART.c: 35:     RCSTAbits.FERR = 0;
  1306  0058' 1118               	bcf	24,2	;volatile
  1307                           
  1308                           ;UART.c: 36:     RCSTAbits.OERR = 0;
  1309  0059' 1098               	bcf	24,1	;volatile
  1310                           
  1311                           ;UART.c: 42:     TRISBbits.TRISB1 = 1;
  1312  005A' 1683               	bsf	3,5	;RP0=1, select bank1
  1313  005B' 1486               	bsf	6,1	;volatile
  1314                           
  1315                           ;UART.c: 43:     TRISBbits.TRISB2 = 1;
  1316  005C' 1506               	bsf	6,2	;volatile
  1317  005D' 0008               	return
  1318  005E'                    __end_of_UARTInit:
  1319                           
  1320                           	psect	text3
  1321  0000'                    __ptext3:	
  1322 ;; *************** function ___lldiv *****************
  1323 ;; Defined at:
  1324 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  divisor         4    0[BANK1 ] unsigned long 
  1327 ;;  dividend        4    4[BANK1 ] unsigned long 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  quotient        4    9[BANK1 ] unsigned long 
  1330 ;;  counter         1   13[BANK1 ] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  4    0[BANK1 ] unsigned long 
  1333 ;; Registers used:
  1334 ;;		wreg, status,2, status,0
  1335 ;; Tracked objects:
  1336 ;;		On entry : B00/100
  1337 ;;		On exit  : B00/100
  1338 ;;		Unchanged: 800/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1340 ;;      Params:         0       0       8       0
  1341 ;;      Locals:         0       0       5       0
  1342 ;;      Temps:          0       0       1       0
  1343 ;;      Totals:         0       0      14       0
  1344 ;;Total ram usage:       14 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; Hardware stack levels required when called: 3
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_UARTInit
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354  0000'                    ___lldiv:	
  1355                           ;psect for function ___lldiv
  1356                           
  1357                           
  1358                           ;incstack = 0
  1359                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1360  0000' 3000               	movlw	0
  1361  0001' 0080'              	movwf	(___lldiv@quotient+3)^(0+128)
  1362  0002' 3000               	movlw	0
  1363  0003' 0080'              	movwf	(___lldiv@quotient+2)^(0+128)
  1364  0004' 3000               	movlw	0
  1365  0005' 0080'              	movwf	(___lldiv@quotient+1)^(0+128)
  1366  0006' 3000               	movlw	0
  1367  0007' 0080'              	movwf	___lldiv@quotient^(0+128)
  1368  0008' 0800'              	movf	(___lldiv@divisor+3)^(0+128),w
  1369  0009' 0400'              	iorwf	(___lldiv@divisor+2)^(0+128),w
  1370  000A' 0400'              	iorwf	(___lldiv@divisor+1)^(0+128),w
  1371  000B' 0400'              	iorwf	___lldiv@divisor^(0+128),w
  1372  000C' 1903               	skipnz
  1373  000D' 2855'              	goto	l2244
  1374  000E' 0180'              	clrf	___lldiv@counter^(0+128)
  1375  000F' 0A80'              	incf	___lldiv@counter^(0+128),f
  1376  0010'                    l2230:
  1377  0010' 1B80'              	btfsc	(___lldiv@divisor+3)^(0+128),7
  1378  0011' 2820'              	goto	l2232
  1379  0012' 3001               	movlw	1
  1380  0013' 0080'              	movwf	??___lldiv^(0+128)
  1381  0014'                    u2705:
  1382  0014' 1003               	clrc
  1383  0015' 0D80'              	rlf	___lldiv@divisor^(0+128),f
  1384  0016' 0D80'              	rlf	(___lldiv@divisor+1)^(0+128),f
  1385  0017' 0D80'              	rlf	(___lldiv@divisor+2)^(0+128),f
  1386  0018' 0D80'              	rlf	(___lldiv@divisor+3)^(0+128),f
  1387  0019' 0B80'              	decfsz	??___lldiv^(0+128),f
  1388  001A' 2814'              	goto	u2705
  1389  001B' 3001               	movlw	1
  1390  001C' 0080'              	movwf	??___lldiv^(0+128)
  1391  001D' 0800'              	movf	??___lldiv^(0+128),w
  1392  001E' 0780'              	addwf	___lldiv@counter^(0+128),f
  1393  001F' 2810'              	goto	l2230
  1394  0020'                    l2232:
  1395  0020' 3001               	movlw	1
  1396  0021' 0080'              	movwf	??___lldiv^(0+128)
  1397  0022'                    u2725:
  1398  0022' 1003               	clrc
  1399  0023' 0D80'              	rlf	___lldiv@quotient^(0+128),f
  1400  0024' 0D80'              	rlf	(___lldiv@quotient+1)^(0+128),f
  1401  0025' 0D80'              	rlf	(___lldiv@quotient+2)^(0+128),f
  1402  0026' 0D80'              	rlf	(___lldiv@quotient+3)^(0+128),f
  1403  0027' 0B80'              	decfsz	??___lldiv^(0+128),f
  1404  0028' 2822'              	goto	u2725
  1405  0029' 0800'              	movf	(___lldiv@divisor+3)^(0+128),w
  1406  002A' 0200'              	subwf	(___lldiv@dividend+3)^(0+128),w
  1407  002B' 1D03               	skipz
  1408  002C' 2837'              	goto	u2735
  1409  002D' 0800'              	movf	(___lldiv@divisor+2)^(0+128),w
  1410  002E' 0200'              	subwf	(___lldiv@dividend+2)^(0+128),w
  1411  002F' 1D03               	skipz
  1412  0030' 2837'              	goto	u2735
  1413  0031' 0800'              	movf	(___lldiv@divisor+1)^(0+128),w
  1414  0032' 0200'              	subwf	(___lldiv@dividend+1)^(0+128),w
  1415  0033' 1D03               	skipz
  1416  0034' 2837'              	goto	u2735
  1417  0035' 0800'              	movf	___lldiv@divisor^(0+128),w
  1418  0036' 0200'              	subwf	___lldiv@dividend^(0+128),w
  1419  0037'                    u2735:
  1420  0037' 1C03               	skipc
  1421  0038' 2848'              	goto	l2240
  1422  0039' 0800'              	movf	___lldiv@divisor^(0+128),w
  1423  003A' 0280'              	subwf	___lldiv@dividend^(0+128),f
  1424  003B' 0800'              	movf	(___lldiv@divisor+1)^(0+128),w
  1425  003C' 1C03               	skipc
  1426  003D' 0F00'              	incfsz	(___lldiv@divisor+1)^(0+128),w
  1427  003E' 0280'              	subwf	(___lldiv@dividend+1)^(0+128),f
  1428  003F' 0800'              	movf	(___lldiv@divisor+2)^(0+128),w
  1429  0040' 1C03               	skipc
  1430  0041' 0F00'              	incfsz	(___lldiv@divisor+2)^(0+128),w
  1431  0042' 0280'              	subwf	(___lldiv@dividend+2)^(0+128),f
  1432  0043' 0800'              	movf	(___lldiv@divisor+3)^(0+128),w
  1433  0044' 1C03               	skipc
  1434  0045' 0F00'              	incfsz	(___lldiv@divisor+3)^(0+128),w
  1435  0046' 0280'              	subwf	(___lldiv@dividend+3)^(0+128),f
  1436  0047' 1400'              	bsf	___lldiv@quotient^(0+128),0
  1437  0048'                    l2240:
  1438  0048' 3001               	movlw	1
  1439  0049'                    u2745:
  1440  0049' 1003               	clrc
  1441  004A' 0C80'              	rrf	(___lldiv@divisor+3)^(0+128),f
  1442  004B' 0C80'              	rrf	(___lldiv@divisor+2)^(0+128),f
  1443  004C' 0C80'              	rrf	(___lldiv@divisor+1)^(0+128),f
  1444  004D' 0C80'              	rrf	___lldiv@divisor^(0+128),f
  1445  004E' 3EFF               	addlw	-1
  1446  004F' 1D03               	skipz
  1447  0050' 2849'              	goto	u2745
  1448  0051' 3001               	movlw	1
  1449  0052' 0280'              	subwf	___lldiv@counter^(0+128),f
  1450  0053' 1D03               	btfss	3,2
  1451  0054' 2820'              	goto	l2232
  1452  0055'                    l2244:
  1453  0055' 0800'              	movf	(___lldiv@quotient+3)^(0+128),w
  1454  0056' 0080'              	movwf	(?___lldiv+3)^(0+128)
  1455  0057' 0800'              	movf	(___lldiv@quotient+2)^(0+128),w
  1456  0058' 0080'              	movwf	(?___lldiv+2)^(0+128)
  1457  0059' 0800'              	movf	(___lldiv@quotient+1)^(0+128),w
  1458  005A' 0080'              	movwf	(?___lldiv+1)^(0+128)
  1459  005B' 0800'              	movf	___lldiv@quotient^(0+128),w
  1460  005C' 0080'              	movwf	?___lldiv^(0+128)
  1461  005D' 0008               	return
  1462  005E'                    __end_of___lldiv:
  1463                           
  1464                           	psect	text4
  1465  0000'                    __ptext4:	
  1466 ;; *************** function _UARTSendString *****************
  1467 ;; Defined at:
  1468 ;;		line 60 in file "UART.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  str             1    wreg     PTR const unsigned char 
  1471 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1472 ;;  max_length      1    1[BANK1 ] const unsigned char 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  str             1    3[BANK1 ] PTR const unsigned char 
  1475 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1476 ;;  i               2    4[BANK1 ] int 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 300/100
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1486 ;;      Params:         0       0       1       0
  1487 ;;      Locals:         0       0       3       0
  1488 ;;      Temps:          0       0       1       0
  1489 ;;      Totals:         0       0       5       0
  1490 ;;Total ram usage:        5 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 4
  1493 ;; This function calls:
  1494 ;;		_UARTSendChar
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500  0000'                    _UARTSendString:	
  1501                           ;psect for function _UARTSendString
  1502                           
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1506                           ;UARTSendString@str stored from wreg
  1507  0000' 0080'              	movwf	UARTSendString@str^(0+128)
  1508                           
  1509                           ;UART.c: 61:     int i = 0;
  1510  0001' 0180'              	clrf	UARTSendString@i^(0+128)
  1511  0002' 0180'              	clrf	(UARTSendString@i+1)^(0+128)
  1512                           
  1513                           ;UART.c: 62:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  1514  0003' 0180'              	clrf	UARTSendString@i^(0+128)
  1515  0004' 0180'              	clrf	(UARTSendString@i+1)^(0+128)
  1516  0005'                    l2352:
  1517  0005' 0800'              	movf	(UARTSendString@i+1)^(0+128),w
  1518  0006' 3A80               	xorlw	128
  1519  0007' 0080'              	movwf	??_UARTSendString^(0+128)
  1520  0008' 3080               	movlw	128
  1521  0009' 0200'              	subwf	??_UARTSendString^(0+128),w
  1522  000A' 1D03               	skipz
  1523  000B' 280E'              	goto	u2945
  1524  000C' 0800'              	movf	UARTSendString@max_length^(0+128),w
  1525  000D' 0200'              	subwf	UARTSendString@i^(0+128),w
  1526  000E'                    u2945:
  1527  000E' 1803               	skipnc
  1528  000F' 0008               	return
  1529  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  1530  0011' 1303               	bcf	3,6	;RP1=0, select bank1
  1531  0012' 0800'              	movf	UARTSendString@i^(0+128),w
  1532  0013' 0700'              	addwf	UARTSendString@str^(0+128),w
  1533  0014' 0084               	movwf	4
  1534  0015' 2000'              	fcall	stringdir
  1535  0016' 3A00               	xorlw	0
  1536  0017' 1903               	btfsc	3,2
  1537  0018' 0008               	return
  1538                           
  1539                           ;UART.c: 63:         UARTSendChar(str[i]);
  1540  0019' 0800'              	movf	UARTSendString@i^(0+128),w
  1541  001A' 0700'              	addwf	UARTSendString@str^(0+128),w
  1542  001B' 0084               	movwf	4
  1543  001C' 2000'              	fcall	stringdir
  1544  001D' 2000'              	fcall	_UARTSendChar
  1545                           
  1546                           ;UART.c: 64:     }
  1547  001E' 3001               	movlw	1
  1548  001F' 1683               	bsf	3,5	;RP0=1, select bank1
  1549  0020' 0780'              	addwf	UARTSendString@i^(0+128),f
  1550  0021' 1803               	skipnc
  1551  0022' 0A80'              	incf	(UARTSendString@i+1)^(0+128),f
  1552  0023' 3000               	movlw	0
  1553  0024' 0780'              	addwf	(UARTSendString@i+1)^(0+128),f
  1554  0025' 2805'              	goto	l2352
  1555  0026'                    __end_of_UARTSendString:
  1556                           
  1557                           	psect	text5
  1558  0000'                    __ptext5:	
  1559 ;; *************** function _UARTSendChar *****************
  1560 ;; Defined at:
  1561 ;;		line 50 in file "UART.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  c               1    wreg     const unsigned char 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  c               1    0[BANK1 ] const unsigned char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg
  1570 ;; Tracked objects:
  1571 ;;		On entry : 300/100
  1572 ;;		On exit  : 300/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1575 ;;      Params:         0       0       0       0
  1576 ;;      Locals:         0       0       1       0
  1577 ;;      Temps:          0       0       0       0
  1578 ;;      Totals:         0       0       1       0
  1579 ;;Total ram usage:        1 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 3
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_UARTSendString
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589  0000'                    _UARTSendChar:	
  1590                           ;psect for function _UARTSendChar
  1591                           
  1592                           
  1593                           ;incstack = 0
  1594                           ; Regs used in _UARTSendChar: [wreg]
  1595                           ;UARTSendChar@c stored from wreg
  1596  0000' 0080'              	movwf	UARTSendChar@c^(0+128)
  1597  0001'                    l22:	
  1598                           ;UART.c: 51:     while (TXSTAbits.TRMT == 0);
  1599                           
  1600  0001' 1C98               	btfss	24,1	;volatile
  1601  0002' 2801'              	goto	l22
  1602                           
  1603                           ;UART.c: 52:     TXREG = c;
  1604  0003' 0800'              	movf	UARTSendChar@c^(0+128),w
  1605  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  1606  0005' 0099               	movwf	25	;volatile
  1607  0006' 0008               	return
  1608  0007'                    __end_of_UARTSendChar:
  1609                           
  1610                           	psect	text6
  1611  0000'                    __ptext6:	
  1612 ;; *************** function _UARTReadChar *****************
  1613 ;; Defined at:
  1614 ;;		line 79 in file "UART.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      unsigned char 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0, pclath, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 300/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1628 ;;      Params:         0       0       0       0
  1629 ;;      Locals:         0       0       0       0
  1630 ;;      Temps:          0       0       0       0
  1631 ;;      Totals:         0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 4
  1635 ;; This function calls:
  1636 ;;		_UARTDataReady
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642  0000'                    _UARTReadChar:	
  1643                           ;psect for function _UARTReadChar
  1644                           
  1645  0000'                    l2358:	
  1646                           ;UART.c: 80:     while (!UARTDataReady());
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _UARTReadChar: [wreg+status,2+status,0+pclath+cstack]
  1650                           
  1651  0000' 2000'              	fcall	_UARTDataReady
  1652  0001' 0800'              	movf	?_UARTDataReady^(0+128),w
  1653  0002' 0400'              	iorwf	(?_UARTDataReady+1)^(0+128),w
  1654  0003' 1903               	btfsc	3,2
  1655  0004' 2800'              	goto	l2358
  1656                           
  1657                           ;UART.c: 81:     return RCREG;
  1658  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  1659  0006' 081A               	movf	26,w	;volatile
  1660  0007' 0008               	return
  1661  0008'                    __end_of_UARTReadChar:
  1662                           
  1663                           	psect	text7
  1664  0000'                    __ptext7:	
  1665 ;; *************** function _UARTDataReady *****************
  1666 ;; Defined at:
  1667 ;;		line 71 in file "UART.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  2    0[BANK1 ] short 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 300/100
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1681 ;;      Params:         0       0       2       0
  1682 ;;      Locals:         0       0       0       0
  1683 ;;      Temps:          0       0       3       0
  1684 ;;      Totals:         0       0       5       0
  1685 ;;Total ram usage:        5 bytes
  1686 ;; Hardware stack levels used: 1
  1687 ;; Hardware stack levels required when called: 3
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_UARTReadChar
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696  0000'                    _UARTDataReady:	
  1697                           ;psect for function _UARTDataReady
  1698                           
  1699                           
  1700                           ;UART.c: 72:     return PIR1bits.RCIF ? 1 : 0;
  1701                           
  1702                           ;incstack = 0
  1703                           ; Regs used in _UARTDataReady: [wreg+status,2+status,0]
  1704  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1705  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1706  0002' 0E0C               	swapf	12,w	;volatile
  1707  0003' 1683               	bsf	3,5	;RP0=1, select bank1
  1708  0004' 0080'              	movwf	??_UARTDataReady^(0+128)
  1709  0005' 0C00'              	rrf	??_UARTDataReady^(0+128),w
  1710  0006' 3901               	andlw	1
  1711  0007' 0080'              	movwf	(??_UARTDataReady+1)^(0+128)
  1712  0008' 0181'              	clrf	((??_UARTDataReady+1)^(0+128)+1)
  1713  0009' 0800'              	movf	(??_UARTDataReady+1)^(0+128),w
  1714  000A' 0080'              	movwf	?_UARTDataReady^(0+128)
  1715  000B' 0800'              	movf	(??_UARTDataReady+2)^(0+128),w
  1716  000C' 0080'              	movwf	(?_UARTDataReady+1)^(0+128)
  1717  000D' 0008               	return
  1718  000E'                    __end_of_UARTDataReady:
  1719                           
  1720                           	psect	text8
  1721  0000'                    __ptext8:	
  1722 ;; *************** function _Servo_Init *****************
  1723 ;; Defined at:
  1724 ;;		line 16 in file "servo.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0
  1733 ;; Tracked objects:
  1734 ;;		On entry : 300/100
  1735 ;;		On exit  : 300/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1738 ;;      Params:         0       0       0       0
  1739 ;;      Locals:         0       0       0       0
  1740 ;;      Temps:          0       0       0       0
  1741 ;;      Totals:         0       0       0       0
  1742 ;;Total ram usage:        0 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 3
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752  0000'                    _Servo_Init:	
  1753                           ;psect for function _Servo_Init
  1754                           
  1755                           
  1756                           ;servo.c: 54:     TRISBbits.TRISB7 = 0;
  1757                           
  1758                           ;incstack = 0
  1759                           ; Regs used in _Servo_Init: [wreg+status,2+status,0]
  1760  0000' 1386               	bcf	6,7	;volatile
  1761                           
  1762                           ;servo.c: 55:     PORTBbits.RB7 = 0;
  1763  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1764  0002' 1386               	bcf	6,7	;volatile
  1765                           
  1766                           ;servo.c: 58:     INTCON = 0;
  1767  0003' 018B               	clrf	11	;volatile
  1768                           
  1769                           ;servo.c: 59:     INTCONbits.GIE = 1;
  1770  0004' 178B               	bsf	11,7	;volatile
  1771                           
  1772                           ;servo.c: 60:     INTCONbits.T0IE = 1;
  1773  0005' 168B               	bsf	11,5	;volatile
  1774                           
  1775                           ;servo.c: 61:     INTCONbits.T0IF = 0;
  1776  0006' 110B               	bcf	11,2	;volatile
  1777                           
  1778                           ;servo.c: 65:     OPTION_REGbits.T0CS=0;
  1779  0007' 1683               	bsf	3,5	;RP0=1, select bank1
  1780  0008' 1281               	bcf	1,5	;volatile
  1781                           
  1782                           ;servo.c: 66:     OPTION_REGbits.T0SE = 0;
  1783  0009' 1201               	bcf	1,4	;volatile
  1784                           
  1785                           ;servo.c: 67:     OPTION_REGbits.PSA=0;
  1786  000A' 1181               	bcf	1,3	;volatile
  1787                           
  1788                           ;servo.c: 68:     OPTION_REGbits.PS=0b000;
  1789  000B' 30F8               	movlw	-8
  1790  000C' 0581               	andwf	1,f	;volatile
  1791                           
  1792                           ;servo.c: 70:     TMR0=5;
  1793  000D' 3005               	movlw	5
  1794  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  1795  000F' 0081               	movwf	1	;volatile
  1796  0010' 0008               	return
  1797  0011'                    __end_of_Servo_Init:
  1798                           
  1799                           	psect	text9
  1800  0000'                    __ptext9:	
  1801 ;; *************** function _Servo_8_Write *****************
  1802 ;; Defined at:
  1803 ;;		line 124 in file "servo.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  ang             1    wreg     unsigned char 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  ang             1   18[BANK1 ] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0, pclath, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 300/0
  1814 ;;		On exit  : 300/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1817 ;;      Params:         0       0       0       0
  1818 ;;      Locals:         0       0       1       0
  1819 ;;      Temps:          0       0       3       0
  1820 ;;      Totals:         0       0       4       0
  1821 ;;Total ram usage:        4 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 4
  1824 ;; This function calls:
  1825 ;;		___awdiv
  1826 ;;		___wmul
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832  0000'                    _Servo_8_Write:	
  1833                           ;psect for function _Servo_8_Write
  1834                           
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _Servo_8_Write: [wreg+status,2+status,0+pclath+cstack]
  1838                           ;Servo_8_Write@ang stored from wreg
  1839  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1840  0001' 0080'              	movwf	Servo_8_Write@ang^(0+128)
  1841                           
  1842                           ;servo.c: 124: void Servo_8_Write(unsigned char ang);servo.c: 125: {;servo.c: 126:     d
      +                          ata_s[7] = (ang-0)*(4 -1)/(180-0)+1;
  1843  0002' 30B4               	movlw	180
  1844  0003' 0080'              	movwf	___awdiv@divisor^(0+128)
  1845  0004' 3000               	movlw	0
  1846  0005' 0081'              	movwf	(___awdiv@divisor^(0+128)+1)
  1847  0006' 0800'              	movf	Servo_8_Write@ang^(0+128),w
  1848  0007' 0080'              	movwf	??_Servo_8_Write^(0+128)
  1849  0008' 0181'              	clrf	(??_Servo_8_Write^(0+128)+1)
  1850  0009' 0800'              	movf	??_Servo_8_Write^(0+128),w
  1851  000A' 0080'              	movwf	___wmul@multiplier^(0+128)
  1852  000B' 0800'              	movf	(??_Servo_8_Write+1)^(0+128),w
  1853  000C' 0080'              	movwf	(___wmul@multiplier+1)^(0+128)
  1854  000D' 3003               	movlw	3
  1855  000E' 0080'              	movwf	___wmul@multiplicand^(0+128)
  1856  000F' 3000               	movlw	0
  1857  0010' 0081'              	movwf	(___wmul@multiplicand^(0+128)+1)
  1858  0011' 2000'              	fcall	___wmul
  1859  0012' 0800'              	movf	(?___wmul+1)^(0+128),w
  1860  0013' 0080'              	movwf	(___awdiv@dividend+1)^(0+128)
  1861  0014' 0800'              	movf	?___wmul^(0+128),w
  1862  0015' 0080'              	movwf	___awdiv@dividend^(0+128)
  1863  0016' 2000'              	fcall	___awdiv
  1864  0017' 0800'              	movf	?___awdiv^(0+128),w
  1865  0018' 3E01               	addlw	1
  1866  0019' 0080'              	movwf	(??_Servo_8_Write+2)^(0+128)
  1867  001A' 0800'              	movf	(??_Servo_8_Write+2)^(0+128),w
  1868  001B' 1283               	bcf	3,5	;RP0=0, select bank0
  1869  001C' 0087'              	movwf	_data_s+7
  1870  001D' 0008               	return
  1871  001E'                    __end_of_Servo_8_Write:
  1872                           
  1873                           	psect	text10
  1874  0000'                    __ptext10:	
  1875 ;; *************** function ___wmul *****************
  1876 ;; Defined at:
  1877 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  multiplier      2    0[BANK1 ] unsigned int 
  1880 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  product         2    4[BANK1 ] unsigned int 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  2    0[BANK1 ] unsigned int 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 300/100
  1889 ;;		On exit  : 300/100
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1892 ;;      Params:         0       0       4       0
  1893 ;;      Locals:         0       0       2       0
  1894 ;;      Temps:          0       0       0       0
  1895 ;;      Totals:         0       0       6       0
  1896 ;;Total ram usage:        6 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 3
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_Servo_8_Write
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906  0000'                    ___wmul:	
  1907                           ;psect for function ___wmul
  1908                           
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1912  0000' 0180'              	clrf	___wmul@product^(0+128)
  1913  0001' 0180'              	clrf	(___wmul@product+1)^(0+128)
  1914  0002'                    l2290:
  1915  0002' 1C00'              	btfss	___wmul@multiplier^(0+128),0
  1916  0003' 280A'              	goto	l256
  1917  0004' 0800'              	movf	___wmul@multiplicand^(0+128),w
  1918  0005' 0780'              	addwf	___wmul@product^(0+128),f
  1919  0006' 1803               	skipnc
  1920  0007' 0A80'              	incf	(___wmul@product+1)^(0+128),f
  1921  0008' 0800'              	movf	(___wmul@multiplicand+1)^(0+128),w
  1922  0009' 0780'              	addwf	(___wmul@product+1)^(0+128),f
  1923  000A'                    l256:
  1924  000A' 3001               	movlw	1
  1925  000B'                    u2815:
  1926  000B' 1003               	clrc
  1927  000C' 0D80'              	rlf	___wmul@multiplicand^(0+128),f
  1928  000D' 0D80'              	rlf	(___wmul@multiplicand+1)^(0+128),f
  1929  000E' 3EFF               	addlw	-1
  1930  000F' 1D03               	skipz
  1931  0010' 280B'              	goto	u2815
  1932  0011' 3001               	movlw	1
  1933  0012'                    u2825:
  1934  0012' 1003               	clrc
  1935  0013' 0C80'              	rrf	(___wmul@multiplier+1)^(0+128),f
  1936  0014' 0C80'              	rrf	___wmul@multiplier^(0+128),f
  1937  0015' 3EFF               	addlw	-1
  1938  0016' 1D03               	skipz
  1939  0017' 2812'              	goto	u2825
  1940  0018' 0800'              	movf	___wmul@multiplier^(0+128),w
  1941  0019' 0400'              	iorwf	(___wmul@multiplier+1)^(0+128),w
  1942  001A' 1D03               	btfss	3,2
  1943  001B' 2802'              	goto	l2290
  1944  001C' 0800'              	movf	(___wmul@product+1)^(0+128),w
  1945  001D' 0080'              	movwf	(?___wmul+1)^(0+128)
  1946  001E' 0800'              	movf	___wmul@product^(0+128),w
  1947  001F' 0080'              	movwf	?___wmul^(0+128)
  1948  0020' 0008               	return
  1949  0021'                    __end_of___wmul:
  1950                           
  1951                           	psect	text11
  1952  0000'                    __ptext11:	
  1953 ;; *************** function ___awdiv *****************
  1954 ;; Defined at:
  1955 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  divisor         2    6[BANK1 ] int 
  1958 ;;  dividend        2    8[BANK1 ] int 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  quotient        2   13[BANK1 ] int 
  1961 ;;  sign            1   12[BANK1 ] unsigned char 
  1962 ;;  counter         1   11[BANK1 ] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  2    6[BANK1 ] int 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0
  1967 ;; Tracked objects:
  1968 ;;		On entry : 300/100
  1969 ;;		On exit  : 300/100
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1972 ;;      Params:         0       0       4       0
  1973 ;;      Locals:         0       0       4       0
  1974 ;;      Temps:          0       0       1       0
  1975 ;;      Totals:         0       0       9       0
  1976 ;;Total ram usage:        9 bytes
  1977 ;; Hardware stack levels used: 1
  1978 ;; Hardware stack levels required when called: 3
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_Servo_8_Write
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986  0000'                    ___awdiv:	
  1987                           ;psect for function ___awdiv
  1988                           
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1992  0000' 0180'              	clrf	___awdiv@sign^(0+128)
  1993  0001' 1F80'              	btfss	(___awdiv@divisor+1)^(0+128),7
  1994  0002' 280A'              	goto	l2310
  1995  0003' 0980'              	comf	___awdiv@divisor^(0+128),f
  1996  0004' 0980'              	comf	(___awdiv@divisor+1)^(0+128),f
  1997  0005' 0A80'              	incf	___awdiv@divisor^(0+128),f
  1998  0006' 1903               	skipnz
  1999  0007' 0A80'              	incf	(___awdiv@divisor+1)^(0+128),f
  2000  0008' 0180'              	clrf	___awdiv@sign^(0+128)
  2001  0009' 0A80'              	incf	___awdiv@sign^(0+128),f
  2002  000A'                    l2310:
  2003  000A' 1F80'              	btfss	(___awdiv@dividend+1)^(0+128),7
  2004  000B' 2815'              	goto	l2316
  2005  000C' 0980'              	comf	___awdiv@dividend^(0+128),f
  2006  000D' 0980'              	comf	(___awdiv@dividend+1)^(0+128),f
  2007  000E' 0A80'              	incf	___awdiv@dividend^(0+128),f
  2008  000F' 1903               	skipnz
  2009  0010' 0A80'              	incf	(___awdiv@dividend+1)^(0+128),f
  2010  0011' 3001               	movlw	1
  2011  0012' 0080'              	movwf	??___awdiv^(0+128)
  2012  0013' 0800'              	movf	??___awdiv^(0+128),w
  2013  0014' 0680'              	xorwf	___awdiv@sign^(0+128),f
  2014  0015'                    l2316:
  2015  0015' 0180'              	clrf	___awdiv@quotient^(0+128)
  2016  0016' 0180'              	clrf	(___awdiv@quotient+1)^(0+128)
  2017  0017' 0800'              	movf	___awdiv@divisor^(0+128),w
  2018  0018' 0400'              	iorwf	(___awdiv@divisor+1)^(0+128),w
  2019  0019' 1903               	btfsc	3,2
  2020  001A' 284C'              	goto	l2338
  2021  001B' 0180'              	clrf	___awdiv@counter^(0+128)
  2022  001C' 0A80'              	incf	___awdiv@counter^(0+128),f
  2023  001D'                    l2326:
  2024  001D' 1B80'              	btfsc	(___awdiv@divisor+1)^(0+128),7
  2025  001E' 282B'              	goto	l2328
  2026  001F' 3001               	movlw	1
  2027  0020'                    u2875:
  2028  0020' 1003               	clrc
  2029  0021' 0D80'              	rlf	___awdiv@divisor^(0+128),f
  2030  0022' 0D80'              	rlf	(___awdiv@divisor+1)^(0+128),f
  2031  0023' 3EFF               	addlw	-1
  2032  0024' 1D03               	skipz
  2033  0025' 2820'              	goto	u2875
  2034  0026' 3001               	movlw	1
  2035  0027' 0080'              	movwf	??___awdiv^(0+128)
  2036  0028' 0800'              	movf	??___awdiv^(0+128),w
  2037  0029' 0780'              	addwf	___awdiv@counter^(0+128),f
  2038  002A' 281D'              	goto	l2326
  2039  002B'                    l2328:
  2040  002B' 3001               	movlw	1
  2041  002C'                    u2895:
  2042  002C' 1003               	clrc
  2043  002D' 0D80'              	rlf	___awdiv@quotient^(0+128),f
  2044  002E' 0D80'              	rlf	(___awdiv@quotient+1)^(0+128),f
  2045  002F' 3EFF               	addlw	-1
  2046  0030' 1D03               	skipz
  2047  0031' 282C'              	goto	u2895
  2048  0032' 0800'              	movf	(___awdiv@divisor+1)^(0+128),w
  2049  0033' 0200'              	subwf	(___awdiv@dividend+1)^(0+128),w
  2050  0034' 1D03               	skipz
  2051  0035' 2838'              	goto	u2905
  2052  0036' 0800'              	movf	___awdiv@divisor^(0+128),w
  2053  0037' 0200'              	subwf	___awdiv@dividend^(0+128),w
  2054  0038'                    u2905:
  2055  0038' 1C03               	skipc
  2056  0039' 2841'              	goto	l2334
  2057  003A' 0800'              	movf	___awdiv@divisor^(0+128),w
  2058  003B' 0280'              	subwf	___awdiv@dividend^(0+128),f
  2059  003C' 0800'              	movf	(___awdiv@divisor+1)^(0+128),w
  2060  003D' 1C03               	skipc
  2061  003E' 0380'              	decf	(___awdiv@dividend+1)^(0+128),f
  2062  003F' 0280'              	subwf	(___awdiv@dividend+1)^(0+128),f
  2063  0040' 1400'              	bsf	___awdiv@quotient^(0+128),0
  2064  0041'                    l2334:
  2065  0041' 3001               	movlw	1
  2066  0042'                    u2915:
  2067  0042' 1003               	clrc
  2068  0043' 0C80'              	rrf	(___awdiv@divisor+1)^(0+128),f
  2069  0044' 0C80'              	rrf	___awdiv@divisor^(0+128),f
  2070  0045' 3EFF               	addlw	-1
  2071  0046' 1D03               	skipz
  2072  0047' 2842'              	goto	u2915
  2073  0048' 3001               	movlw	1
  2074  0049' 0280'              	subwf	___awdiv@counter^(0+128),f
  2075  004A' 1D03               	btfss	3,2
  2076  004B' 282B'              	goto	l2328
  2077  004C'                    l2338:
  2078  004C' 0800'              	movf	___awdiv@sign^(0+128),w
  2079  004D' 1903               	btfsc	3,2
  2080  004E' 2854'              	goto	l2342
  2081  004F' 0980'              	comf	___awdiv@quotient^(0+128),f
  2082  0050' 0980'              	comf	(___awdiv@quotient+1)^(0+128),f
  2083  0051' 0A80'              	incf	___awdiv@quotient^(0+128),f
  2084  0052' 1903               	skipnz
  2085  0053' 0A80'              	incf	(___awdiv@quotient+1)^(0+128),f
  2086  0054'                    l2342:
  2087  0054' 0800'              	movf	(___awdiv@quotient+1)^(0+128),w
  2088  0055' 0080'              	movwf	(?___awdiv+1)^(0+128)
  2089  0056' 0800'              	movf	___awdiv@quotient^(0+128),w
  2090  0057' 0080'              	movwf	?___awdiv^(0+128)
  2091  0058' 0008               	return
  2092  0059'                    __end_of___awdiv:
  2093                           
  2094                           	psect	text12
  2095  0000'                    __ptext12:	
  2096 ;; *************** function _TMR0_ISR *****************
  2097 ;; Defined at:
  2098 ;;		line 136 in file "servo.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 300/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2112 ;;      Params:         0       0       0       0
  2113 ;;      Locals:         0       0       0       0
  2114 ;;      Temps:          0       5       0       0
  2115 ;;      Totals:         0       5       0       0
  2116 ;;Total ram usage:        5 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 2
  2119 ;; This function calls:
  2120 ;;		___fldiv
  2121 ;;		___flmul
  2122 ;;		___fltol
  2123 ;;		___xxtofl
  2124 ;; This function is called by:
  2125 ;;		Interrupt level 1
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129  0000'                    _TMR0_ISR:	
  2130                           ;psect for function _TMR0_ISR
  2131                           
  2132                           
  2133                           ;servo.c: 138:     if(PIR1bits.CCP1IF == 1){
  2134  0000' 1D0C               	btfss	12,2	;volatile
  2135  0001' 2848'              	goto	i1l2176
  2136                           
  2137                           ;servo.c: 139:         valor_pasos = (CCPR1H << 8) + CCPR1L;
  2138  0002' 0816               	movf	22,w	;volatile
  2139  0003' 008B'              	movwf	_valor_pasos+1
  2140  0004' 0815               	movf	21,w	;volatile
  2141  0005' 008A'              	movwf	_valor_pasos
  2142                           
  2143                           ;servo.c: 140:         TMR1L = 0x00;
  2144  0006' 018E               	clrf	14	;volatile
  2145                           
  2146                           ;servo.c: 141:         TMR1H = 0x00;
  2147  0007' 018F               	clrf	15	;volatile
  2148                           
  2149                           ;servo.c: 142:         periodo = valor_pasos * 0.000008;
  2150  0008' 3037               	movlw	55
  2151  0009' 0083'              	movwf	___flmul@b+3
  2152  000A' 3006               	movlw	6
  2153  000B' 0082'              	movwf	___flmul@b+2
  2154  000C' 3037               	movlw	55
  2155  000D' 0081'              	movwf	___flmul@b+1
  2156  000E' 30BD               	movlw	189
  2157  000F' 0080'              	movwf	___flmul@b
  2158  0010' 080A'              	movf	_valor_pasos,w
  2159  0011' 0080'              	movwf	___xxtofl@val
  2160  0012' 080B'              	movf	_valor_pasos+1,w
  2161  0013' 0081'              	movwf	___xxtofl@val+1
  2162  0014' 0182'              	clrf	___xxtofl@val+2
  2163  0015' 0183'              	clrf	___xxtofl@val+3
  2164  0016' 3000               	movlw	0
  2165  0017' 2000'              	fcall	___xxtofl
  2166  0018' 0803'              	movf	?___xxtofl+3,w
  2167  0019' 0087'              	movwf	___flmul@a+3
  2168  001A' 0802'              	movf	?___xxtofl+2,w
  2169  001B' 0086'              	movwf	___flmul@a+2
  2170  001C' 0801'              	movf	?___xxtofl+1,w
  2171  001D' 0085'              	movwf	___flmul@a+1
  2172  001E' 0800'              	movf	?___xxtofl,w
  2173  001F' 0084'              	movwf	___flmul@a
  2174  0020' 2000'              	fcall	___flmul
  2175  0021' 0803'              	movf	?___flmul+3,w
  2176  0022' 0091'              	movwf	_periodo+3
  2177  0023' 0802'              	movf	?___flmul+2,w
  2178  0024' 0090'              	movwf	_periodo+2
  2179  0025' 0801'              	movf	?___flmul+1,w
  2180  0026' 008F'              	movwf	_periodo+1
  2181  0027' 0800'              	movf	?___flmul,w
  2182  0028' 008E'              	movwf	_periodo
  2183                           
  2184                           ;servo.c: 143:         frecuencia = 1 / periodo;
  2185  0029' 303F               	movlw	63
  2186  002A' 0087'              	movwf	___fldiv@b+3
  2187  002B' 3080               	movlw	128
  2188  002C' 0086'              	movwf	___fldiv@b+2
  2189  002D' 3000               	movlw	0
  2190  002E' 0085'              	movwf	___fldiv@b+1
  2191  002F' 3000               	movlw	0
  2192  0030' 0084'              	movwf	___fldiv@b
  2193  0031' 0811'              	movf	_periodo+3,w
  2194  0032' 0083'              	movwf	___fldiv@a+3
  2195  0033' 0810'              	movf	_periodo+2,w
  2196  0034' 0082'              	movwf	___fldiv@a+2
  2197  0035' 080F'              	movf	_periodo+1,w
  2198  0036' 0081'              	movwf	___fldiv@a+1
  2199  0037' 080E'              	movf	_periodo,w
  2200  0038' 0080'              	movwf	___fldiv@a
  2201  0039' 2000'              	fcall	___fldiv
  2202  003A' 0803'              	movf	?___fldiv+3,w
  2203  003B' 0090'              	movwf	___fltol@f1+3
  2204  003C' 0802'              	movf	?___fldiv+2,w
  2205  003D' 008F'              	movwf	___fltol@f1+2
  2206  003E' 0801'              	movf	?___fldiv+1,w
  2207  003F' 008E'              	movwf	___fltol@f1+1
  2208  0040' 0800'              	movf	?___fldiv,w
  2209  0041' 008D'              	movwf	___fltol@f1
  2210  0042' 2000'              	fcall	___fltol
  2211  0043' 080E'              	movf	?___fltol+1,w
  2212  0044' 0089'              	movwf	_frecuencia+1
  2213  0045' 080D'              	movf	?___fltol,w
  2214  0046' 0088'              	movwf	_frecuencia
  2215                           
  2216                           ;servo.c: 144:         PIR1bits.CCP1IF = 0;
  2217  0047' 110C               	bcf	12,2	;volatile
  2218  0048'                    i1l2176:
  2219                           
  2220                           ;servo.c: 146:     if(INTCONbits.T0IF == 1)
  2221  0048' 1D0B               	btfss	11,2	;volatile
  2222  0049' 286D'              	goto	i1l170
  2223                           
  2224                           ;servo.c: 147:     {;servo.c: 148:         cont_sr = cont_sr + 1;
  2225  004A' 080C'              	movf	_cont_sr,w
  2226  004B' 3E01               	addlw	1
  2227  004C' 008C'              	movwf	_cont_sr
  2228  004D' 080D'              	movf	_cont_sr+1,w
  2229  004E' 1803               	skipnc
  2230  004F' 3E01               	addlw	1
  2231  0050' 3E00               	addlw	0
  2232  0051' 008D'              	movwf	_cont_sr+1
  2233                           
  2234                           ;servo.c: 149:         if(cont_sr > 41){
  2235  0052' 3000               	movlw	0
  2236  0053' 020D'              	subwf	_cont_sr+1,w
  2237  0054' 302A               	movlw	42
  2238  0055' 1903               	skipnz
  2239  0056' 020C'              	subwf	_cont_sr,w
  2240  0057' 1C03               	skipc
  2241  0058' 285B'              	goto	i1l2184
  2242                           
  2243                           ;servo.c: 150:             cont_sr = 0;
  2244  0059' 018C'              	clrf	_cont_sr
  2245  005A' 018D'              	clrf	_cont_sr+1
  2246  005B'                    i1l2184:
  2247                           
  2248                           ;servo.c: 181:         if(cont_sr < data_s[7]){PORTBbits.RB7 = 1;} else{PORTBbits.RB7 = 
      +                          0;}
  2249  005B' 0807'              	movf	_data_s+7,w
  2250  005C' 009A'              	movwf	??_TMR0_ISR
  2251  005D' 019B'              	clrf	??_TMR0_ISR+1
  2252  005E' 081B'              	movf	??_TMR0_ISR+1,w
  2253  005F' 020D'              	subwf	_cont_sr+1,w
  2254  0060' 1D03               	skipz
  2255  0061' 2864'              	goto	u268_25
  2256  0062' 081A'              	movf	??_TMR0_ISR,w
  2257  0063' 020C'              	subwf	_cont_sr,w
  2258  0064'                    u268_25:
  2259  0064' 1803               	skipnc
  2260  0065' 2868'              	goto	i1l168
  2261  0066' 1786               	bsf	6,7	;volatile
  2262  0067' 2869'              	goto	i1l2188
  2263  0068'                    i1l168:
  2264  0068' 1386               	bcf	6,7	;volatile
  2265  0069'                    i1l2188:
  2266                           
  2267                           ;servo.c: 184:         TMR0 = 5;
  2268  0069' 3005               	movlw	5
  2269  006A' 0081               	movwf	1	;volatile
  2270                           
  2271                           ;servo.c: 185:         INTCONbits.T0IF = 0;
  2272  006B' 110B               	bcf	11,2	;volatile
  2273                           
  2274                           ;servo.c: 186:         INTCONbits.T0IE = 1;
  2275  006C' 168B               	bsf	11,5	;volatile
  2276  006D'                    i1l170:
  2277  006D' 081E'              	movf	??_TMR0_ISR+4,w
  2278  006E' 00FF               	movwf	127
  2279  006F' 081D'              	movf	??_TMR0_ISR+3,w
  2280  0070' 008A               	movwf	10
  2281  0071' 0E1C'              	swapf	??_TMR0_ISR+2,w
  2282  0072' 0083               	movwf	3
  2283  0073' 0EFE               	swapf	126,f
  2284  0074' 0E7E               	swapf	126,w
  2285  0075' 0009               	retfie
  2286  0076'                    __end_of_TMR0_ISR:
  2287                           
  2288                           	psect	intentry
  2289  0000'                    __pintentry:	
  2290                           ;incstack = 0
  2291                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2292                           
  2293  0000'                    interrupt_function:
  2294  007E                     saved_w	set	btemp
  2295  0000' 00FE               	movwf	btemp
  2296  0001' 0E03               	swapf	3,w
  2297  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  2298  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  2299  0004' 009C'              	movwf	??_TMR0_ISR+2
  2300  0005' 080A               	movf	10,w
  2301  0006' 009D'              	movwf	??_TMR0_ISR+3
  2302  0007' 087F               	movf	btemp+1,w
  2303  0008' 009E'              	movwf	??_TMR0_ISR+4
  2304  0009' 2800'              	ljmp	_TMR0_ISR
  2305                           
  2306                           	psect	text13
  2307  0000'                    __ptext13:	
  2308 ;; *************** function ___xxtofl *****************
  2309 ;; Defined at:
  2310 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  sign            1    wreg     unsigned char 
  2313 ;;  val             4    0[COMMON] long 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  sign            1    8[COMMON] unsigned char 
  2316 ;;  arg             4   10[COMMON] unsigned long 
  2317 ;;  exp             1    9[COMMON] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  4    0[COMMON] unsigned char 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 300/0
  2324 ;;		On exit  : 300/0
  2325 ;;		Unchanged: 300/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2327 ;;      Params:         4       0       0       0
  2328 ;;      Locals:         6       0       0       0
  2329 ;;      Temps:          4       0       0       0
  2330 ;;      Totals:        14       0       0       0
  2331 ;;Total ram usage:       14 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_TMR0_ISR
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340  0000'                    ___xxtofl:	
  2341                           ;psect for function ___xxtofl
  2342                           
  2343                           
  2344                           ;incstack = 0
  2345                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2346                           ;___xxtofl@sign stored from wreg
  2347  0000' 0088'              	movwf	___xxtofl@sign
  2348  0001' 0808'              	movf	___xxtofl@sign,w
  2349  0002' 1D03               	btfss	3,2
  2350  0003' 1F83'              	btfss	___xxtofl@val+3,7
  2351  0004' 2815'              	goto	i1l2034
  2352  0005' 0900'              	comf	___xxtofl@val,w
  2353  0006' 008A'              	movwf	___xxtofl@arg
  2354  0007' 0901'              	comf	___xxtofl@val+1,w
  2355  0008' 008B'              	movwf	___xxtofl@arg+1
  2356  0009' 0902'              	comf	___xxtofl@val+2,w
  2357  000A' 008C'              	movwf	___xxtofl@arg+2
  2358  000B' 0903'              	comf	___xxtofl@val+3,w
  2359  000C' 008D'              	movwf	___xxtofl@arg+3
  2360  000D' 0A8A'              	incf	___xxtofl@arg,f
  2361  000E' 1903               	skipnz
  2362  000F' 0A8B'              	incf	___xxtofl@arg+1,f
  2363  0010' 1903               	skipnz
  2364  0011' 0A8C'              	incf	___xxtofl@arg+2,f
  2365  0012' 1903               	skipnz
  2366  0013' 0A8D'              	incf	___xxtofl@arg+3,f
  2367  0014' 281D'              	goto	i1l689
  2368  0015'                    i1l2034:
  2369  0015' 0803'              	movf	___xxtofl@val+3,w
  2370  0016' 008D'              	movwf	___xxtofl@arg+3
  2371  0017' 0802'              	movf	___xxtofl@val+2,w
  2372  0018' 008C'              	movwf	___xxtofl@arg+2
  2373  0019' 0801'              	movf	___xxtofl@val+1,w
  2374  001A' 008B'              	movwf	___xxtofl@arg+1
  2375  001B' 0800'              	movf	___xxtofl@val,w
  2376  001C' 008A'              	movwf	___xxtofl@arg
  2377  001D'                    i1l689:
  2378  001D' 0803'              	movf	___xxtofl@val+3,w
  2379  001E' 0402'              	iorwf	___xxtofl@val+2,w
  2380  001F' 0401'              	iorwf	___xxtofl@val+1,w
  2381  0020' 0400'              	iorwf	___xxtofl@val,w
  2382  0021' 1D03               	skipz
  2383  0022' 282C'              	goto	i1l2040
  2384  0023' 3000               	movlw	0
  2385  0024' 0083'              	movwf	?___xxtofl+3
  2386  0025' 3000               	movlw	0
  2387  0026' 0082'              	movwf	?___xxtofl+2
  2388  0027' 3000               	movlw	0
  2389  0028' 0081'              	movwf	?___xxtofl+1
  2390  0029' 3000               	movlw	0
  2391  002A' 0080'              	movwf	?___xxtofl
  2392  002B' 0008               	return
  2393  002C'                    i1l2040:
  2394  002C' 3096               	movlw	150
  2395  002D' 0084'              	movwf	??___xxtofl
  2396  002E' 0804'              	movf	??___xxtofl,w
  2397  002F' 0089'              	movwf	___xxtofl@exp
  2398  0030'                    i1l2044:
  2399  0030' 30FE               	movlw	254
  2400  0031' 050D'              	andwf	___xxtofl@arg+3,w
  2401  0032' 1903               	btfsc	3,2
  2402  0033' 285D'              	goto	i1l695
  2403  0034' 3001               	movlw	1
  2404  0035' 0084'              	movwf	??___xxtofl
  2405  0036' 0804'              	movf	??___xxtofl,w
  2406  0037' 0789'              	addwf	___xxtofl@exp,f
  2407  0038' 3001               	movlw	1
  2408  0039'                    u245_25:
  2409  0039' 1003               	clrc
  2410  003A' 0C8D'              	rrf	___xxtofl@arg+3,f
  2411  003B' 0C8C'              	rrf	___xxtofl@arg+2,f
  2412  003C' 0C8B'              	rrf	___xxtofl@arg+1,f
  2413  003D' 0C8A'              	rrf	___xxtofl@arg,f
  2414  003E' 3EFF               	addlw	-1
  2415  003F' 1D03               	skipz
  2416  0040' 2839'              	goto	u245_25
  2417  0041' 2830'              	goto	i1l2044
  2418  0042'                    i1l2046:
  2419  0042' 3001               	movlw	1
  2420  0043' 0084'              	movwf	??___xxtofl
  2421  0044' 0804'              	movf	??___xxtofl,w
  2422  0045' 0789'              	addwf	___xxtofl@exp,f
  2423  0046' 3001               	movlw	1
  2424  0047' 078A'              	addwf	___xxtofl@arg,f
  2425  0048' 3000               	movlw	0
  2426  0049' 1803               	skipnc
  2427  004A' 3001               	movlw	1
  2428  004B' 078B'              	addwf	___xxtofl@arg+1,f
  2429  004C' 3000               	movlw	0
  2430  004D' 1803               	skipnc
  2431  004E' 3001               	movlw	1
  2432  004F' 078C'              	addwf	___xxtofl@arg+2,f
  2433  0050' 3000               	movlw	0
  2434  0051' 1803               	skipnc
  2435  0052' 3001               	movlw	1
  2436  0053' 078D'              	addwf	___xxtofl@arg+3,f
  2437  0054' 3001               	movlw	1
  2438  0055'                    u247_25:
  2439  0055' 1003               	clrc
  2440  0056' 0C8D'              	rrf	___xxtofl@arg+3,f
  2441  0057' 0C8C'              	rrf	___xxtofl@arg+2,f
  2442  0058' 0C8B'              	rrf	___xxtofl@arg+1,f
  2443  0059' 0C8A'              	rrf	___xxtofl@arg,f
  2444  005A' 3EFF               	addlw	-1
  2445  005B' 1D03               	skipz
  2446  005C' 2855'              	goto	u247_25
  2447  005D'                    i1l695:
  2448  005D' 30FF               	movlw	255
  2449  005E' 050D'              	andwf	___xxtofl@arg+3,w
  2450  005F' 1903               	btfsc	3,2
  2451  0060' 2871'              	goto	i1l2054
  2452  0061' 2842'              	goto	i1l2046
  2453  0062'                    i1l2056:
  2454  0062' 3002               	movlw	2
  2455  0063' 0209'              	subwf	___xxtofl@exp,w
  2456  0064' 1C03               	btfss	3,0
  2457  0065' 2873'              	goto	i1l702
  2458  0066' 3001               	movlw	1
  2459  0067' 0289'              	subwf	___xxtofl@exp,f
  2460  0068' 3001               	movlw	1
  2461  0069' 0084'              	movwf	??___xxtofl
  2462  006A'                    u249_25:
  2463  006A' 1003               	clrc
  2464  006B' 0D8A'              	rlf	___xxtofl@arg,f
  2465  006C' 0D8B'              	rlf	___xxtofl@arg+1,f
  2466  006D' 0D8C'              	rlf	___xxtofl@arg+2,f
  2467  006E' 0D8D'              	rlf	___xxtofl@arg+3,f
  2468  006F' 0B84'              	decfsz	??___xxtofl,f
  2469  0070' 286A'              	goto	u249_25
  2470  0071'                    i1l2054:
  2471  0071' 1F8C'              	btfss	___xxtofl@arg+2,7
  2472  0072' 2862'              	goto	i1l2056
  2473  0073'                    i1l702:
  2474  0073' 1809'              	btfsc	___xxtofl@exp,0
  2475  0074' 287D'              	goto	i1l703
  2476  0075' 30FF               	movlw	255
  2477  0076' 058A'              	andwf	___xxtofl@arg,f
  2478  0077' 30FF               	movlw	255
  2479  0078' 058B'              	andwf	___xxtofl@arg+1,f
  2480  0079' 307F               	movlw	127
  2481  007A' 058C'              	andwf	___xxtofl@arg+2,f
  2482  007B' 30FF               	movlw	255
  2483  007C' 058D'              	andwf	___xxtofl@arg+3,f
  2484  007D'                    i1l703:
  2485  007D' 1003               	clrc
  2486  007E' 0C89'              	rrf	___xxtofl@exp,f
  2487  007F' 0809'              	movf	___xxtofl@exp,w
  2488  0080' 0084'              	movwf	??___xxtofl
  2489  0081' 0185'              	clrf	??___xxtofl+1
  2490  0082' 0186'              	clrf	??___xxtofl+2
  2491  0083' 0187'              	clrf	??___xxtofl+3
  2492  0084' 3018               	movlw	24
  2493  0085'                    u253_25:
  2494  0085' 1003               	clrc
  2495  0086' 0D84'              	rlf	??___xxtofl,f
  2496  0087' 0D85'              	rlf	??___xxtofl+1,f
  2497  0088' 0D86'              	rlf	??___xxtofl+2,f
  2498  0089' 0D87'              	rlf	??___xxtofl+3,f
  2499  008A' 3EFF               	addlw	-1
  2500  008B' 1D03               	skipz
  2501  008C' 2885'              	goto	u253_25
  2502  008D' 0804'              	movf	??___xxtofl,w
  2503  008E' 048A'              	iorwf	___xxtofl@arg,f
  2504  008F' 0805'              	movf	??___xxtofl+1,w
  2505  0090' 048B'              	iorwf	___xxtofl@arg+1,f
  2506  0091' 0806'              	movf	??___xxtofl+2,w
  2507  0092' 048C'              	iorwf	___xxtofl@arg+2,f
  2508  0093' 0807'              	movf	??___xxtofl+3,w
  2509  0094' 048D'              	iorwf	___xxtofl@arg+3,f
  2510  0095' 0808'              	movf	___xxtofl@sign,w
  2511  0096' 1D03               	btfss	3,2
  2512  0097' 1F83'              	btfss	___xxtofl@val+3,7
  2513  0098' 289A'              	goto	i1l2068
  2514  0099' 178D'              	bsf	___xxtofl@arg+3,7
  2515  009A'                    i1l2068:
  2516  009A' 080D'              	movf	___xxtofl@arg+3,w
  2517  009B' 0083'              	movwf	?___xxtofl+3
  2518  009C' 080C'              	movf	___xxtofl@arg+2,w
  2519  009D' 0082'              	movwf	?___xxtofl+2
  2520  009E' 080B'              	movf	___xxtofl@arg+1,w
  2521  009F' 0081'              	movwf	?___xxtofl+1
  2522  00A0' 080A'              	movf	___xxtofl@arg,w
  2523  00A1' 0080'              	movwf	?___xxtofl
  2524  00A2' 0008               	return
  2525  00A3'                    __end_of___xxtofl:
  2526                           
  2527                           	psect	text14
  2528  0000'                    __ptext14:	
  2529 ;; *************** function ___fltol *****************
  2530 ;; Defined at:
  2531 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  f1              4   13[BANK0 ] unsigned char 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  exp1            1   23[BANK0 ] unsigned char 
  2536 ;;  sign1           1   22[BANK0 ] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  4   13[BANK0 ] long 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0
  2541 ;; Tracked objects:
  2542 ;;		On entry : 300/0
  2543 ;;		On exit  : 300/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2546 ;;      Params:         0       4       0       0
  2547 ;;      Locals:         0       2       0       0
  2548 ;;      Temps:          0       5       0       0
  2549 ;;      Totals:         0      11       0       0
  2550 ;;Total ram usage:       11 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_TMR0_ISR
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559  0000'                    ___fltol:	
  2560                           ;psect for function ___fltol
  2561                           
  2562                           
  2563                           ;incstack = 0
  2564                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2565  0000' 1003               	clrc
  2566  0001' 0D0F'              	rlf	___fltol@f1+2,w
  2567  0002' 0D10'              	rlf	___fltol@f1+3,w
  2568  0003' 0091'              	movwf	??___fltol
  2569  0004' 0811'              	movf	??___fltol,w
  2570  0005' 0097'              	movwf	___fltol@exp1
  2571  0006' 0817'              	movf	___fltol@exp1,w
  2572  0007' 1D03               	btfss	3,2
  2573  0008' 2812'              	goto	i1l1716
  2574  0009'                    i1l1712:
  2575  0009' 3000               	movlw	0
  2576  000A' 0090'              	movwf	?___fltol+3
  2577  000B' 3000               	movlw	0
  2578  000C' 008F'              	movwf	?___fltol+2
  2579  000D' 3000               	movlw	0
  2580  000E' 008E'              	movwf	?___fltol+1
  2581  000F' 3000               	movlw	0
  2582  0010' 008D'              	movwf	?___fltol
  2583  0011' 0008               	return
  2584  0012'                    i1l1716:
  2585  0012' 080D'              	movf	___fltol@f1,w
  2586  0013' 0091'              	movwf	??___fltol
  2587  0014' 080E'              	movf	___fltol@f1+1,w
  2588  0015' 0092'              	movwf	??___fltol+1
  2589  0016' 080F'              	movf	___fltol@f1+2,w
  2590  0017' 0093'              	movwf	??___fltol+2
  2591  0018' 0810'              	movf	___fltol@f1+3,w
  2592  0019' 0094'              	movwf	??___fltol+3
  2593  001A' 301F               	movlw	31
  2594  001B'                    u167_25:
  2595  001B' 1003               	clrc
  2596  001C' 0C94'              	rrf	??___fltol+3,f
  2597  001D' 0C93'              	rrf	??___fltol+2,f
  2598  001E' 0C92'              	rrf	??___fltol+1,f
  2599  001F' 0C91'              	rrf	??___fltol,f
  2600  0020' 3EFF               	addlw	-1
  2601  0021' 1D03               	skipz
  2602  0022' 281B'              	goto	u167_25
  2603  0023' 0811'              	movf	??___fltol,w
  2604  0024' 0095'              	movwf	??___fltol+4
  2605  0025' 0815'              	movf	??___fltol+4,w
  2606  0026' 0096'              	movwf	___fltol@sign1
  2607  0027' 178F'              	bsf	___fltol@f1+2,7
  2608  0028' 30FF               	movlw	255
  2609  0029' 058D'              	andwf	___fltol@f1,f
  2610  002A' 30FF               	movlw	255
  2611  002B' 058E'              	andwf	___fltol@f1+1,f
  2612  002C' 30FF               	movlw	255
  2613  002D' 058F'              	andwf	___fltol@f1+2,f
  2614  002E' 3000               	movlw	0
  2615  002F' 0590'              	andwf	___fltol@f1+3,f
  2616  0030' 3096               	movlw	150
  2617  0031' 0297'              	subwf	___fltol@exp1,f
  2618  0032' 1F97'              	btfss	___fltol@exp1,7
  2619  0033' 2849'              	goto	i1l1734
  2620  0034' 0817'              	movf	___fltol@exp1,w
  2621  0035' 3A80               	xorlw	128
  2622  0036' 3E97               	addlw	151
  2623  0037' 1C03               	btfss	3,0
  2624  0038' 2809'              	goto	i1l1712
  2625  0039'                    i1l1732:
  2626  0039' 3001               	movlw	1
  2627  003A'                    u170_25:
  2628  003A' 1003               	clrc
  2629  003B' 0C90'              	rrf	___fltol@f1+3,f
  2630  003C' 0C8F'              	rrf	___fltol@f1+2,f
  2631  003D' 0C8E'              	rrf	___fltol@f1+1,f
  2632  003E' 0C8D'              	rrf	___fltol@f1,f
  2633  003F' 3EFF               	addlw	-1
  2634  0040' 1D03               	skipz
  2635  0041' 283A'              	goto	u170_25
  2636  0042' 3001               	movlw	1
  2637  0043' 0091'              	movwf	??___fltol
  2638  0044' 0811'              	movf	??___fltol,w
  2639  0045' 0797'              	addwf	___fltol@exp1,f
  2640  0046' 1903               	btfsc	3,2
  2641  0047' 285C'              	goto	i1l1742
  2642  0048' 2839'              	goto	i1l1732
  2643  0049'                    i1l1734:
  2644  0049' 3020               	movlw	32
  2645  004A' 0217'              	subwf	___fltol@exp1,w
  2646  004B' 1803               	btfsc	3,0
  2647  004C' 2809'              	goto	i1l1712
  2648  004D'                    i1l449:
  2649  004D' 0817'              	movf	___fltol@exp1,w
  2650  004E' 1903               	btfsc	3,2
  2651  004F' 285C'              	goto	i1l1742
  2652  0050' 3001               	movlw	1
  2653  0051' 0091'              	movwf	??___fltol
  2654  0052'                    u173_25:
  2655  0052' 1003               	clrc
  2656  0053' 0D8D'              	rlf	___fltol@f1,f
  2657  0054' 0D8E'              	rlf	___fltol@f1+1,f
  2658  0055' 0D8F'              	rlf	___fltol@f1+2,f
  2659  0056' 0D90'              	rlf	___fltol@f1+3,f
  2660  0057' 0B91'              	decfsz	??___fltol,f
  2661  0058' 2852'              	goto	u173_25
  2662  0059' 3001               	movlw	1
  2663  005A' 0297'              	subwf	___fltol@exp1,f
  2664  005B' 284D'              	goto	i1l449
  2665  005C'                    i1l1742:
  2666  005C' 0816'              	movf	___fltol@sign1,w
  2667  005D' 1903               	btfsc	3,2
  2668  005E' 0008               	return
  2669  005F' 098D'              	comf	___fltol@f1,f
  2670  0060' 098E'              	comf	___fltol@f1+1,f
  2671  0061' 098F'              	comf	___fltol@f1+2,f
  2672  0062' 0990'              	comf	___fltol@f1+3,f
  2673  0063' 0A8D'              	incf	___fltol@f1,f
  2674  0064' 1903               	skipnz
  2675  0065' 0A8E'              	incf	___fltol@f1+1,f
  2676  0066' 1903               	skipnz
  2677  0067' 0A8F'              	incf	___fltol@f1+2,f
  2678  0068' 1903               	skipnz
  2679  0069' 0A90'              	incf	___fltol@f1+3,f
  2680  006A' 0008               	return
  2681  006B'                    __end_of___fltol:
  2682                           
  2683                           	psect	text15
  2684  0000'                    __ptext15:	
  2685 ;; *************** function ___flmul *****************
  2686 ;; Defined at:
  2687 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  b               4    0[BANK0 ] long 
  2690 ;;  a               4    4[BANK0 ] long 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  prod            4   20[BANK0 ] struct .
  2693 ;;  grs             4   15[BANK0 ] unsigned long 
  2694 ;;  temp            2   24[BANK0 ] struct .
  2695 ;;  bexp            1   19[BANK0 ] unsigned char 
  2696 ;;  aexp            1   14[BANK0 ] unsigned char 
  2697 ;;  sign            1   13[BANK0 ] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  4    0[BANK0 ] unsigned char 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 300/0
  2704 ;;		On exit  : 300/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2707 ;;      Params:         0       8       0       0
  2708 ;;      Locals:         0      13       0       0
  2709 ;;      Temps:          0       5       0       0
  2710 ;;      Totals:         0      26       0       0
  2711 ;;Total ram usage:       26 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 1
  2714 ;; This function calls:
  2715 ;;		__Umul8_16
  2716 ;; This function is called by:
  2717 ;;		_TMR0_ISR
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721  0000'                    ___flmul:	
  2722                           ;psect for function ___flmul
  2723                           
  2724                           
  2725                           ;incstack = 0
  2726                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2727  0000' 0803'              	movf	___flmul@b+3,w
  2728  0001' 3980               	andlw	128
  2729  0002' 0088'              	movwf	??___flmul
  2730  0003' 0808'              	movf	??___flmul,w
  2731  0004' 008D'              	movwf	___flmul@sign
  2732  0005' 0803'              	movf	___flmul@b+3,w
  2733  0006' 0088'              	movwf	??___flmul
  2734  0007' 0708'              	addwf	??___flmul,w
  2735  0008' 0089'              	movwf	??___flmul+1
  2736  0009' 0809'              	movf	??___flmul+1,w
  2737  000A' 0093'              	movwf	___flmul@bexp
  2738  000B' 1B82'              	btfsc	___flmul@b+2,7
  2739  000C' 1413'              	bsf	___flmul@bexp,0
  2740  000D' 0813'              	movf	___flmul@bexp,w
  2741  000E' 1903               	btfsc	3,2
  2742  000F' 281D'              	goto	i1l1904
  2743  0010' 0A13'              	incf	___flmul@bexp,w
  2744  0011' 1D03               	btfss	3,2
  2745  0012' 281B'              	goto	i1l1902
  2746  0013' 3000               	movlw	0
  2747  0014' 0083'              	movwf	___flmul@b+3
  2748  0015' 3000               	movlw	0
  2749  0016' 0082'              	movwf	___flmul@b+2
  2750  0017' 3000               	movlw	0
  2751  0018' 0081'              	movwf	___flmul@b+1
  2752  0019' 3000               	movlw	0
  2753  001A' 0080'              	movwf	___flmul@b
  2754  001B'                    i1l1902:
  2755  001B' 1782'              	bsf	___flmul@b+2,7
  2756  001C' 2825'              	goto	i1l1906
  2757  001D'                    i1l1904:
  2758  001D' 3000               	movlw	0
  2759  001E' 0083'              	movwf	___flmul@b+3
  2760  001F' 3000               	movlw	0
  2761  0020' 0082'              	movwf	___flmul@b+2
  2762  0021' 3000               	movlw	0
  2763  0022' 0081'              	movwf	___flmul@b+1
  2764  0023' 3000               	movlw	0
  2765  0024' 0080'              	movwf	___flmul@b
  2766  0025'                    i1l1906:
  2767  0025' 0807'              	movf	___flmul@a+3,w
  2768  0026' 3980               	andlw	128
  2769  0027' 0088'              	movwf	??___flmul
  2770  0028' 0808'              	movf	??___flmul,w
  2771  0029' 068D'              	xorwf	___flmul@sign,f
  2772  002A' 0807'              	movf	___flmul@a+3,w
  2773  002B' 0088'              	movwf	??___flmul
  2774  002C' 0708'              	addwf	??___flmul,w
  2775  002D' 0089'              	movwf	??___flmul+1
  2776  002E' 0809'              	movf	??___flmul+1,w
  2777  002F' 008E'              	movwf	___flmul@aexp
  2778  0030' 1B86'              	btfsc	___flmul@a+2,7
  2779  0031' 140E'              	bsf	___flmul@aexp,0
  2780  0032' 080E'              	movf	___flmul@aexp,w
  2781  0033' 1903               	btfsc	3,2
  2782  0034' 2842'              	goto	i1l1922
  2783  0035' 0A0E'              	incf	___flmul@aexp,w
  2784  0036' 1D03               	btfss	3,2
  2785  0037' 2840'              	goto	i1l1920
  2786  0038' 3000               	movlw	0
  2787  0039' 0087'              	movwf	___flmul@a+3
  2788  003A' 3000               	movlw	0
  2789  003B' 0086'              	movwf	___flmul@a+2
  2790  003C' 3000               	movlw	0
  2791  003D' 0085'              	movwf	___flmul@a+1
  2792  003E' 3000               	movlw	0
  2793  003F' 0084'              	movwf	___flmul@a
  2794  0040'                    i1l1920:
  2795  0040' 1786'              	bsf	___flmul@a+2,7
  2796  0041' 284A'              	goto	i1l1924
  2797  0042'                    i1l1922:
  2798  0042' 3000               	movlw	0
  2799  0043' 0087'              	movwf	___flmul@a+3
  2800  0044' 3000               	movlw	0
  2801  0045' 0086'              	movwf	___flmul@a+2
  2802  0046' 3000               	movlw	0
  2803  0047' 0085'              	movwf	___flmul@a+1
  2804  0048' 3000               	movlw	0
  2805  0049' 0084'              	movwf	___flmul@a
  2806  004A'                    i1l1924:
  2807  004A' 080E'              	movf	___flmul@aexp,w
  2808  004B' 1D03               	btfss	3,2
  2809  004C' 0813'              	movf	___flmul@bexp,w
  2810  004D' 1D03               	btfss	3,2
  2811  004E' 2858'              	goto	i1l1932
  2812  004F' 3000               	movlw	0
  2813  0050' 0083'              	movwf	?___flmul+3
  2814  0051' 3000               	movlw	0
  2815  0052' 0082'              	movwf	?___flmul+2
  2816  0053' 3000               	movlw	0
  2817  0054' 0081'              	movwf	?___flmul+1
  2818  0055' 3000               	movlw	0
  2819  0056' 0080'              	movwf	?___flmul
  2820  0057' 0008               	return
  2821  0058'                    i1l1932:
  2822  0058' 0800'              	movf	___flmul@b,w
  2823  0059' 0088'              	movwf	??___flmul
  2824  005A' 0808'              	movf	??___flmul,w
  2825  005B' 0080'              	movwf	__Umul8_16@multiplicand
  2826  005C' 0806'              	movf	___flmul@a+2,w
  2827  005D' 2000'              	fcall	__Umul8_16
  2828  005E' 0801'              	movf	?__Umul8_16+1,w
  2829  005F' 0099'              	movwf	___flmul@temp+1
  2830  0060' 0800'              	movf	?__Umul8_16,w
  2831  0061' 0098'              	movwf	___flmul@temp
  2832  0062' 0818'              	movf	___flmul@temp,w
  2833  0063' 0088'              	movwf	??___flmul
  2834  0064' 0189'              	clrf	??___flmul+1
  2835  0065' 018A'              	clrf	??___flmul+2
  2836  0066' 018B'              	clrf	??___flmul+3
  2837  0067' 080B'              	movf	??___flmul+3,w
  2838  0068' 0092'              	movwf	___flmul@grs+3
  2839  0069' 080A'              	movf	??___flmul+2,w
  2840  006A' 0091'              	movwf	___flmul@grs+2
  2841  006B' 0809'              	movf	??___flmul+1,w
  2842  006C' 0090'              	movwf	___flmul@grs+1
  2843  006D' 0808'              	movf	??___flmul,w
  2844  006E' 008F'              	movwf	___flmul@grs
  2845  006F' 0819'              	movf	___flmul@temp+1,w
  2846  0070' 0088'              	movwf	??___flmul
  2847  0071' 0189'              	clrf	??___flmul+1
  2848  0072' 018A'              	clrf	??___flmul+2
  2849  0073' 018B'              	clrf	??___flmul+3
  2850  0074' 080B'              	movf	??___flmul+3,w
  2851  0075' 0097'              	movwf	___flmul@prod+3
  2852  0076' 080A'              	movf	??___flmul+2,w
  2853  0077' 0096'              	movwf	___flmul@prod+2
  2854  0078' 0809'              	movf	??___flmul+1,w
  2855  0079' 0095'              	movwf	___flmul@prod+1
  2856  007A' 0808'              	movf	??___flmul,w
  2857  007B' 0094'              	movwf	___flmul@prod
  2858  007C' 0801'              	movf	___flmul@b+1,w
  2859  007D' 0088'              	movwf	??___flmul
  2860  007E' 0808'              	movf	??___flmul,w
  2861  007F' 0080'              	movwf	__Umul8_16@multiplicand
  2862  0080' 0805'              	movf	___flmul@a+1,w
  2863  0081' 2000'              	fcall	__Umul8_16
  2864  0082' 0801'              	movf	?__Umul8_16+1,w
  2865  0083' 0099'              	movwf	___flmul@temp+1
  2866  0084' 0800'              	movf	?__Umul8_16,w
  2867  0085' 0098'              	movwf	___flmul@temp
  2868  0086' 0818'              	movf	___flmul@temp,w
  2869  0087' 0088'              	movwf	??___flmul
  2870  0088' 0189'              	clrf	??___flmul+1
  2871  0089' 018A'              	clrf	??___flmul+2
  2872  008A' 018B'              	clrf	??___flmul+3
  2873  008B' 0808'              	movf	??___flmul,w
  2874  008C' 078F'              	addwf	___flmul@grs,f
  2875  008D' 0809'              	movf	??___flmul+1,w
  2876  008E' 1103               	clrz
  2877  008F' 1803               	skipnc
  2878  0090' 3E01               	addlw	1
  2879  0091' 1D03               	btfss	3,2
  2880  0092' 0790'              	addwf	___flmul@grs+1,f
  2881  0093' 080A'              	movf	??___flmul+2,w
  2882  0094' 1103               	clrz
  2883  0095' 1803               	skipnc
  2884  0096' 3E01               	addlw	1
  2885  0097' 1D03               	btfss	3,2
  2886  0098' 0791'              	addwf	___flmul@grs+2,f
  2887  0099' 080B'              	movf	??___flmul+3,w
  2888  009A' 1103               	clrz
  2889  009B' 1803               	skipnc
  2890  009C' 3E01               	addlw	1
  2891  009D' 1D03               	btfss	3,2
  2892  009E' 0792'              	addwf	___flmul@grs+3,f
  2893  009F' 0819'              	movf	___flmul@temp+1,w
  2894  00A0' 0088'              	movwf	??___flmul
  2895  00A1' 0189'              	clrf	??___flmul+1
  2896  00A2' 018A'              	clrf	??___flmul+2
  2897  00A3' 018B'              	clrf	??___flmul+3
  2898  00A4' 0808'              	movf	??___flmul,w
  2899  00A5' 0794'              	addwf	___flmul@prod,f
  2900  00A6' 0809'              	movf	??___flmul+1,w
  2901  00A7' 1103               	clrz
  2902  00A8' 1803               	skipnc
  2903  00A9' 3E01               	addlw	1
  2904  00AA' 1D03               	btfss	3,2
  2905  00AB' 0795'              	addwf	___flmul@prod+1,f
  2906  00AC' 080A'              	movf	??___flmul+2,w
  2907  00AD' 1103               	clrz
  2908  00AE' 1803               	skipnc
  2909  00AF' 3E01               	addlw	1
  2910  00B0' 1D03               	btfss	3,2
  2911  00B1' 0796'              	addwf	___flmul@prod+2,f
  2912  00B2' 080B'              	movf	??___flmul+3,w
  2913  00B3' 1103               	clrz
  2914  00B4' 1803               	skipnc
  2915  00B5' 3E01               	addlw	1
  2916  00B6' 1D03               	btfss	3,2
  2917  00B7' 0797'              	addwf	___flmul@prod+3,f
  2918  00B8' 0802'              	movf	___flmul@b+2,w
  2919  00B9' 0088'              	movwf	??___flmul
  2920  00BA' 0808'              	movf	??___flmul,w
  2921  00BB' 0080'              	movwf	__Umul8_16@multiplicand
  2922  00BC' 0804'              	movf	___flmul@a,w
  2923  00BD' 2000'              	fcall	__Umul8_16
  2924  00BE' 0801'              	movf	?__Umul8_16+1,w
  2925  00BF' 0099'              	movwf	___flmul@temp+1
  2926  00C0' 0800'              	movf	?__Umul8_16,w
  2927  00C1' 0098'              	movwf	___flmul@temp
  2928  00C2' 0818'              	movf	___flmul@temp,w
  2929  00C3' 0088'              	movwf	??___flmul
  2930  00C4' 0189'              	clrf	??___flmul+1
  2931  00C5' 018A'              	clrf	??___flmul+2
  2932  00C6' 018B'              	clrf	??___flmul+3
  2933  00C7' 0808'              	movf	??___flmul,w
  2934  00C8' 078F'              	addwf	___flmul@grs,f
  2935  00C9' 0809'              	movf	??___flmul+1,w
  2936  00CA' 1103               	clrz
  2937  00CB' 1803               	skipnc
  2938  00CC' 3E01               	addlw	1
  2939  00CD' 1D03               	btfss	3,2
  2940  00CE' 0790'              	addwf	___flmul@grs+1,f
  2941  00CF' 080A'              	movf	??___flmul+2,w
  2942  00D0' 1103               	clrz
  2943  00D1' 1803               	skipnc
  2944  00D2' 3E01               	addlw	1
  2945  00D3' 1D03               	btfss	3,2
  2946  00D4' 0791'              	addwf	___flmul@grs+2,f
  2947  00D5' 080B'              	movf	??___flmul+3,w
  2948  00D6' 1103               	clrz
  2949  00D7' 1803               	skipnc
  2950  00D8' 3E01               	addlw	1
  2951  00D9' 1D03               	btfss	3,2
  2952  00DA' 0792'              	addwf	___flmul@grs+3,f
  2953  00DB' 0819'              	movf	___flmul@temp+1,w
  2954  00DC' 0088'              	movwf	??___flmul
  2955  00DD' 0189'              	clrf	??___flmul+1
  2956  00DE' 018A'              	clrf	??___flmul+2
  2957  00DF' 018B'              	clrf	??___flmul+3
  2958  00E0' 0808'              	movf	??___flmul,w
  2959  00E1' 0794'              	addwf	___flmul@prod,f
  2960  00E2' 0809'              	movf	??___flmul+1,w
  2961  00E3' 1103               	clrz
  2962  00E4' 1803               	skipnc
  2963  00E5' 3E01               	addlw	1
  2964  00E6' 1D03               	btfss	3,2
  2965  00E7' 0795'              	addwf	___flmul@prod+1,f
  2966  00E8' 080A'              	movf	??___flmul+2,w
  2967  00E9' 1103               	clrz
  2968  00EA' 1803               	skipnc
  2969  00EB' 3E01               	addlw	1
  2970  00EC' 1D03               	btfss	3,2
  2971  00ED' 0796'              	addwf	___flmul@prod+2,f
  2972  00EE' 080B'              	movf	??___flmul+3,w
  2973  00EF' 1103               	clrz
  2974  00F0' 1803               	skipnc
  2975  00F1' 3E01               	addlw	1
  2976  00F2' 1D03               	btfss	3,2
  2977  00F3' 0797'              	addwf	___flmul@prod+3,f
  2978  00F4' 3008               	movlw	8
  2979  00F5' 0088'              	movwf	??___flmul
  2980  00F6'                    u218_25:
  2981  00F6' 1003               	clrc
  2982  00F7' 0D8F'              	rlf	___flmul@grs,f
  2983  00F8' 0D90'              	rlf	___flmul@grs+1,f
  2984  00F9' 0D91'              	rlf	___flmul@grs+2,f
  2985  00FA' 0D92'              	rlf	___flmul@grs+3,f
  2986  00FB' 0B88'              	decfsz	??___flmul,f
  2987  00FC' 28F6'              	goto	u218_25
  2988  00FD' 0801'              	movf	___flmul@b+1,w
  2989  00FE' 0088'              	movwf	??___flmul
  2990  00FF' 0808'              	movf	??___flmul,w
  2991  0100' 0080'              	movwf	__Umul8_16@multiplicand
  2992  0101' 0804'              	movf	___flmul@a,w
  2993  0102' 2000'              	fcall	__Umul8_16
  2994  0103' 0801'              	movf	?__Umul8_16+1,w
  2995  0104' 0099'              	movwf	___flmul@temp+1
  2996  0105' 0800'              	movf	?__Umul8_16,w
  2997  0106' 0098'              	movwf	___flmul@temp
  2998  0107' 0818'              	movf	___flmul@temp,w
  2999  0108' 0088'              	movwf	??___flmul
  3000  0109' 0819'              	movf	___flmul@temp+1,w
  3001  010A' 0089'              	movwf	??___flmul+1
  3002  010B' 018A'              	clrf	??___flmul+2
  3003  010C' 018B'              	clrf	??___flmul+3
  3004  010D' 0808'              	movf	??___flmul,w
  3005  010E' 078F'              	addwf	___flmul@grs,f
  3006  010F' 0809'              	movf	??___flmul+1,w
  3007  0110' 1103               	clrz
  3008  0111' 1803               	skipnc
  3009  0112' 3E01               	addlw	1
  3010  0113' 1D03               	btfss	3,2
  3011  0114' 0790'              	addwf	___flmul@grs+1,f
  3012  0115' 080A'              	movf	??___flmul+2,w
  3013  0116' 1103               	clrz
  3014  0117' 1803               	skipnc
  3015  0118' 3E01               	addlw	1
  3016  0119' 1D03               	btfss	3,2
  3017  011A' 0791'              	addwf	___flmul@grs+2,f
  3018  011B' 080B'              	movf	??___flmul+3,w
  3019  011C' 1103               	clrz
  3020  011D' 1803               	skipnc
  3021  011E' 3E01               	addlw	1
  3022  011F' 1D03               	btfss	3,2
  3023  0120' 0792'              	addwf	___flmul@grs+3,f
  3024  0121' 0800'              	movf	___flmul@b,w
  3025  0122' 0088'              	movwf	??___flmul
  3026  0123' 0808'              	movf	??___flmul,w
  3027  0124' 0080'              	movwf	__Umul8_16@multiplicand
  3028  0125' 0805'              	movf	___flmul@a+1,w
  3029  0126' 2000'              	fcall	__Umul8_16
  3030  0127' 0801'              	movf	?__Umul8_16+1,w
  3031  0128' 0099'              	movwf	___flmul@temp+1
  3032  0129' 0800'              	movf	?__Umul8_16,w
  3033  012A' 0098'              	movwf	___flmul@temp
  3034  012B' 0818'              	movf	___flmul@temp,w
  3035  012C' 0088'              	movwf	??___flmul
  3036  012D' 0819'              	movf	___flmul@temp+1,w
  3037  012E' 0089'              	movwf	??___flmul+1
  3038  012F' 018A'              	clrf	??___flmul+2
  3039  0130' 018B'              	clrf	??___flmul+3
  3040  0131' 0808'              	movf	??___flmul,w
  3041  0132' 078F'              	addwf	___flmul@grs,f
  3042  0133' 0809'              	movf	??___flmul+1,w
  3043  0134' 1103               	clrz
  3044  0135' 1803               	skipnc
  3045  0136' 3E01               	addlw	1
  3046  0137' 1D03               	btfss	3,2
  3047  0138' 0790'              	addwf	___flmul@grs+1,f
  3048  0139' 080A'              	movf	??___flmul+2,w
  3049  013A' 1103               	clrz
  3050  013B' 1803               	skipnc
  3051  013C' 3E01               	addlw	1
  3052  013D' 1D03               	btfss	3,2
  3053  013E' 0791'              	addwf	___flmul@grs+2,f
  3054  013F' 080B'              	movf	??___flmul+3,w
  3055  0140' 1103               	clrz
  3056  0141' 1803               	skipnc
  3057  0142' 3E01               	addlw	1
  3058  0143' 1D03               	btfss	3,2
  3059  0144' 0792'              	addwf	___flmul@grs+3,f
  3060  0145' 3008               	movlw	8
  3061  0146' 0088'              	movwf	??___flmul
  3062  0147'                    u221_25:
  3063  0147' 1003               	clrc
  3064  0148' 0D8F'              	rlf	___flmul@grs,f
  3065  0149' 0D90'              	rlf	___flmul@grs+1,f
  3066  014A' 0D91'              	rlf	___flmul@grs+2,f
  3067  014B' 0D92'              	rlf	___flmul@grs+3,f
  3068  014C' 0B88'              	decfsz	??___flmul,f
  3069  014D' 2947'              	goto	u221_25
  3070  014E' 0800'              	movf	___flmul@b,w
  3071  014F' 0088'              	movwf	??___flmul
  3072  0150' 0808'              	movf	??___flmul,w
  3073  0151' 0080'              	movwf	__Umul8_16@multiplicand
  3074  0152' 0804'              	movf	___flmul@a,w
  3075  0153' 2000'              	fcall	__Umul8_16
  3076  0154' 0801'              	movf	?__Umul8_16+1,w
  3077  0155' 0099'              	movwf	___flmul@temp+1
  3078  0156' 0800'              	movf	?__Umul8_16,w
  3079  0157' 0098'              	movwf	___flmul@temp
  3080  0158' 0818'              	movf	___flmul@temp,w
  3081  0159' 0088'              	movwf	??___flmul
  3082  015A' 0819'              	movf	___flmul@temp+1,w
  3083  015B' 0089'              	movwf	??___flmul+1
  3084  015C' 018A'              	clrf	??___flmul+2
  3085  015D' 018B'              	clrf	??___flmul+3
  3086  015E' 0808'              	movf	??___flmul,w
  3087  015F' 078F'              	addwf	___flmul@grs,f
  3088  0160' 0809'              	movf	??___flmul+1,w
  3089  0161' 1103               	clrz
  3090  0162' 1803               	skipnc
  3091  0163' 3E01               	addlw	1
  3092  0164' 1D03               	btfss	3,2
  3093  0165' 0790'              	addwf	___flmul@grs+1,f
  3094  0166' 080A'              	movf	??___flmul+2,w
  3095  0167' 1103               	clrz
  3096  0168' 1803               	skipnc
  3097  0169' 3E01               	addlw	1
  3098  016A' 1D03               	btfss	3,2
  3099  016B' 0791'              	addwf	___flmul@grs+2,f
  3100  016C' 080B'              	movf	??___flmul+3,w
  3101  016D' 1103               	clrz
  3102  016E' 1803               	skipnc
  3103  016F' 3E01               	addlw	1
  3104  0170' 1D03               	btfss	3,2
  3105  0171' 0792'              	addwf	___flmul@grs+3,f
  3106  0172' 0801'              	movf	___flmul@b+1,w
  3107  0173' 0088'              	movwf	??___flmul
  3108  0174' 0808'              	movf	??___flmul,w
  3109  0175' 0080'              	movwf	__Umul8_16@multiplicand
  3110  0176' 0806'              	movf	___flmul@a+2,w
  3111  0177' 2000'              	fcall	__Umul8_16
  3112  0178' 0801'              	movf	?__Umul8_16+1,w
  3113  0179' 0099'              	movwf	___flmul@temp+1
  3114  017A' 0800'              	movf	?__Umul8_16,w
  3115  017B' 0098'              	movwf	___flmul@temp
  3116  017C' 0818'              	movf	___flmul@temp,w
  3117  017D' 0088'              	movwf	??___flmul
  3118  017E' 0819'              	movf	___flmul@temp+1,w
  3119  017F' 0089'              	movwf	??___flmul+1
  3120  0180' 018A'              	clrf	??___flmul+2
  3121  0181' 018B'              	clrf	??___flmul+3
  3122  0182' 0808'              	movf	??___flmul,w
  3123  0183' 0794'              	addwf	___flmul@prod,f
  3124  0184' 0809'              	movf	??___flmul+1,w
  3125  0185' 1103               	clrz
  3126  0186' 1803               	skipnc
  3127  0187' 3E01               	addlw	1
  3128  0188' 1D03               	btfss	3,2
  3129  0189' 0795'              	addwf	___flmul@prod+1,f
  3130  018A' 080A'              	movf	??___flmul+2,w
  3131  018B' 1103               	clrz
  3132  018C' 1803               	skipnc
  3133  018D' 3E01               	addlw	1
  3134  018E' 1D03               	btfss	3,2
  3135  018F' 0796'              	addwf	___flmul@prod+2,f
  3136  0190' 080B'              	movf	??___flmul+3,w
  3137  0191' 1103               	clrz
  3138  0192' 1803               	skipnc
  3139  0193' 3E01               	addlw	1
  3140  0194' 1D03               	btfss	3,2
  3141  0195' 0797'              	addwf	___flmul@prod+3,f
  3142  0196' 0802'              	movf	___flmul@b+2,w
  3143  0197' 0088'              	movwf	??___flmul
  3144  0198' 0808'              	movf	??___flmul,w
  3145  0199' 0080'              	movwf	__Umul8_16@multiplicand
  3146  019A' 0805'              	movf	___flmul@a+1,w
  3147  019B' 2000'              	fcall	__Umul8_16
  3148  019C' 0801'              	movf	?__Umul8_16+1,w
  3149  019D' 0099'              	movwf	___flmul@temp+1
  3150  019E' 0800'              	movf	?__Umul8_16,w
  3151  019F' 0098'              	movwf	___flmul@temp
  3152  01A0' 0818'              	movf	___flmul@temp,w
  3153  01A1' 0088'              	movwf	??___flmul
  3154  01A2' 0819'              	movf	___flmul@temp+1,w
  3155  01A3' 0089'              	movwf	??___flmul+1
  3156  01A4' 018A'              	clrf	??___flmul+2
  3157  01A5' 018B'              	clrf	??___flmul+3
  3158  01A6' 0808'              	movf	??___flmul,w
  3159  01A7' 0794'              	addwf	___flmul@prod,f
  3160  01A8' 0809'              	movf	??___flmul+1,w
  3161  01A9' 1103               	clrz
  3162  01AA' 1803               	skipnc
  3163  01AB' 3E01               	addlw	1
  3164  01AC' 1D03               	btfss	3,2
  3165  01AD' 0795'              	addwf	___flmul@prod+1,f
  3166  01AE' 080A'              	movf	??___flmul+2,w
  3167  01AF' 1103               	clrz
  3168  01B0' 1803               	skipnc
  3169  01B1' 3E01               	addlw	1
  3170  01B2' 1D03               	btfss	3,2
  3171  01B3' 0796'              	addwf	___flmul@prod+2,f
  3172  01B4' 080B'              	movf	??___flmul+3,w
  3173  01B5' 1103               	clrz
  3174  01B6' 1803               	skipnc
  3175  01B7' 3E01               	addlw	1
  3176  01B8' 1D03               	btfss	3,2
  3177  01B9' 0797'              	addwf	___flmul@prod+3,f
  3178  01BA' 0802'              	movf	___flmul@b+2,w
  3179  01BB' 0088'              	movwf	??___flmul
  3180  01BC' 0808'              	movf	??___flmul,w
  3181  01BD' 0080'              	movwf	__Umul8_16@multiplicand
  3182  01BE' 0806'              	movf	___flmul@a+2,w
  3183  01BF' 2000'              	fcall	__Umul8_16
  3184  01C0' 0801'              	movf	?__Umul8_16+1,w
  3185  01C1' 0099'              	movwf	___flmul@temp+1
  3186  01C2' 0800'              	movf	?__Umul8_16,w
  3187  01C3' 0098'              	movwf	___flmul@temp
  3188  01C4' 0818'              	movf	___flmul@temp,w
  3189  01C5' 0088'              	movwf	??___flmul
  3190  01C6' 0819'              	movf	___flmul@temp+1,w
  3191  01C7' 0089'              	movwf	??___flmul+1
  3192  01C8' 018A'              	clrf	??___flmul+2
  3193  01C9' 018B'              	clrf	??___flmul+3
  3194  01CA' 3008               	movlw	8
  3195  01CB'                    u225_25:
  3196  01CB' 1003               	clrc
  3197  01CC' 0D88'              	rlf	??___flmul,f
  3198  01CD' 0D89'              	rlf	??___flmul+1,f
  3199  01CE' 0D8A'              	rlf	??___flmul+2,f
  3200  01CF' 0D8B'              	rlf	??___flmul+3,f
  3201  01D0' 3EFF               	addlw	-1
  3202  01D1' 1D03               	skipz
  3203  01D2' 29CB'              	goto	u225_25
  3204  01D3' 0808'              	movf	??___flmul,w
  3205  01D4' 0794'              	addwf	___flmul@prod,f
  3206  01D5' 0809'              	movf	??___flmul+1,w
  3207  01D6' 1103               	clrz
  3208  01D7' 1803               	skipnc
  3209  01D8' 3E01               	addlw	1
  3210  01D9' 1D03               	btfss	3,2
  3211  01DA' 0795'              	addwf	___flmul@prod+1,f
  3212  01DB' 080A'              	movf	??___flmul+2,w
  3213  01DC' 1103               	clrz
  3214  01DD' 1803               	skipnc
  3215  01DE' 3E01               	addlw	1
  3216  01DF' 1D03               	btfss	3,2
  3217  01E0' 0796'              	addwf	___flmul@prod+2,f
  3218  01E1' 080B'              	movf	??___flmul+3,w
  3219  01E2' 1103               	clrz
  3220  01E3' 1803               	skipnc
  3221  01E4' 3E01               	addlw	1
  3222  01E5' 1D03               	btfss	3,2
  3223  01E6' 0797'              	addwf	___flmul@prod+3,f
  3224  01E7' 0812'              	movf	___flmul@grs+3,w
  3225  01E8' 0088'              	movwf	??___flmul
  3226  01E9' 0189'              	clrf	??___flmul+1
  3227  01EA' 018A'              	clrf	??___flmul+2
  3228  01EB' 018B'              	clrf	??___flmul+3
  3229  01EC' 0808'              	movf	??___flmul,w
  3230  01ED' 0794'              	addwf	___flmul@prod,f
  3231  01EE' 0809'              	movf	??___flmul+1,w
  3232  01EF' 1103               	clrz
  3233  01F0' 1803               	skipnc
  3234  01F1' 3E01               	addlw	1
  3235  01F2' 1D03               	btfss	3,2
  3236  01F3' 0795'              	addwf	___flmul@prod+1,f
  3237  01F4' 080A'              	movf	??___flmul+2,w
  3238  01F5' 1103               	clrz
  3239  01F6' 1803               	skipnc
  3240  01F7' 3E01               	addlw	1
  3241  01F8' 1D03               	btfss	3,2
  3242  01F9' 0796'              	addwf	___flmul@prod+2,f
  3243  01FA' 080B'              	movf	??___flmul+3,w
  3244  01FB' 1103               	clrz
  3245  01FC' 1803               	skipnc
  3246  01FD' 3E01               	addlw	1
  3247  01FE' 1D03               	btfss	3,2
  3248  01FF' 0797'              	addwf	___flmul@prod+3,f
  3249  0200' 3008               	movlw	8
  3250  0201' 0088'              	movwf	??___flmul
  3251  0202'                    u228_25:
  3252  0202' 1003               	clrc
  3253  0203' 0D8F'              	rlf	___flmul@grs,f
  3254  0204' 0D90'              	rlf	___flmul@grs+1,f
  3255  0205' 0D91'              	rlf	___flmul@grs+2,f
  3256  0206' 0D92'              	rlf	___flmul@grs+3,f
  3257  0207' 0B88'              	decfsz	??___flmul,f
  3258  0208' 2A02'              	goto	u228_25
  3259  0209' 0813'              	movf	___flmul@bexp,w
  3260  020A' 070E'              	addwf	___flmul@aexp,w
  3261  020B' 0088'              	movwf	??___flmul
  3262  020C' 0189'              	clrf	??___flmul+1
  3263  020D' 0D89'              	rlf	??___flmul+1,f
  3264  020E' 0808'              	movf	??___flmul,w
  3265  020F' 3E82               	addlw	130
  3266  0210' 0098'              	movwf	___flmul@temp
  3267  0211' 0809'              	movf	??___flmul+1,w
  3268  0212' 1803               	skipnc
  3269  0213' 3E01               	addlw	1
  3270  0214' 3EFF               	addlw	255
  3271  0215' 0099'              	movwf	___flmul@temp+1
  3272  0216'                    i1l1984:
  3273  0216' 1B96'              	btfsc	___flmul@prod+2,7
  3274  0217' 2A33'              	goto	i1l1986
  3275  0218' 3001               	movlw	1
  3276  0219' 0088'              	movwf	??___flmul
  3277  021A'                    u229_25:
  3278  021A' 1003               	clrc
  3279  021B' 0D94'              	rlf	___flmul@prod,f
  3280  021C' 0D95'              	rlf	___flmul@prod+1,f
  3281  021D' 0D96'              	rlf	___flmul@prod+2,f
  3282  021E' 0D97'              	rlf	___flmul@prod+3,f
  3283  021F' 0B88'              	decfsz	??___flmul,f
  3284  0220' 2A1A'              	goto	u229_25
  3285  0221' 1B92'              	btfsc	___flmul@grs+3,7
  3286  0222' 1414'              	bsf	___flmul@prod,0
  3287  0223' 3001               	movlw	1
  3288  0224' 0088'              	movwf	??___flmul
  3289  0225'                    u231_25:
  3290  0225' 1003               	clrc
  3291  0226' 0D8F'              	rlf	___flmul@grs,f
  3292  0227' 0D90'              	rlf	___flmul@grs+1,f
  3293  0228' 0D91'              	rlf	___flmul@grs+2,f
  3294  0229' 0D92'              	rlf	___flmul@grs+3,f
  3295  022A' 0B88'              	decfsz	??___flmul,f
  3296  022B' 2A25'              	goto	u231_25
  3297  022C' 30FF               	movlw	255
  3298  022D' 0798'              	addwf	___flmul@temp,f
  3299  022E' 1803               	skipnc
  3300  022F' 0A99'              	incf	___flmul@temp+1,f
  3301  0230' 30FF               	movlw	255
  3302  0231' 0799'              	addwf	___flmul@temp+1,f
  3303  0232' 2A16'              	goto	i1l1984
  3304  0233'                    i1l1986:
  3305  0233' 018E'              	clrf	___flmul@aexp
  3306  0234' 1F92'              	btfss	___flmul@grs+3,7
  3307  0235' 2A4C'              	goto	i1l1996
  3308  0236' 30FF               	movlw	255
  3309  0237' 050F'              	andwf	___flmul@grs,w
  3310  0238' 0088'              	movwf	??___flmul
  3311  0239' 30FF               	movlw	255
  3312  023A' 0510'              	andwf	___flmul@grs+1,w
  3313  023B' 0089'              	movwf	??___flmul+1
  3314  023C' 30FF               	movlw	255
  3315  023D' 0511'              	andwf	___flmul@grs+2,w
  3316  023E' 008A'              	movwf	??___flmul+2
  3317  023F' 307F               	movlw	127
  3318  0240' 0512'              	andwf	___flmul@grs+3,w
  3319  0241' 008B'              	movwf	??___flmul+3
  3320  0242' 080B'              	movf	??___flmul+3,w
  3321  0243' 040A'              	iorwf	??___flmul+2,w
  3322  0244' 0409'              	iorwf	??___flmul+1,w
  3323  0245' 0408'              	iorwf	??___flmul,w
  3324  0246' 1903               	skipnz
  3325  0247' 1814'              	btfsc	___flmul@prod,0
  3326  0248' 2A4A'              	goto	i1l1992
  3327  0249' 2A4C'              	goto	i1l1996
  3328  024A'                    i1l1992:
  3329  024A' 018E'              	clrf	___flmul@aexp
  3330  024B' 0A8E'              	incf	___flmul@aexp,f
  3331  024C'                    i1l1996:
  3332  024C' 080E'              	movf	___flmul@aexp,w
  3333  024D' 1903               	btfsc	3,2
  3334  024E' 2A7E'              	goto	i1l2006
  3335  024F' 3001               	movlw	1
  3336  0250' 0794'              	addwf	___flmul@prod,f
  3337  0251' 3000               	movlw	0
  3338  0252' 1803               	skipnc
  3339  0253' 3001               	movlw	1
  3340  0254' 0795'              	addwf	___flmul@prod+1,f
  3341  0255' 3000               	movlw	0
  3342  0256' 1803               	skipnc
  3343  0257' 3001               	movlw	1
  3344  0258' 0796'              	addwf	___flmul@prod+2,f
  3345  0259' 3000               	movlw	0
  3346  025A' 1803               	skipnc
  3347  025B' 3001               	movlw	1
  3348  025C' 0797'              	addwf	___flmul@prod+3,f
  3349  025D' 1C17'              	btfss	___flmul@prod+3,0
  3350  025E' 2A7E'              	goto	i1l2006
  3351  025F' 0814'              	movf	___flmul@prod,w
  3352  0260' 0088'              	movwf	??___flmul
  3353  0261' 0815'              	movf	___flmul@prod+1,w
  3354  0262' 0089'              	movwf	??___flmul+1
  3355  0263' 0816'              	movf	___flmul@prod+2,w
  3356  0264' 008A'              	movwf	??___flmul+2
  3357  0265' 0817'              	movf	___flmul@prod+3,w
  3358  0266' 008B'              	movwf	??___flmul+3
  3359  0267' 3001               	movlw	1
  3360  0268' 008C'              	movwf	??___flmul+4
  3361  0269'                    u238_25:
  3362  0269' 0D0B'              	rlf	??___flmul+3,w
  3363  026A' 0C8B'              	rrf	??___flmul+3,f
  3364  026B' 0C8A'              	rrf	??___flmul+2,f
  3365  026C' 0C89'              	rrf	??___flmul+1,f
  3366  026D' 0C88'              	rrf	??___flmul,f
  3367  026E' 0B8C'              	decfsz	??___flmul+4,f
  3368  026F' 2A69'              	goto	u238_25
  3369  0270' 080B'              	movf	??___flmul+3,w
  3370  0271' 0097'              	movwf	___flmul@prod+3
  3371  0272' 080A'              	movf	??___flmul+2,w
  3372  0273' 0096'              	movwf	___flmul@prod+2
  3373  0274' 0809'              	movf	??___flmul+1,w
  3374  0275' 0095'              	movwf	___flmul@prod+1
  3375  0276' 0808'              	movf	??___flmul,w
  3376  0277' 0094'              	movwf	___flmul@prod
  3377  0278' 3001               	movlw	1
  3378  0279' 0798'              	addwf	___flmul@temp,f
  3379  027A' 1803               	skipnc
  3380  027B' 0A99'              	incf	___flmul@temp+1,f
  3381  027C' 3000               	movlw	0
  3382  027D' 0799'              	addwf	___flmul@temp+1,f
  3383  027E'                    i1l2006:
  3384  027E' 0819'              	movf	___flmul@temp+1,w
  3385  027F' 3A80               	xorlw	128
  3386  0280' 00FF               	movwf	127
  3387  0281' 3080               	movlw	128
  3388  0282' 027F               	subwf	127,w
  3389  0283' 1D03               	skipz
  3390  0284' 2A87'              	goto	u239_25
  3391  0285' 30FF               	movlw	255
  3392  0286' 0218'              	subwf	___flmul@temp,w
  3393  0287'                    u239_25:
  3394  0287' 1C03               	skipc
  3395  0288' 2A94'              	goto	i1l2010
  3396  0289' 307F               	movlw	127
  3397  028A' 1283               	bcf	3,5	;RP0=0, select bank0
  3398  028B' 1303               	bcf	3,6	;RP1=0, select bank0
  3399  028C' 0097'              	movwf	___flmul@prod+3
  3400  028D' 3080               	movlw	128
  3401  028E' 0096'              	movwf	___flmul@prod+2
  3402  028F' 3000               	movlw	0
  3403  0290' 0095'              	movwf	___flmul@prod+1
  3404  0291' 3000               	movlw	0
  3405  0292' 0094'              	movwf	___flmul@prod
  3406  0293' 2AC4'              	goto	i1l657
  3407  0294'                    i1l2010:
  3408  0294' 1283               	bcf	3,5	;RP0=0, select bank0
  3409  0295' 1303               	bcf	3,6	;RP1=0, select bank0
  3410  0296' 0819'              	movf	___flmul@temp+1,w
  3411  0297' 3A80               	xorlw	128
  3412  0298' 00FF               	movwf	127
  3413  0299' 3080               	movlw	128
  3414  029A' 027F               	subwf	127,w
  3415  029B' 1D03               	skipz
  3416  029C' 2A9F'              	goto	u240_25
  3417  029D' 3001               	movlw	1
  3418  029E' 0218'              	subwf	___flmul@temp,w
  3419  029F'                    u240_25:
  3420  029F' 1803               	skipnc
  3421  02A0' 2AAD'              	goto	i1l2016
  3422  02A1' 3000               	movlw	0
  3423  02A2' 1283               	bcf	3,5	;RP0=0, select bank0
  3424  02A3' 1303               	bcf	3,6	;RP1=0, select bank0
  3425  02A4' 0097'              	movwf	___flmul@prod+3
  3426  02A5' 3000               	movlw	0
  3427  02A6' 0096'              	movwf	___flmul@prod+2
  3428  02A7' 3000               	movlw	0
  3429  02A8' 0095'              	movwf	___flmul@prod+1
  3430  02A9' 3000               	movlw	0
  3431  02AA' 0094'              	movwf	___flmul@prod
  3432  02AB' 018D'              	clrf	___flmul@sign
  3433  02AC' 2AC4'              	goto	i1l657
  3434  02AD'                    i1l2016:
  3435  02AD' 1283               	bcf	3,5	;RP0=0, select bank0
  3436  02AE' 1303               	bcf	3,6	;RP1=0, select bank0
  3437  02AF' 0818'              	movf	___flmul@temp,w
  3438  02B0' 0088'              	movwf	??___flmul
  3439  02B1' 0808'              	movf	??___flmul,w
  3440  02B2' 0093'              	movwf	___flmul@bexp
  3441  02B3' 30FF               	movlw	255
  3442  02B4' 0594'              	andwf	___flmul@prod,f
  3443  02B5' 30FF               	movlw	255
  3444  02B6' 0595'              	andwf	___flmul@prod+1,f
  3445  02B7' 307F               	movlw	127
  3446  02B8' 0596'              	andwf	___flmul@prod+2,f
  3447  02B9' 3000               	movlw	0
  3448  02BA' 0597'              	andwf	___flmul@prod+3,f
  3449  02BB' 1813'              	btfsc	___flmul@bexp,0
  3450  02BC' 1796'              	bsf	___flmul@prod+2,7
  3451  02BD' 0813'              	movf	___flmul@bexp,w
  3452  02BE' 0088'              	movwf	??___flmul
  3453  02BF' 1003               	clrc
  3454  02C0' 0C08'              	rrf	??___flmul,w
  3455  02C1' 0089'              	movwf	??___flmul+1
  3456  02C2' 0809'              	movf	??___flmul+1,w
  3457  02C3' 0097'              	movwf	___flmul@prod+3
  3458  02C4'                    i1l657:
  3459  02C4' 080D'              	movf	___flmul@sign,w
  3460  02C5' 0088'              	movwf	??___flmul
  3461  02C6' 0808'              	movf	??___flmul,w
  3462  02C7' 0497'              	iorwf	___flmul@prod+3,f
  3463  02C8' 0817'              	movf	___flmul@prod+3,w
  3464  02C9' 0083'              	movwf	?___flmul+3
  3465  02CA' 0816'              	movf	___flmul@prod+2,w
  3466  02CB' 0082'              	movwf	?___flmul+2
  3467  02CC' 0815'              	movf	___flmul@prod+1,w
  3468  02CD' 0081'              	movwf	?___flmul+1
  3469  02CE' 0814'              	movf	___flmul@prod,w
  3470  02CF' 0080'              	movwf	?___flmul
  3471  02D0' 0008               	return
  3472  02D1'                    __end_of___flmul:
  3473                           
  3474                           	psect	text16
  3475  0000'                    __ptext16:	
  3476 ;; *************** function __Umul8_16 *****************
  3477 ;; Defined at:
  3478 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  multiplier      1    wreg     unsigned char 
  3481 ;;  multiplicand    1    0[COMMON] unsigned char 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  multiplier      1    8[COMMON] unsigned char 
  3484 ;;  word_mpld       2    6[COMMON] unsigned int 
  3485 ;;  product         2    4[COMMON] unsigned int 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  2    0[COMMON] unsigned int 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0
  3490 ;; Tracked objects:
  3491 ;;		On entry : 300/0
  3492 ;;		On exit  : 300/0
  3493 ;;		Unchanged: 300/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3495 ;;      Params:         2       0       0       0
  3496 ;;      Locals:         5       0       0       0
  3497 ;;      Temps:          2       0       0       0
  3498 ;;      Totals:         9       0       0       0
  3499 ;;Total ram usage:        9 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		___flmul
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508  0000'                    __Umul8_16:	
  3509                           ;psect for function __Umul8_16
  3510                           
  3511                           
  3512                           ;incstack = 0
  3513                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3514                           ;__Umul8_16@multiplier stored from wreg
  3515  0000' 0088'              	movwf	__Umul8_16@multiplier
  3516  0001' 0184'              	clrf	__Umul8_16@product
  3517  0002' 0185'              	clrf	__Umul8_16@product+1
  3518  0003' 0800'              	movf	__Umul8_16@multiplicand,w
  3519  0004' 0082'              	movwf	??__Umul8_16
  3520  0005' 0183'              	clrf	??__Umul8_16+1
  3521  0006' 0802'              	movf	??__Umul8_16,w
  3522  0007' 0086'              	movwf	__Umul8_16@word_mpld
  3523  0008' 0803'              	movf	??__Umul8_16+1,w
  3524  0009' 0087'              	movwf	__Umul8_16@word_mpld+1
  3525  000A'                    i1l1618:
  3526  000A' 1C08'              	btfss	__Umul8_16@multiplier,0
  3527  000B' 2812'              	goto	i1l664
  3528  000C' 0806'              	movf	__Umul8_16@word_mpld,w
  3529  000D' 0784'              	addwf	__Umul8_16@product,f
  3530  000E' 1803               	skipnc
  3531  000F' 0A85'              	incf	__Umul8_16@product+1,f
  3532  0010' 0807'              	movf	__Umul8_16@word_mpld+1,w
  3533  0011' 0785'              	addwf	__Umul8_16@product+1,f
  3534  0012'                    i1l664:
  3535  0012' 3001               	movlw	1
  3536  0013'                    u161_25:
  3537  0013' 1003               	clrc
  3538  0014' 0D86'              	rlf	__Umul8_16@word_mpld,f
  3539  0015' 0D87'              	rlf	__Umul8_16@word_mpld+1,f
  3540  0016' 3EFF               	addlw	-1
  3541  0017' 1D03               	skipz
  3542  0018' 2813'              	goto	u161_25
  3543  0019' 1003               	clrc
  3544  001A' 0C88'              	rrf	__Umul8_16@multiplier,f
  3545  001B' 0808'              	movf	__Umul8_16@multiplier,w
  3546  001C' 1D03               	btfss	3,2
  3547  001D' 280A'              	goto	i1l1618
  3548  001E' 0805'              	movf	__Umul8_16@product+1,w
  3549  001F' 0081'              	movwf	?__Umul8_16+1
  3550  0020' 0804'              	movf	__Umul8_16@product,w
  3551  0021' 0080'              	movwf	?__Umul8_16
  3552  0022' 0008               	return
  3553  0023'                    __end_of__Umul8_16:
  3554                           
  3555                           	psect	text17
  3556  0000'                    __ptext17:	
  3557 ;; *************** function ___fldiv *****************
  3558 ;; Defined at:
  3559 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcdiv.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  a               4    0[COMMON] unsigned int 
  3562 ;;  b               4    4[COMMON] unsigned int 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  grs             4    7[BANK0 ] unsigned long 
  3565 ;;  rem             4    0[BANK0 ] unsigned long 
  3566 ;;  new_exp         2    5[BANK0 ] int 
  3567 ;;  aexp            1   12[BANK0 ] unsigned char 
  3568 ;;  bexp            1   11[BANK0 ] unsigned char 
  3569 ;;  sign            1    4[BANK0 ] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  4    0[COMMON] unsigned char 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0, btemp+1
  3574 ;; Tracked objects:
  3575 ;;		On entry : 300/0
  3576 ;;		On exit  : 300/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3579 ;;      Params:         8       0       0       0
  3580 ;;      Locals:         0      13       0       0
  3581 ;;      Temps:          5       0       0       0
  3582 ;;      Totals:        13      13       0       0
  3583 ;;Total ram usage:       26 bytes
  3584 ;; Hardware stack levels used: 1
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_TMR0_ISR
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592  0000'                    ___fldiv:	
  3593                           ;psect for function ___fldiv
  3594                           
  3595                           
  3596                           ;incstack = 0
  3597                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3598  0000' 0807'              	movf	___fldiv@b+3,w
  3599  0001' 3980               	andlw	128
  3600  0002' 0088'              	movwf	??___fldiv
  3601  0003' 0808'              	movf	??___fldiv,w
  3602  0004' 0084'              	movwf	___fldiv@sign
  3603  0005' 0807'              	movf	___fldiv@b+3,w
  3604  0006' 0088'              	movwf	??___fldiv
  3605  0007' 0708'              	addwf	??___fldiv,w
  3606  0008' 0089'              	movwf	??___fldiv+1
  3607  0009' 0809'              	movf	??___fldiv+1,w
  3608  000A' 008B'              	movwf	___fldiv@bexp
  3609  000B' 1B86'              	btfsc	___fldiv@b+2,7
  3610  000C' 140B'              	bsf	___fldiv@bexp,0
  3611  000D' 080B'              	movf	___fldiv@bexp,w
  3612  000E' 1903               	btfsc	3,2
  3613  000F' 281E'              	goto	i1l1764
  3614  0010' 0A0B'              	incf	___fldiv@bexp,w
  3615  0011' 1D03               	btfss	3,2
  3616  0012' 281B'              	goto	i1l1760
  3617  0013' 3000               	movlw	0
  3618  0014' 0087'              	movwf	___fldiv@b+3
  3619  0015' 3000               	movlw	0
  3620  0016' 0086'              	movwf	___fldiv@b+2
  3621  0017' 3000               	movlw	0
  3622  0018' 0085'              	movwf	___fldiv@b+1
  3623  0019' 3000               	movlw	0
  3624  001A' 0084'              	movwf	___fldiv@b
  3625  001B'                    i1l1760:
  3626  001B' 1786'              	bsf	___fldiv@b+2,7
  3627  001C' 0187'              	clrf	___fldiv@b+3
  3628  001D' 2826'              	goto	i1l1766
  3629  001E'                    i1l1764:
  3630  001E' 3000               	movlw	0
  3631  001F' 0087'              	movwf	___fldiv@b+3
  3632  0020' 3000               	movlw	0
  3633  0021' 0086'              	movwf	___fldiv@b+2
  3634  0022' 3000               	movlw	0
  3635  0023' 0085'              	movwf	___fldiv@b+1
  3636  0024' 3000               	movlw	0
  3637  0025' 0084'              	movwf	___fldiv@b
  3638  0026'                    i1l1766:
  3639  0026' 0803'              	movf	___fldiv@a+3,w
  3640  0027' 3980               	andlw	128
  3641  0028' 0088'              	movwf	??___fldiv
  3642  0029' 0808'              	movf	??___fldiv,w
  3643  002A' 0684'              	xorwf	___fldiv@sign,f
  3644  002B' 0803'              	movf	___fldiv@a+3,w
  3645  002C' 0088'              	movwf	??___fldiv
  3646  002D' 0708'              	addwf	??___fldiv,w
  3647  002E' 0089'              	movwf	??___fldiv+1
  3648  002F' 0809'              	movf	??___fldiv+1,w
  3649  0030' 008C'              	movwf	___fldiv@aexp
  3650  0031' 1B82'              	btfsc	___fldiv@a+2,7
  3651  0032' 140C'              	bsf	___fldiv@aexp,0
  3652  0033' 080C'              	movf	___fldiv@aexp,w
  3653  0034' 1903               	btfsc	3,2
  3654  0035' 2844'              	goto	i1l1784
  3655  0036' 0A0C'              	incf	___fldiv@aexp,w
  3656  0037' 1D03               	btfss	3,2
  3657  0038' 2841'              	goto	i1l1780
  3658  0039' 3000               	movlw	0
  3659  003A' 0083'              	movwf	___fldiv@a+3
  3660  003B' 3000               	movlw	0
  3661  003C' 0082'              	movwf	___fldiv@a+2
  3662  003D' 3000               	movlw	0
  3663  003E' 0081'              	movwf	___fldiv@a+1
  3664  003F' 3000               	movlw	0
  3665  0040' 0080'              	movwf	___fldiv@a
  3666  0041'                    i1l1780:
  3667  0041' 1782'              	bsf	___fldiv@a+2,7
  3668  0042' 0183'              	clrf	___fldiv@a+3
  3669  0043' 284C'              	goto	i1l605
  3670  0044'                    i1l1784:
  3671  0044' 3000               	movlw	0
  3672  0045' 0083'              	movwf	___fldiv@a+3
  3673  0046' 3000               	movlw	0
  3674  0047' 0082'              	movwf	___fldiv@a+2
  3675  0048' 3000               	movlw	0
  3676  0049' 0081'              	movwf	___fldiv@a+1
  3677  004A' 3000               	movlw	0
  3678  004B' 0080'              	movwf	___fldiv@a
  3679  004C'                    i1l605:
  3680  004C' 0803'              	movf	___fldiv@a+3,w
  3681  004D' 0402'              	iorwf	___fldiv@a+2,w
  3682  004E' 0401'              	iorwf	___fldiv@a+1,w
  3683  004F' 0400'              	iorwf	___fldiv@a,w
  3684  0050' 1D03               	skipz
  3685  0051' 286B'              	goto	i1l1794
  3686  0052' 3000               	movlw	0
  3687  0053' 0087'              	movwf	___fldiv@b+3
  3688  0054' 3000               	movlw	0
  3689  0055' 0086'              	movwf	___fldiv@b+2
  3690  0056' 3000               	movlw	0
  3691  0057' 0085'              	movwf	___fldiv@b+1
  3692  0058' 3000               	movlw	0
  3693  0059' 0084'              	movwf	___fldiv@b
  3694  005A' 3080               	movlw	128
  3695  005B' 0486'              	iorwf	___fldiv@b+2,f
  3696  005C' 307F               	movlw	127
  3697  005D' 0487'              	iorwf	___fldiv@b+3,f
  3698  005E'                    L3:
  3699  005E' 0804'              	movf	___fldiv@sign,w
  3700  005F' 0088'              	movwf	??___fldiv
  3701  0060' 0808'              	movf	??___fldiv,w
  3702  0061' 0487'              	iorwf	___fldiv@b+3,f
  3703  0062' 0807'              	movf	___fldiv@b+3,w
  3704  0063' 0083'              	movwf	?___fldiv+3
  3705  0064' 0806'              	movf	___fldiv@b+2,w
  3706  0065' 0082'              	movwf	?___fldiv+2
  3707  0066' 0805'              	movf	___fldiv@b+1,w
  3708  0067' 0081'              	movwf	?___fldiv+1
  3709  0068' 0804'              	movf	___fldiv@b,w
  3710  0069' 0080'              	movwf	?___fldiv
  3711  006A' 0008               	return
  3712  006B'                    i1l1794:
  3713  006B' 080B'              	movf	___fldiv@bexp,w
  3714  006C' 1D03               	btfss	3,2
  3715  006D' 2877'              	goto	i1l1800
  3716  006E' 3000               	movlw	0
  3717  006F' 0083'              	movwf	?___fldiv+3
  3718  0070' 3000               	movlw	0
  3719  0071' 0082'              	movwf	?___fldiv+2
  3720  0072' 3000               	movlw	0
  3721  0073' 0081'              	movwf	?___fldiv+1
  3722  0074' 3000               	movlw	0
  3723  0075' 0080'              	movwf	?___fldiv
  3724  0076' 0008               	return
  3725  0077'                    i1l1800:
  3726  0077' 080B'              	movf	___fldiv@bexp,w
  3727  0078' 0088'              	movwf	??___fldiv
  3728  0079' 0189'              	clrf	??___fldiv+1
  3729  007A' 0809'              	movf	??___fldiv+1,w
  3730  007B' 008B'              	movwf	??___fldiv+3
  3731  007C' 080C'              	movf	___fldiv@aexp,w
  3732  007D' 0208'              	subwf	??___fldiv,w
  3733  007E' 008A'              	movwf	??___fldiv+2
  3734  007F' 1C03               	skipc
  3735  0080' 038B'              	decf	??___fldiv+3,f
  3736  0081' 080A'              	movf	??___fldiv+2,w
  3737  0082' 3E7F               	addlw	127
  3738  0083' 0085'              	movwf	___fldiv@new_exp
  3739  0084' 080B'              	movf	??___fldiv+3,w
  3740  0085' 1803               	skipnc
  3741  0086' 3E01               	addlw	1
  3742  0087' 3E00               	addlw	0
  3743  0088' 0086'              	movwf	___fldiv@new_exp+1
  3744  0089' 0807'              	movf	___fldiv@b+3,w
  3745  008A' 0083'              	movwf	___fldiv@rem+3
  3746  008B' 0806'              	movf	___fldiv@b+2,w
  3747  008C' 0082'              	movwf	___fldiv@rem+2
  3748  008D' 0805'              	movf	___fldiv@b+1,w
  3749  008E' 0081'              	movwf	___fldiv@rem+1
  3750  008F' 0804'              	movf	___fldiv@b,w
  3751  0090' 0080'              	movwf	___fldiv@rem
  3752  0091' 3000               	movlw	0
  3753  0092' 0087'              	movwf	___fldiv@b+3
  3754  0093' 3000               	movlw	0
  3755  0094' 0086'              	movwf	___fldiv@b+2
  3756  0095' 3000               	movlw	0
  3757  0096' 0085'              	movwf	___fldiv@b+1
  3758  0097' 3000               	movlw	0
  3759  0098' 0084'              	movwf	___fldiv@b
  3760  0099' 3000               	movlw	0
  3761  009A' 008A'              	movwf	___fldiv@grs+3
  3762  009B' 3000               	movlw	0
  3763  009C' 0089'              	movwf	___fldiv@grs+2
  3764  009D' 3000               	movlw	0
  3765  009E' 0088'              	movwf	___fldiv@grs+1
  3766  009F' 3000               	movlw	0
  3767  00A0' 0087'              	movwf	___fldiv@grs
  3768  00A1' 018C'              	clrf	___fldiv@aexp
  3769  00A2'                    i1l1828:
  3770  00A2' 301A               	movlw	26
  3771  00A3' 020C'              	subwf	___fldiv@aexp,w
  3772  00A4' 1803               	btfsc	3,0
  3773  00A5' 28F0'              	goto	i1l1830
  3774  00A6' 080C'              	movf	___fldiv@aexp,w
  3775  00A7' 1903               	btfsc	3,2
  3776  00A8' 28C6'              	goto	i1l1820
  3777  00A9' 3001               	movlw	1
  3778  00AA' 0088'              	movwf	??___fldiv
  3779  00AB'                    u185_25:
  3780  00AB' 1003               	clrc
  3781  00AC' 0D80'              	rlf	___fldiv@rem,f
  3782  00AD' 0D81'              	rlf	___fldiv@rem+1,f
  3783  00AE' 0D82'              	rlf	___fldiv@rem+2,f
  3784  00AF' 0D83'              	rlf	___fldiv@rem+3,f
  3785  00B0' 0B88'              	decfsz	??___fldiv,f
  3786  00B1' 28AB'              	goto	u185_25
  3787  00B2' 3001               	movlw	1
  3788  00B3' 0088'              	movwf	??___fldiv
  3789  00B4'                    u186_25:
  3790  00B4' 1003               	clrc
  3791  00B5' 0D84'              	rlf	___fldiv@b,f
  3792  00B6' 0D85'              	rlf	___fldiv@b+1,f
  3793  00B7' 0D86'              	rlf	___fldiv@b+2,f
  3794  00B8' 0D87'              	rlf	___fldiv@b+3,f
  3795  00B9' 0B88'              	decfsz	??___fldiv,f
  3796  00BA' 28B4'              	goto	u186_25
  3797  00BB' 1B8A'              	btfsc	___fldiv@grs+3,7
  3798  00BC' 1404'              	bsf	___fldiv@b,0
  3799  00BD' 3001               	movlw	1
  3800  00BE' 0088'              	movwf	??___fldiv
  3801  00BF'                    u188_25:
  3802  00BF' 1003               	clrc
  3803  00C0' 0D87'              	rlf	___fldiv@grs,f
  3804  00C1' 0D88'              	rlf	___fldiv@grs+1,f
  3805  00C2' 0D89'              	rlf	___fldiv@grs+2,f
  3806  00C3' 0D8A'              	rlf	___fldiv@grs+3,f
  3807  00C4' 0B88'              	decfsz	??___fldiv,f
  3808  00C5' 28BF'              	goto	u188_25
  3809  00C6'                    i1l1820:
  3810  00C6' 0803'              	movf	___fldiv@a+3,w
  3811  00C7' 0203'              	subwf	___fldiv@rem+3,w
  3812  00C8' 1D03               	skipz
  3813  00C9' 28D4'              	goto	u189_25
  3814  00CA' 0802'              	movf	___fldiv@a+2,w
  3815  00CB' 0202'              	subwf	___fldiv@rem+2,w
  3816  00CC' 1D03               	skipz
  3817  00CD' 28D4'              	goto	u189_25
  3818  00CE' 0801'              	movf	___fldiv@a+1,w
  3819  00CF' 0201'              	subwf	___fldiv@rem+1,w
  3820  00D0' 1D03               	skipz
  3821  00D1' 28D4'              	goto	u189_25
  3822  00D2' 0800'              	movf	___fldiv@a,w
  3823  00D3' 0200'              	subwf	___fldiv@rem,w
  3824  00D4'                    u189_25:
  3825  00D4' 1C03               	skipc
  3826  00D5' 28EB'              	goto	i1l1826
  3827  00D6' 170A'              	bsf	___fldiv@grs+3,6
  3828  00D7' 0800'              	movf	___fldiv@a,w
  3829  00D8' 0280'              	subwf	___fldiv@rem,f
  3830  00D9' 0801'              	movf	___fldiv@a+1,w
  3831  00DA' 1C03               	skipc
  3832  00DB' 0F01'              	incfsz	___fldiv@a+1,w
  3833  00DC' 28DE'              	goto	u190_25
  3834  00DD' 28DF'              	goto	u190_26
  3835  00DE'                    u190_25:
  3836  00DE' 0281'              	subwf	___fldiv@rem+1,f
  3837  00DF'                    u190_26:
  3838  00DF' 0802'              	movf	___fldiv@a+2,w
  3839  00E0' 1C03               	skipc
  3840  00E1' 0F02'              	incfsz	___fldiv@a+2,w
  3841  00E2' 28E4'              	goto	u190_27
  3842  00E3' 28E5'              	goto	u190_28
  3843  00E4'                    u190_27:
  3844  00E4' 0282'              	subwf	___fldiv@rem+2,f
  3845  00E5'                    u190_28:
  3846  00E5' 0803'              	movf	___fldiv@a+3,w
  3847  00E6' 1C03               	skipc
  3848  00E7' 0F03'              	incfsz	___fldiv@a+3,w
  3849  00E8' 28EA'              	goto	u190_29
  3850  00E9' 28EB'              	goto	i1l1826
  3851  00EA'                    u190_29:
  3852  00EA' 0283'              	subwf	___fldiv@rem+3,f
  3853  00EB'                    i1l1826:
  3854  00EB' 3001               	movlw	1
  3855  00EC' 0088'              	movwf	??___fldiv
  3856  00ED' 0808'              	movf	??___fldiv,w
  3857  00EE' 078C'              	addwf	___fldiv@aexp,f
  3858  00EF' 28A2'              	goto	i1l1828
  3859  00F0'                    i1l1830:
  3860  00F0' 0803'              	movf	___fldiv@rem+3,w
  3861  00F1' 0402'              	iorwf	___fldiv@rem+2,w
  3862  00F2' 0401'              	iorwf	___fldiv@rem+1,w
  3863  00F3' 0400'              	iorwf	___fldiv@rem,w
  3864  00F4' 1D03               	btfss	3,2
  3865  00F5' 1407'              	bsf	___fldiv@grs,0
  3866  00F6'                    i1l1844:
  3867  00F6' 1B86'              	btfsc	___fldiv@b+2,7
  3868  00F7' 2913'              	goto	i1l1846
  3869  00F8' 3001               	movlw	1
  3870  00F9' 0088'              	movwf	??___fldiv
  3871  00FA'                    u193_25:
  3872  00FA' 1003               	clrc
  3873  00FB' 0D84'              	rlf	___fldiv@b,f
  3874  00FC' 0D85'              	rlf	___fldiv@b+1,f
  3875  00FD' 0D86'              	rlf	___fldiv@b+2,f
  3876  00FE' 0D87'              	rlf	___fldiv@b+3,f
  3877  00FF' 0B88'              	decfsz	??___fldiv,f
  3878  0100' 28FA'              	goto	u193_25
  3879  0101' 1B8A'              	btfsc	___fldiv@grs+3,7
  3880  0102' 1404'              	bsf	___fldiv@b,0
  3881  0103' 3001               	movlw	1
  3882  0104' 0088'              	movwf	??___fldiv
  3883  0105'                    u195_25:
  3884  0105' 1003               	clrc
  3885  0106' 0D87'              	rlf	___fldiv@grs,f
  3886  0107' 0D88'              	rlf	___fldiv@grs+1,f
  3887  0108' 0D89'              	rlf	___fldiv@grs+2,f
  3888  0109' 0D8A'              	rlf	___fldiv@grs+3,f
  3889  010A' 0B88'              	decfsz	??___fldiv,f
  3890  010B' 2905'              	goto	u195_25
  3891  010C' 30FF               	movlw	255
  3892  010D' 0785'              	addwf	___fldiv@new_exp,f
  3893  010E' 1803               	skipnc
  3894  010F' 0A86'              	incf	___fldiv@new_exp+1,f
  3895  0110' 30FF               	movlw	255
  3896  0111' 0786'              	addwf	___fldiv@new_exp+1,f
  3897  0112' 28F6'              	goto	i1l1844
  3898  0113'                    i1l1846:
  3899  0113' 018C'              	clrf	___fldiv@aexp
  3900  0114' 1F8A'              	btfss	___fldiv@grs+3,7
  3901  0115' 292C'              	goto	i1l1856
  3902  0116' 30FF               	movlw	255
  3903  0117' 0507'              	andwf	___fldiv@grs,w
  3904  0118' 0088'              	movwf	??___fldiv
  3905  0119' 30FF               	movlw	255
  3906  011A' 0508'              	andwf	___fldiv@grs+1,w
  3907  011B' 0089'              	movwf	??___fldiv+1
  3908  011C' 30FF               	movlw	255
  3909  011D' 0509'              	andwf	___fldiv@grs+2,w
  3910  011E' 008A'              	movwf	??___fldiv+2
  3911  011F' 307F               	movlw	127
  3912  0120' 050A'              	andwf	___fldiv@grs+3,w
  3913  0121' 008B'              	movwf	??___fldiv+3
  3914  0122' 080B'              	movf	??___fldiv+3,w
  3915  0123' 040A'              	iorwf	??___fldiv+2,w
  3916  0124' 0409'              	iorwf	??___fldiv+1,w
  3917  0125' 0408'              	iorwf	??___fldiv,w
  3918  0126' 1903               	skipnz
  3919  0127' 1804'              	btfsc	___fldiv@b,0
  3920  0128' 292A'              	goto	i1l1852
  3921  0129' 292C'              	goto	i1l1856
  3922  012A'                    i1l1852:
  3923  012A' 018C'              	clrf	___fldiv@aexp
  3924  012B' 0A8C'              	incf	___fldiv@aexp,f
  3925  012C'                    i1l1856:
  3926  012C' 080C'              	movf	___fldiv@aexp,w
  3927  012D' 1903               	btfsc	3,2
  3928  012E' 295E'              	goto	i1l1866
  3929  012F' 3001               	movlw	1
  3930  0130' 0784'              	addwf	___fldiv@b,f
  3931  0131' 3000               	movlw	0
  3932  0132' 1803               	skipnc
  3933  0133' 3001               	movlw	1
  3934  0134' 0785'              	addwf	___fldiv@b+1,f
  3935  0135' 3000               	movlw	0
  3936  0136' 1803               	skipnc
  3937  0137' 3001               	movlw	1
  3938  0138' 0786'              	addwf	___fldiv@b+2,f
  3939  0139' 3000               	movlw	0
  3940  013A' 1803               	skipnc
  3941  013B' 3001               	movlw	1
  3942  013C' 0787'              	addwf	___fldiv@b+3,f
  3943  013D' 1C07'              	btfss	___fldiv@b+3,0
  3944  013E' 295E'              	goto	i1l1866
  3945  013F' 0804'              	movf	___fldiv@b,w
  3946  0140' 0088'              	movwf	??___fldiv
  3947  0141' 0805'              	movf	___fldiv@b+1,w
  3948  0142' 0089'              	movwf	??___fldiv+1
  3949  0143' 0806'              	movf	___fldiv@b+2,w
  3950  0144' 008A'              	movwf	??___fldiv+2
  3951  0145' 0807'              	movf	___fldiv@b+3,w
  3952  0146' 008B'              	movwf	??___fldiv+3
  3953  0147' 3001               	movlw	1
  3954  0148' 008C'              	movwf	??___fldiv+4
  3955  0149'                    u202_25:
  3956  0149' 0D0B'              	rlf	??___fldiv+3,w
  3957  014A' 0C8B'              	rrf	??___fldiv+3,f
  3958  014B' 0C8A'              	rrf	??___fldiv+2,f
  3959  014C' 0C89'              	rrf	??___fldiv+1,f
  3960  014D' 0C88'              	rrf	??___fldiv,f
  3961  014E' 0B8C'              	decfsz	??___fldiv+4,f
  3962  014F' 2949'              	goto	u202_25
  3963  0150' 080B'              	movf	??___fldiv+3,w
  3964  0151' 0087'              	movwf	___fldiv@b+3
  3965  0152' 080A'              	movf	??___fldiv+2,w
  3966  0153' 0086'              	movwf	___fldiv@b+2
  3967  0154' 0809'              	movf	??___fldiv+1,w
  3968  0155' 0085'              	movwf	___fldiv@b+1
  3969  0156' 0808'              	movf	??___fldiv,w
  3970  0157' 0084'              	movwf	___fldiv@b
  3971  0158' 3001               	movlw	1
  3972  0159' 0785'              	addwf	___fldiv@new_exp,f
  3973  015A' 1803               	skipnc
  3974  015B' 0A86'              	incf	___fldiv@new_exp+1,f
  3975  015C' 3000               	movlw	0
  3976  015D' 0786'              	addwf	___fldiv@new_exp+1,f
  3977  015E'                    i1l1866:
  3978  015E' 0806'              	movf	___fldiv@new_exp+1,w
  3979  015F' 3A80               	xorlw	128
  3980  0160' 00FF               	movwf	127
  3981  0161' 3080               	movlw	128
  3982  0162' 027F               	subwf	127,w
  3983  0163' 1D03               	skipz
  3984  0164' 2967'              	goto	u203_25
  3985  0165' 30FF               	movlw	255
  3986  0166' 0205'              	subwf	___fldiv@new_exp,w
  3987  0167'                    u203_25:
  3988  0167' 1C03               	skipc
  3989  0168' 2977'              	goto	i1l1870
  3990  0169' 30FF               	movlw	255
  3991  016A' 1283               	bcf	3,5	;RP0=0, select bank0
  3992  016B' 1303               	bcf	3,6	;RP1=0, select bank0
  3993  016C' 0085'              	movwf	___fldiv@new_exp
  3994  016D' 3000               	movlw	0
  3995  016E' 0086'              	movwf	___fldiv@new_exp+1
  3996  016F' 3000               	movlw	0
  3997  0170' 0087'              	movwf	___fldiv@b+3
  3998  0171' 3000               	movlw	0
  3999  0172' 0086'              	movwf	___fldiv@b+2
  4000  0173' 3000               	movlw	0
  4001  0174' 0085'              	movwf	___fldiv@b+1
  4002  0175' 3000               	movlw	0
  4003  0176' 0084'              	movwf	___fldiv@b
  4004  0177'                    i1l1870:
  4005  0177' 1283               	bcf	3,5	;RP0=0, select bank0
  4006  0178' 1303               	bcf	3,6	;RP1=0, select bank0
  4007  0179' 0806'              	movf	___fldiv@new_exp+1,w
  4008  017A' 3A80               	xorlw	128
  4009  017B' 00FF               	movwf	127
  4010  017C' 3080               	movlw	128
  4011  017D' 027F               	subwf	127,w
  4012  017E' 1D03               	skipz
  4013  017F' 2982'              	goto	u204_25
  4014  0180' 3001               	movlw	1
  4015  0181' 0205'              	subwf	___fldiv@new_exp,w
  4016  0182'                    u204_25:
  4017  0182' 1803               	skipnc
  4018  0183' 2991'              	goto	i1l627
  4019  0184' 1283               	bcf	3,5	;RP0=0, select bank0
  4020  0185' 1303               	bcf	3,6	;RP1=0, select bank0
  4021  0186' 0185'              	clrf	___fldiv@new_exp
  4022  0187' 0186'              	clrf	___fldiv@new_exp+1
  4023  0188' 3000               	movlw	0
  4024  0189' 0087'              	movwf	___fldiv@b+3
  4025  018A' 3000               	movlw	0
  4026  018B' 0086'              	movwf	___fldiv@b+2
  4027  018C' 3000               	movlw	0
  4028  018D' 0085'              	movwf	___fldiv@b+1
  4029  018E' 3000               	movlw	0
  4030  018F' 0084'              	movwf	___fldiv@b
  4031  0190' 0184'              	clrf	___fldiv@sign
  4032  0191'                    i1l627:
  4033  0191' 1283               	bcf	3,5	;RP0=0, select bank0
  4034  0192' 1303               	bcf	3,6	;RP1=0, select bank0
  4035  0193' 0805'              	movf	___fldiv@new_exp,w
  4036  0194' 0088'              	movwf	??___fldiv
  4037  0195' 0808'              	movf	??___fldiv,w
  4038  0196' 008B'              	movwf	___fldiv@bexp
  4039  0197' 1C0B'              	btfss	___fldiv@bexp,0
  4040  0198' 299B'              	goto	i1l1882
  4041  0199' 1786'              	bsf	___fldiv@b+2,7
  4042  019A' 299F'              	goto	i1l629
  4043  019B'                    i1l1882:
  4044  019B' 307F               	movlw	127
  4045  019C' 0088'              	movwf	??___fldiv
  4046  019D' 0808'              	movf	??___fldiv,w
  4047  019E' 0586'              	andwf	___fldiv@b+2,f
  4048  019F'                    i1l629:
  4049  019F' 080B'              	movf	___fldiv@bexp,w
  4050  01A0' 0088'              	movwf	??___fldiv
  4051  01A1' 1003               	clrc
  4052  01A2' 0C08'              	rrf	??___fldiv,w
  4053  01A3' 0089'              	movwf	??___fldiv+1
  4054  01A4' 0809'              	movf	??___fldiv+1,w
  4055  01A5' 0087'              	movwf	___fldiv@b+3
  4056  01A6' 285E'              	goto	L3
  4057  01A7'                    __end_of___fldiv:
  4058  007E                     btemp	set	126	;btemp
  4059  007E                     wtemp0	set	126
  4060                           
  4061                           	psect	idloc
  4062                           
  4063                           ;Config register IDLOC0 @ 0x2000
  4064                           ;	unspecified, using default values
  4065  2000                     	org	8192
  4066  2000  3FFF               	dw	16383
  4067                           
  4068                           ;Config register IDLOC1 @ 0x2001
  4069                           ;	unspecified, using default values
  4070  2001                     	org	8193
  4071  2001  3FFF               	dw	16383
  4072                           
  4073                           ;Config register IDLOC2 @ 0x2002
  4074                           ;	unspecified, using default values
  4075  2002                     	org	8194
  4076  2002  3FFF               	dw	16383
  4077                           
  4078                           ;Config register IDLOC3 @ 0x2003
  4079                           ;	unspecified, using default values
  4080  2003                     	org	8195
  4081  2003  3FFF               	dw	16383
  4082                           
  4083                           	psect	config
  4084                           
  4085                           ;Config register CONFIG @ 0x2007
  4086                           ;	Oscillator Selection bits
  4087                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  4088                           ;	Watchdog Timer Enable bit
  4089                           ;	WDTE = OFF, WDT disabled
  4090                           ;	Power-up Timer Enable bit
  4091                           ;	PWRTE = ON, PWRT enabled
  4092                           ;	RA5/MCLR/VPP Pin Function Select bit
  4093                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  4094                           ;	Brown-out Detect Enable bit
  4095                           ;	BOREN = ON, BOD enabled
  4096                           ;	Low-Voltage Programming Enable bit
  4097                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  4098                           ;	Data EE Memory Code Protection bit
  4099                           ;	CPD = OFF, Data memory code protection off
  4100                           ;	Flash Program Memory Code Protection bit
  4101                           ;	CP = OFF, Code protection off
  4102  2007                     	org	8199
  4103  2007  3F50               	dw	16208

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      49
    BANK1            80     31      31
    BANK2            48      0       0

Pointer List with Targets:

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TMR0_ISR in COMMON

    _TMR0_ISR->___xxtofl
    ___fltol->___fldiv
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR0_ISR in BANK0

    _TMR0_ISR->___flmul
    ___fltol->___fldiv

Critical Paths under _main in BANK1

    _init->_UARTInit
    _UARTInit->___lldiv
    _UARTSendString->_UARTSendChar
    _UARTReadChar->_UARTDataReady
    _Servo_8_Write->___awdiv
    ___awdiv->___wmul

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0    2632
                                             23 BANK1      8     8      0
                      _Servo_8_Write
                         _Servo_Init
                      _UARTDataReady
                       _UARTReadChar
                     _UARTSendString
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     874
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     874
                                             14 BANK1      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     601
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       5     4      1     604
                                              1 BANK1      5     4      1
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTReadChar                                         0     0      0       0
                      _UARTDataReady
 ---------------------------------------------------------------------------------
 (2) _UARTDataReady                                        5     3      2       0
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Servo_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo_8_Write                                        4     4      0     972
                                             15 BANK1      4     4      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              6 BANK1      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             5     5      0    4394
                                             26 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     305
                                             13 BANK0     11     7      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    2418
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Servo_8_Write
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _Servo_Init
   _UARTDataReady
   _UARTReadChar
     _UARTDataReady
   _UARTSendString
     _UARTSendChar
   _init
     _UARTInit
       ___lldiv

 _TMR0_ISR (ROOT)
   ___fldiv
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     1F      31       3       61.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1F      1F       7       38.8%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      5E      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Dec 09 12:57:43 2022

       UARTInit@baud_rate 000E              ___fldiv@aexp 000C              ___fldiv@bexp 000B  
                       pc 0002              ___fldiv@sign 0004                        l22 0001  
            ___awdiv@sign 000C                        fsr 0004       ___wmul@multiplicand 0002  
     __Umul8_16@word_mpld 0006                       l113 0081                       l106 0066  
                     l115 0093                       l107 0069                       l116 0096  
                     l117 009A                       l118 009D                       l119 00A1  
                     l256 000A                       fsr0 0004                       indf 0000  
            ___flmul@aexp 000E              ___flmul@bexp 0013              ___flmul@sign 000D  
            ___flmul@temp 0018              ___flmul@prod 0014              ___fltol@exp1 0017  
                    l2310 000A                      l2230 0010                      l2240 0048  
                    l2232 0020                      l2316 0015                      l2244 0055  
                    l2342 0054                      l2334 0041                      l2326 001D  
                    l2254 002A                      l2328 002B                      l2352 0005  
                    l2338 004C                      l2290 0002                      l2258 0050  
                    l2444 003C                      l2358 0000                      l2438 0024  
                    l2528 00AC                      l2448 0050                      l2490 00A4  
                    STR_1 0006                      STR_2 0006                      STR_3 0006  
                    u3005 005B                      u3055 0079                      u3067 000E  
                    u2705 0014                      u2725 0022                      u2815 000B  
                    u2735 0037                      u2905 0038                      u2825 0012  
                    u2745 0049                      u2915 0042                      u2775 000C  
                    u2945 000E                      u2785 0033                      u2875 0020  
                    u2895 002C                      u2985 0032                      u2995 0046  
                    _TMR0 0001                      _main 0000                      _init 0000  
                    btemp 007E                      start 0000*          ___fldiv@new_exp 0005  
           ___fltol@sign1 0016              main@contador 001D                     ?_main 0000  
                   ?_init 0000           __end_of___fldiv 01A7           __end_of___awdiv 0059  
         __end_of___flmul 02D1           __end_of___fltol 006B           __end_of___lldiv 005E  
         ___awdiv@divisor 0006                     _T1CON 0010                     i1l170 006D  
                   i1l168 0068                     i1l605 004C                     i1l702 0073  
                   i1l703 007D                     i1l449 004D                     i1l627 0191  
                   i1l629 019F                     i1l664 0012                     i1l657 02C4  
                   i1l695 005D                     i1l689 001D           ___awdiv@counter 000B  
                   _RCREG 001A                     _TMR1H 000F                     _TMR1L 000E  
                   _SPBRG 0099                     _PORTB 0006                     _TXREG 0019  
        __end_of_UARTInit 005E          __end_of_TMR0_ISR 0076                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 0000  
            __end_of_main 00C1              __end_of_init 0028                    ??_main 0017  
                  ??_init 001F             main@detect_on 001B     __end_of_UARTDataReady 000E  
                  _CCPR1H 0016                    _CCPR1L 0015          ___awdiv@dividend 0008  
                  i1l2010 0294                    i1l2006 027E                    i1l2016 02AD  
                  i1l2040 002C                    i1l2034 0015                    i1l2044 0030  
                  i1l2054 0071                    i1l2046 0042                    i1l2056 0062  
                  i1l2068 009A                    i1l1800 0077                    i1l1712 0009  
                  i1l2184 005B                    i1l2176 0048                    i1l1618 000A  
                  i1l1820 00C6                    i1l1732 0039                    i1l1716 0012  
                  i1l2188 0069                    i1l1830 00F0                    i1l1902 001B  
                  i1l1742 005C                    i1l1734 0049                    i1l1760 001B  
                  i1l1920 0040                    i1l1904 001D                    i1l1826 00EB  
                  i1l1922 0042                    i1l1906 0025                    i1l1852 012A  
                  i1l1844 00F6                    i1l1828 00A2                    i1l1780 0041  
                  i1l1764 001E                    i1l1932 0058                    i1l1924 004A  
                  u202_25 0149                    i1l1870 0177                    i1l1846 0113  
                  i1l1766 0026                    i1l1856 012C                    i1l1784 0044  
                  i1l1882 019B                    i1l1866 015E                    i1l1794 006B  
                  u203_25 0167                    i1l1992 024A                    i1l1984 0216  
                  i1l1986 0233                    i1l1996 024C                    u204_25 0182  
                  u221_25 0147                    u231_25 0225                    u240_25 029F  
                  _INTCON 000B                    u161_25 0013                    u225_25 01CB  
                  u218_25 00F6                    u170_25 003A                    u228_25 0202  
                  u229_25 021A                    u173_25 0052                    u253_25 0085  
                  u245_25 0039                    u190_25 00DE                    u238_25 0269  
                  u190_26 00DF                    u190_27 00E4                    u190_28 00E5  
                  u190_29 00EA                    u239_25 0287                    u167_25 001B  
                  u247_25 0055                    u193_25 00FA                    u185_25 00AB  
                  u249_25 006A                    u186_25 00B4                    u195_25 0105  
                  u188_25 00BF                    u268_25 0064                    u189_25 00D4  
        __end_of___xxtofl 00A3     __end_of_Servo_8_Write 001E                    ___wmul 0000  
               ??___fldiv 0008                 ??___awdiv 000A                 ??___flmul 0008  
                  _data_s 0000                 ??___fltol 0011                 ??___lldiv 0008  
              _Servo_Init 0000          ___awdiv@quotient 000D                    saved_w 007E  
            ___xxtofl@arg 000A              ___xxtofl@exp 0009              ___xxtofl@val 0000  
 __end_of__initialization 0005                ___fltol@f1 000D            __pcstackCOMMON 0000  
               ?_UARTInit 000E                 ?_TMR0_ISR 0000            _OPTION_REGbits 0081  
UARTSendString@max_length 0001                __pbssBANK0 0000         __end_of__Umul8_16 0023  
              __pmaintext 0000                   ?___wmul 0000                ??_UARTInit 0013  
              ??_TMR0_ISR 001A                __pintentry 0000               ?_Servo_Init 0000  
                 _CCP1CON 0017                 ?___xxtofl 0000             ?_UARTReadChar 0000  
              __stringtab 0000             ?_UARTSendChar 0000                _frecuencia 0008  
                 ___fldiv 0000                   ___awdiv 0000                   ___flmul 0000  
                 ___fltol 0000                   ___lldiv 0000                 _CMCONbits 001F  
          _UARTSendString 0000                   __ptext1 0000                   __ptext2 0000  
                 __ptext3 0000                   __ptext4 0000                   __ptext5 0000  
                 __ptext6 0000                   __ptext7 0000                   __ptext8 0000  
                 __ptext9 0000                   _cont_sr 000C                 _T1CONbits 0010  
              ??___xxtofl 0004                   _periodo 000E            ??_UARTReadChar 001F  
                 clrloop0 0001      end_of_initialization 0005            ??_UARTSendChar 001F  
         ___lldiv@divisor 0000           ___lldiv@counter 000D                 _RCSTAbits 0018  
  __end_of_UARTSendString 0026                 _PORTAbits 0005                 _PORTBbits 0006  
           ___xxtofl@sign 0008                 _TRISAbits 0085                 _TRISBbits 0086  
             ___fldiv@grs 0007               ___fldiv@rem 0000               ___flmul@grs 000F  
               _TXSTAbits 0098           ?_UARTSendString 0001            __end_of___wmul 0021  
     start_initialization 0000      __end_of_UARTReadChar 0008                  ??___wmul 001F  
               __Umul8_16 0000              ??_Servo_Init 001F      __end_of_UARTSendChar 0007  
               ___fldiv@a 0000                 ___fldiv@b 0004                 ___flmul@a 0004  
               ___flmul@b 0000                 ___latbits 0000             __pcstackBANK0 0000  
           __pcstackBANK1 0000             _UARTDataReady 0000        __end_of_Servo_Init 0011  
           _Servo_8_Write 0000             UARTSendChar@c 0000                  ?___fldiv 0000  
                ?___awdiv 0006                  ?___flmul 0000                  ?___fltol 000D  
                ?___lldiv 0000                ?__Umul8_16 0000                 __pstrings 0000  
          ?_UARTDataReady 0000         interrupt_function 0000            ___wmul@product 0004  
               clear_ram0 0000                  _PIE1bits 008C           UARTSendString@i 0004  
          ?_Servo_8_Write 0000                  _PIR1bits 000C                  _UARTInit 0000  
                _TMR0_ISR 0000               __stringbase 0005         ___wmul@multiplier 0000  
               main@letra 001A          ??_UARTSendString 0002          Servo_8_Write@ang 0012  
            UARTInit@BRGH 0012               ??__Umul8_16 0002        __end_of__stringtab 0006  
         ??_UARTDataReady 0002                  ___xxtofl 0000                  __ptext10 0000  
                __ptext11 0000                  __ptext12 0000                  __ptext13 0000  
                __ptext14 0000                  __ptext15 0000                  __ptext16 0000  
                __ptext17 0000              _UARTReadChar 0000              _UARTSendChar 0000  
         ??_Servo_8_Write 000F                _INTCONbits 000B         UARTSendString@str 0003  
                intlevel1 0000*         ___lldiv@dividend 0004                 stringcode 0000  
             _valor_pasos 000A    __Umul8_16@multiplicand 0000          ___lldiv@quotient 0009  
                stringdir 0000                  stringtab 0000      __Umul8_16@multiplier 0008  
       __Umul8_16@product 0004  
