

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Dec 09 12:57:38 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F628A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  008C                     	;# 
    97  008E                     	;# 
    98  0092                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009F                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0015                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  008C                     	;# 
   134  008E                     	;# 
   135  0092                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009F                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  008C                     	;# 
   171  008E                     	;# 
   172  0092                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009A                     	;# 
   176  009B                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009F                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  008C                     	;# 
   208  008E                     	;# 
   209  0092                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009F                     	;# 
   217  0015                     _CCPR1L	set	21
   218  0016                     _CCPR1H	set	22
   219  0001                     _TMR0	set	1
   220  000B                     _INTCON	set	11
   221  0005                     _PORTAbits	set	5
   222  0006                     _PORTBbits	set	6
   223  0006                     _PORTB	set	6
   224  001F                     _CMCONbits	set	31
   225  0010                     _T1CONbits	set	16
   226  000F                     _TMR1H	set	15
   227  000E                     _TMR1L	set	14
   228  000B                     _INTCONbits	set	11
   229  0010                     _T1CON	set	16
   230  0017                     _CCP1CON	set	23
   231  001A                     _RCREG	set	26
   232  000C                     _PIR1bits	set	12
   233  0019                     _TXREG	set	25
   234  0018                     _RCSTAbits	set	24
   235  0081                     _OPTION_REGbits	set	129
   236  0085                     _TRISAbits	set	133
   237  008C                     _PIE1bits	set	140
   238  0086                     _TRISBbits	set	134
   239  0098                     _TXSTAbits	set	152
   240  0099                     _SPBRG	set	153
   241                           
   242                           	psect	strings
   243  0000'                    __pstrings:
   244  0000'                    stringtab:
   245  0000'                    __stringtab:
   246  0000'                    stringcode:	
   247                           ;	String table - string pointers are 1 byte each
   248                           
   249  0000'                    stringdir:
   250  0000' 3000'              	movlw	high stringdir
   251  0001' 008A               	movwf	10
   252  0002' 0804               	movf	4,w
   253  0003' 0A84               	incf	4,f
   254  0004' 0782               	addwf	2,f
   255  0005'                    __stringbase:
   256  0005' 3400               	retlw	0
   257  0006'                    __end_of__stringtab:
   258  0006'                    STR_1:
   259  0006' 3479               	retlw	121	;'y'
   260  0007' 3400               	retlw	0
   261  0008' 3400               	retlw	0
   262  0006'                    
   263                           	psect	cinit
   264  0000'                    start_initialization:	
   265                           ; #config settings
   266                           
   267  0000'                    __initialization:
   268                           
   269                           ; Clear objects allocated to BANK0
   270  0000' 1383               	bcf	3,7	;select IRP bank0
   271  0001' 3000'              	movlw	low __pbssBANK0
   272  0002' 0084               	movwf	4
   273  0003' 3000'              	movlw	low (__pbssBANK0+18)
   274  0004' 2000'              	fcall	clear_ram0
   275  0005'                    end_of_initialization:	
   276                           ;End of C runtime variable initialization code
   277                           
   278  0005'                    __end_of__initialization:
   279  0005' 0183               	clrf	3
   280  0006' 2800'              	ljmp	_main	;jump to C main() function
   281                           
   282                           	psect	bssBANK0
   283  0000'                    __pbssBANK0:
   284  0000'                    _data_s:
   285  0000'                    	ds	8
   286  0008'                    _frecuencia:
   287  0008'                    	ds	2
   288  000A'                    _valor_pasos:
   289  000A'                    	ds	2
   290  000C'                    _cont_sr:
   291  000C'                    	ds	2
   292  000E'                    _periodo:
   293  000E'                    	ds	4
   294                           
   295                           	psect	clrtext
   296  0000'                    clear_ram0:	
   297                           ;	Called with FSR containing the base address, and
   298                           ;	W with the last address+1
   299                           
   300  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   301  0001'                    clrloop0:
   302  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   303  0002' 0A84               	incf	4,f	;increment pointer
   304  0003' 0604               	xorwf	4,w	;XOR with final address
   305  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   306  0005' 3400               	retlw	0	;all done for this memory range, return
   307  0006' 0604               	xorwf	4,w	;XOR again to restore value
   308  0007' 2801'              	goto	clrloop0	;do the next byte
   309                           
   310                           	psect	cstackBANK1
   311  0000'                    __pcstackBANK1:
   312  0000'                    ?_UARTDataReady:
   313  0000'                    ?___wmul:	
   314                           ; 2 bytes @ 0x0
   315                           
   316  0000'                    ?___lldiv:	
   317                           ; 2 bytes @ 0x0
   318                           
   319  0000'                    UARTSendChar@c:	
   320                           ; 4 bytes @ 0x0
   321                           
   322  0000'                    ___wmul@multiplier:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0000'                    ___lldiv@divisor:	
   326                           ; 2 bytes @ 0x0
   327                           
   328                           
   329                           ; 4 bytes @ 0x0
   330  0000'                    	ds	1
   331  0001'                    ?_UARTSendString:
   332  0001'                    UARTSendString@max_length:	
   333                           ; 1 bytes @ 0x1
   334                           
   335                           
   336                           ; 1 bytes @ 0x1
   337  0001'                    	ds	1
   338  0002'                    ??_UARTSendString:
   339  0002'                    ??_UARTDataReady:	
   340                           ; 1 bytes @ 0x2
   341                           
   342  0002'                    ___wmul@multiplicand:	
   343                           ; 1 bytes @ 0x2
   344                           
   345                           
   346                           ; 2 bytes @ 0x2
   347  0002'                    	ds	1
   348  0003'                    UARTSendString@str:
   349                           
   350                           ; 1 bytes @ 0x3
   351  0003'                    	ds	1
   352  0004'                    UARTSendString@i:
   353  0004'                    ___wmul@product:	
   354                           ; 2 bytes @ 0x4
   355                           
   356  0004'                    ___lldiv@dividend:	
   357                           ; 2 bytes @ 0x4
   358                           
   359                           
   360                           ; 4 bytes @ 0x4
   361  0004'                    	ds	2
   362  0006'                    ?___awdiv:
   363  0006'                    ___awdiv@divisor:	
   364                           ; 2 bytes @ 0x6
   365                           
   366                           
   367                           ; 2 bytes @ 0x6
   368  0006'                    	ds	2
   369  0008'                    ??___lldiv:
   370  0008'                    ___awdiv@dividend:	
   371                           ; 1 bytes @ 0x8
   372                           
   373                           
   374                           ; 2 bytes @ 0x8
   375  0008'                    	ds	1
   376  0009'                    ___lldiv@quotient:
   377                           
   378                           ; 4 bytes @ 0x9
   379  0009'                    	ds	1
   380  000A'                    ??___awdiv:
   381                           
   382                           ; 1 bytes @ 0xA
   383  000A'                    	ds	1
   384  000B'                    ___awdiv@counter:
   385                           
   386                           ; 1 bytes @ 0xB
   387  000B'                    	ds	1
   388  000C'                    ___awdiv@sign:
   389                           
   390                           ; 1 bytes @ 0xC
   391  000C'                    	ds	1
   392  000D'                    ___lldiv@counter:
   393  000D'                    ___awdiv@quotient:	
   394                           ; 1 bytes @ 0xD
   395                           
   396                           
   397                           ; 2 bytes @ 0xD
   398  000D'                    	ds	1
   399  000E'                    ?_UARTInit:
   400  000E'                    UARTInit@baud_rate:	
   401                           ; 1 bytes @ 0xE
   402                           
   403                           
   404                           ; 4 bytes @ 0xE
   405  000E'                    	ds	1
   406  000F'                    ??_Servo_8_Write:
   407                           
   408                           ; 1 bytes @ 0xF
   409  000F'                    	ds	3
   410  0012'                    UARTInit@BRGH:
   411  0012'                    Servo_8_Write@ang:	
   412                           ; 1 bytes @ 0x12
   413                           
   414                           
   415                           ; 1 bytes @ 0x12
   416  0012'                    	ds	1
   417  0013'                    ??_UARTInit:
   418                           
   419                           ; 1 bytes @ 0x13
   420  0013'                    	ds	4
   421  0017'                    ??_main:
   422                           
   423                           ; 1 bytes @ 0x17
   424  0017'                    	ds	3
   425  001A'                    main@letra:
   426                           
   427                           ; 1 bytes @ 0x1A
   428  001A'                    	ds	1
   429  001B'                    main@detect_on:
   430                           
   431                           ; 2 bytes @ 0x1B
   432  001B'                    	ds	2
   433  001D'                    main@contador:
   434                           
   435                           ; 2 bytes @ 0x1D
   436  001D'                    	ds	2
   437                           
   438                           	psect	cstackCOMMON
   439  0000'                    __pcstackCOMMON:
   440  0000'                    ?_Servo_Init:
   441  0000'                    ?_Servo_8_Write:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0000'                    ?_UARTSendChar:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0000'                    ?_UARTReadChar:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0000'                    ?_init:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0000'                    ?_main:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0000'                    ?_TMR0_ISR:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0000'                    ?__Umul8_16:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0000'                    ?___fldiv:	
   463                           ; 2 bytes @ 0x0
   464                           
   465  0000'                    ?___xxtofl:	
   466                           ; 4 bytes @ 0x0
   467                           
   468  0000'                    __Umul8_16@multiplicand:	
   469                           ; 4 bytes @ 0x0
   470                           
   471  0000'                    ___fldiv@a:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0000'                    ___xxtofl@val:	
   475                           ; 4 bytes @ 0x0
   476                           
   477                           
   478                           ; 4 bytes @ 0x0
   479  0000'                    	ds	2
   480  0002'                    ??__Umul8_16:
   481                           
   482                           ; 1 bytes @ 0x2
   483  0002'                    	ds	2
   484  0004'                    ??___xxtofl:
   485  0004'                    __Umul8_16@product:	
   486                           ; 1 bytes @ 0x4
   487                           
   488  0004'                    ___fldiv@b:	
   489                           ; 2 bytes @ 0x4
   490                           
   491                           
   492                           ; 4 bytes @ 0x4
   493  0004'                    	ds	2
   494  0006'                    __Umul8_16@word_mpld:
   495                           
   496                           ; 2 bytes @ 0x6
   497  0006'                    	ds	2
   498  0008'                    ??___fldiv:
   499  0008'                    __Umul8_16@multiplier:	
   500                           ; 1 bytes @ 0x8
   501                           
   502  0008'                    ___xxtofl@sign:	
   503                           ; 1 bytes @ 0x8
   504                           
   505                           
   506                           ; 1 bytes @ 0x8
   507  0008'                    	ds	1
   508  0009'                    ___xxtofl@exp:
   509                           
   510                           ; 1 bytes @ 0x9
   511  0009'                    	ds	1
   512  000A'                    ___xxtofl@arg:
   513                           
   514                           ; 4 bytes @ 0xA
   515  000A'                    	ds	4
   516                           
   517                           	psect	cstackBANK0
   518  0000'                    __pcstackBANK0:
   519  0000'                    ?___flmul:
   520  0000'                    ___fldiv@rem:	
   521                           ; 4 bytes @ 0x0
   522                           
   523  0000'                    ___flmul@b:	
   524                           ; 4 bytes @ 0x0
   525                           
   526                           
   527                           ; 4 bytes @ 0x0
   528  0000'                    	ds	4
   529  0004'                    ___fldiv@sign:
   530  0004'                    ___flmul@a:	
   531                           ; 1 bytes @ 0x4
   532                           
   533                           
   534                           ; 4 bytes @ 0x4
   535  0004'                    	ds	1
   536  0005'                    ___fldiv@new_exp:
   537                           
   538                           ; 2 bytes @ 0x5
   539  0005'                    	ds	2
   540  0007'                    ___fldiv@grs:
   541                           
   542                           ; 4 bytes @ 0x7
   543  0007'                    	ds	1
   544  0008'                    ??___flmul:
   545                           
   546                           ; 1 bytes @ 0x8
   547  0008'                    	ds	3
   548  000B'                    ___fldiv@bexp:
   549                           
   550                           ; 1 bytes @ 0xB
   551  000B'                    	ds	1
   552  000C'                    ___fldiv@aexp:
   553                           
   554                           ; 1 bytes @ 0xC
   555  000C'                    	ds	1
   556  000D'                    ?___fltol:
   557  000D'                    ___flmul@sign:	
   558                           ; 4 bytes @ 0xD
   559                           
   560  000D'                    ___fltol@f1:	
   561                           ; 1 bytes @ 0xD
   562                           
   563                           
   564                           ; 4 bytes @ 0xD
   565  000D'                    	ds	1
   566  000E'                    ___flmul@grs:
   567                           
   568                           ; 4 bytes @ 0xE
   569  000E'                    	ds	3
   570  0011'                    ??___fltol:
   571                           
   572                           ; 1 bytes @ 0x11
   573  0011'                    	ds	1
   574  0012'                    ___flmul@aexp:
   575                           
   576                           ; 1 bytes @ 0x12
   577  0012'                    	ds	1
   578  0013'                    ___flmul@bexp:
   579                           
   580                           ; 1 bytes @ 0x13
   581  0013'                    	ds	1
   582  0014'                    ___flmul@prod:
   583                           
   584                           ; 4 bytes @ 0x14
   585  0014'                    	ds	2
   586  0016'                    ___fltol@sign1:
   587                           
   588                           ; 1 bytes @ 0x16
   589  0016'                    	ds	1
   590  0017'                    ___fltol@exp1:
   591                           
   592                           ; 1 bytes @ 0x17
   593  0017'                    	ds	1
   594  0018'                    ___flmul@temp:
   595                           
   596                           ; 2 bytes @ 0x18
   597  0018'                    	ds	2
   598  001A'                    ??_TMR0_ISR:
   599                           
   600                           ; 1 bytes @ 0x1A
   601  001A'                    	ds	5
   602  001F'                    ??_Servo_Init:
   603  001F'                    ??_UARTSendChar:	
   604                           ; 1 bytes @ 0x1F
   605                           
   606  001F'                    ??_UARTReadChar:	
   607                           ; 1 bytes @ 0x1F
   608                           
   609  001F'                    ??_init:	
   610                           ; 1 bytes @ 0x1F
   611                           
   612  001F'                    ??___wmul:	
   613                           ; 1 bytes @ 0x1F
   614                           
   615                           
   616                           	psect	maintext
   617  0000'                    __pmaintext:	
   618                           ; 1 bytes @ 0x1F
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 92 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  readBuf        32    0        PTR unsigned char [16]
   629 ;;  tmpBuf         16    0        PTR unsigned char [8]
   630 ;;  contador        2   29[BANK1 ] int 
   631 ;;  detect_on       2   27[BANK1 ] int 
   632 ;;  nRead           2    0        int 
   633 ;;  letra           1   26[BANK1 ] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : B00/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   643 ;;      Params:         0       0       0       0
   644 ;;      Locals:         0       0       5       0
   645 ;;      Temps:          0       0       3       0
   646 ;;      Totals:         0       0       8       0
   647 ;;Total ram usage:        8 bytes
   648 ;; Hardware stack levels required when called: 6
   649 ;; This function calls:
   650 ;;		_Servo_8_Write
   651 ;;		_Servo_Init
   652 ;;		_UARTDataReady
   653 ;;		_UARTReadChar
   654 ;;		_UARTSendString
   655 ;;		_init
   656 ;; This function is called by:
   657 ;;		Startup code after reset
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661  0000'                    _main:	
   662                           ;psect for function _main
   663                           
   664                           
   665                           ;main.c: 96:     char letra;;main.c: 97:     init();
   666                           
   667                           ;incstack = 0
   668                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   669  0000' 2000'              	fcall	_init
   670                           
   671                           ;main.c: 98:     PORTBbits.RB3 = 1;
   672  0001' 1283               	bcf	3,5	;RP0=0, select bank0
   673  0002' 1303               	bcf	3,6	;RP1=0, select bank0
   674  0003' 1586               	bsf	6,3	;volatile
   675                           
   676                           ;main.c: 99:     PORTBbits.RB4 = 1;
   677  0004' 1606               	bsf	6,4	;volatile
   678                           
   679                           ;main.c: 100:     PORTBbits.RB5 = 1;
   680  0005' 1686               	bsf	6,5	;volatile
   681                           
   682                           ;main.c: 101:     PORTBbits.RB6 = 1;
   683  0006' 1706               	bsf	6,6	;volatile
   684                           
   685                           ;main.c: 102:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   686  0007' 3006               	movlw	6
   687  0008' 1683               	bsf	3,5	;RP0=1, select bank1
   688  0009' 1303               	bcf	3,6	;RP1=0, select bank1
   689  000A' 0082'              	movwf	(??_main^(0+128)+2)
   690  000B' 3013               	movlw	19
   691  000C' 0081'              	movwf	(??_main^(0+128)+1)
   692  000D' 30AD               	movlw	173
   693  000E' 0080'              	movwf	??_main^(0+128)
   694  000F'                    u3207:
   695  000F' 0B80'              	decfsz	??_main^(0+128),f
   696  0010' 280F'              	goto	u3207
   697  0011' 0B81'              	decfsz	(??_main^(0+128)+1),f
   698  0012' 280F'              	goto	u3207
   699  0013' 0B82'              	decfsz	(??_main^(0+128)+2),f
   700  0014' 280F'              	goto	u3207
   701  0015' 0000               	nop
   702                           
   703                           ;main.c: 103:     PORTBbits.RB3 = 0;
   704  0016' 1283               	bcf	3,5	;RP0=0, select bank0
   705  0017' 1303               	bcf	3,6	;RP1=0, select bank0
   706  0018' 1186               	bcf	6,3	;volatile
   707                           
   708                           ;main.c: 104:     PORTBbits.RB4 = 0;
   709  0019' 1206               	bcf	6,4	;volatile
   710                           
   711                           ;main.c: 105:     PORTBbits.RB5 = 0;
   712  001A' 1286               	bcf	6,5	;volatile
   713                           
   714                           ;main.c: 106:     PORTBbits.RB6 = 0;
   715  001B' 1306               	bcf	6,6	;volatile
   716                           
   717                           ;main.c: 108:     int detect_on = 0;
   718  001C' 1683               	bsf	3,5	;RP0=1, select bank1
   719  001D' 1303               	bcf	3,6	;RP1=0, select bank1
   720  001E' 0180'              	clrf	main@detect_on^(0+128)
   721  001F' 0180'              	clrf	(main@detect_on+1)^(0+128)
   722                           
   723                           ;main.c: 109:     Servo_Init();
   724  0020' 2000'              	fcall	_Servo_Init
   725                           
   726                           ;main.c: 110:     int contador = 0;
   727  0021' 1683               	bsf	3,5	;RP0=1, select bank1
   728  0022' 1303               	bcf	3,6	;RP1=0, select bank1
   729  0023' 0180'              	clrf	main@contador^(0+128)
   730  0024' 0180'              	clrf	(main@contador+1)^(0+128)
   731                           
   732                           ;main.c: 112:     PORTBbits.RB6 = 1;
   733  0025' 1283               	bcf	3,5	;RP0=0, select bank0
   734  0026' 1303               	bcf	3,6	;RP1=0, select bank0
   735  0027' 1706               	bsf	6,6	;volatile
   736  0028'                    l2488:
   737                           
   738                           ;main.c: 122:         if (PORTAbits.RA3 == 1){
   739  0028' 1283               	bcf	3,5	;RP0=0, select bank0
   740  0029' 1303               	bcf	3,6	;RP1=0, select bank0
   741  002A' 1D85               	btfss	5,3	;volatile
   742  002B' 2841'              	goto	l2494
   743                           
   744                           ;main.c: 123:             if (contador < 1000){
   745  002C' 1683               	bsf	3,5	;RP0=1, select bank1
   746  002D' 1303               	bcf	3,6	;RP1=0, select bank1
   747  002E' 0800'              	movf	(main@contador+1)^(0+128),w
   748  002F' 3A80               	xorlw	128
   749  0030' 00FF               	movwf	127
   750  0031' 3083               	movlw	131
   751  0032' 027F               	subwf	127,w
   752  0033' 1D03               	skipz
   753  0034' 2837'              	goto	u3125
   754  0035' 30E8               	movlw	232
   755  0036' 0200'              	subwf	main@contador^(0+128),w
   756  0037'                    u3125:
   757  0037' 1803               	skipnc
   758  0038' 2856'              	goto	l2498
   759                           
   760                           ;main.c: 124:                 contador++;
   761  0039' 3001               	movlw	1
   762  003A' 1683               	bsf	3,5	;RP0=1, select bank1
   763  003B' 1303               	bcf	3,6	;RP1=0, select bank1
   764  003C' 0780'              	addwf	main@contador^(0+128),f
   765  003D' 1803               	skipnc
   766  003E' 0A80'              	incf	(main@contador+1)^(0+128),f
   767  003F' 3000               	movlw	0
   768  0040' 2855'              	goto	L1
   769  0041'                    l2494:
   770                           
   771                           ;main.c: 127:             if (contador > 0){
   772  0041' 1683               	bsf	3,5	;RP0=1, select bank1
   773  0042' 1303               	bcf	3,6	;RP1=0, select bank1
   774  0043' 0800'              	movf	(main@contador+1)^(0+128),w
   775  0044' 3A80               	xorlw	128
   776  0045' 00FF               	movwf	127
   777  0046' 3080               	movlw	128
   778  0047' 027F               	subwf	127,w
   779  0048' 1D03               	skipz
   780  0049' 284C'              	goto	u3135
   781  004A' 3001               	movlw	1
   782  004B' 0200'              	subwf	main@contador^(0+128),w
   783  004C'                    u3135:
   784  004C' 1C03               	skipc
   785  004D' 2856'              	goto	l2498
   786                           
   787                           ;main.c: 128:                 contador--;
   788  004E' 30FF               	movlw	255
   789  004F' 1683               	bsf	3,5	;RP0=1, select bank1
   790  0050' 1303               	bcf	3,6	;RP1=0, select bank1
   791  0051' 0780'              	addwf	main@contador^(0+128),f
   792  0052' 1803               	skipnc
   793  0053' 0A80'              	incf	(main@contador+1)^(0+128),f
   794  0054' 30FF               	movlw	255
   795  0055'                    L1:
   796  0055' 0780'              	addwf	(main@contador+1)^(0+128),f
   797  0056'                    l2498:
   798                           
   799                           ;main.c: 131:         if (contador < 1 && detect_on == 0){
   800  0056' 1683               	bsf	3,5	;RP0=1, select bank1
   801  0057' 1303               	bcf	3,6	;RP1=0, select bank1
   802  0058' 0800'              	movf	(main@contador+1)^(0+128),w
   803  0059' 3A80               	xorlw	128
   804  005A' 00FF               	movwf	127
   805  005B' 3080               	movlw	128
   806  005C' 027F               	subwf	127,w
   807  005D' 1D03               	skipz
   808  005E' 2861'              	goto	u3145
   809  005F' 3001               	movlw	1
   810  0060' 0200'              	subwf	main@contador^(0+128),w
   811  0061'                    u3145:
   812  0061' 1803               	skipnc
   813  0062' 286D'              	goto	l106
   814  0063' 1683               	bsf	3,5	;RP0=1, select bank1
   815  0064' 1303               	bcf	3,6	;RP1=0, select bank1
   816  0065' 0800'              	movf	main@detect_on^(0+128),w
   817  0066' 0400'              	iorwf	(main@detect_on+1)^(0+128),w
   818  0067' 1D03               	btfss	3,2
   819  0068' 286D'              	goto	l106
   820                           
   821                           ;main.c: 132:             PORTBbits.RB6 = 1;
   822  0069' 1283               	bcf	3,5	;RP0=0, select bank0
   823  006A' 1303               	bcf	3,6	;RP1=0, select bank0
   824  006B' 1706               	bsf	6,6	;volatile
   825                           
   826                           ;main.c: 133:         }else{
   827  006C' 2870'              	goto	l107
   828  006D'                    l106:
   829                           
   830                           ;main.c: 134:             PORTBbits.RB6 = 0;
   831  006D' 1283               	bcf	3,5	;RP0=0, select bank0
   832  006E' 1303               	bcf	3,6	;RP1=0, select bank0
   833  006F' 1306               	bcf	6,6	;volatile
   834  0070'                    l107:	
   835                           ;main.c: 135:         }
   836                           
   837                           
   838                           ;main.c: 141:         if(PORTAbits.RA0 == 1){
   839  0070' 1805               	btfsc	5,0	;volatile
   840                           
   841                           ;main.c: 142:             PORTBbits.RB3 = 0;
   842  0071' 1186               	bcf	6,3	;volatile
   843                           
   844                           ;main.c: 144:         if(PORTAbits.RA1 == 1){
   845                           
   846                           ;main.c: 143:         }
   847  0072' 1885               	btfsc	5,1	;volatile
   848                           
   849                           ;main.c: 145:             PORTBbits.RB4 = 0;
   850  0073' 1206               	bcf	6,4	;volatile
   851                           
   852                           ;main.c: 147:         if(PORTAbits.RA2 == 1){
   853                           
   854                           ;main.c: 146:         }
   855  0074' 1905               	btfsc	5,2	;volatile
   856                           
   857                           ;main.c: 148:             PORTBbits.RB5 = 0;
   858  0075' 1286               	bcf	6,5	;volatile
   859                           
   860                           ;main.c: 151:         if(UARTDataReady() > 0){
   861  0076' 2000'              	fcall	_UARTDataReady
   862  0077' 1683               	bsf	3,5	;RP0=1, select bank1
   863  0078' 1303               	bcf	3,6	;RP1=0, select bank1
   864  0079' 0800'              	movf	(?_UARTDataReady+1)^(0+128),w
   865  007A' 3A80               	xorlw	128
   866  007B' 00FF               	movwf	127
   867  007C' 3080               	movlw	128
   868  007D' 027F               	subwf	127,w
   869  007E' 1D03               	skipz
   870  007F' 2882'              	goto	u3195
   871  0080' 3001               	movlw	1
   872  0081' 0200'              	subwf	?_UARTDataReady^(0+128),w
   873  0082'                    u3195:
   874  0082' 1C03               	skipc
   875  0083' 2828'              	goto	l2488
   876                           
   877                           ;main.c: 166:             letra = UARTReadChar();
   878  0084' 2000'              	fcall	_UARTReadChar
   879  0085' 1683               	bsf	3,5	;RP0=1, select bank1
   880  0086' 1303               	bcf	3,6	;RP1=0, select bank1
   881  0087' 0080'              	movwf	??_main^(0+128)
   882  0088' 0800'              	movf	??_main^(0+128),w
   883  0089' 0080'              	movwf	main@letra^(0+128)
   884                           
   885                           ;main.c: 168:             switch (letra){
   886  008A' 28B6'              	goto	l2540
   887  008B'                    l113:	
   888                           ;main.c: 169:                 case 'a':
   889                           
   890                           
   891                           ;main.c: 171:                     PORTBbits.RB3 = 1;
   892  008B' 1283               	bcf	3,5	;RP0=0, select bank0
   893  008C' 1303               	bcf	3,6	;RP1=0, select bank0
   894  008D' 1586               	bsf	6,3	;volatile
   895                           
   896                           ;main.c: 172:                     Servo_8_Write(0);
   897  008E' 3000               	movlw	0
   898  008F'                    L2:
   899  008F' 2000'              	fcall	_Servo_8_Write
   900                           
   901                           ;main.c: 173:                     UARTSendString("y\0", 16);
   902  0090' 3010               	movlw	16
   903  0091' 1683               	bsf	3,5	;RP0=1, select bank1
   904  0092' 1303               	bcf	3,6	;RP1=0, select bank1
   905  0093' 0080'              	movwf	??_main^(0+128)
   906  0094' 0800'              	movf	??_main^(0+128),w
   907  0095' 0080'              	movwf	UARTSendString@max_length^(0+128)
   908  0096' 3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   909  0097' 2000'              	fcall	_UARTSendString
   910                           
   911                           ;main.c: 174:                     PORTBbits.RB6 = 1;
   912  0098' 1283               	bcf	3,5	;RP0=0, select bank0
   913  0099' 1303               	bcf	3,6	;RP1=0, select bank0
   914  009A' 1706               	bsf	6,6	;volatile
   915                           
   916                           ;main.c: 175:                     detect_on = 0;
   917  009B' 1683               	bsf	3,5	;RP0=1, select bank1
   918  009C' 1303               	bcf	3,6	;RP1=0, select bank1
   919  009D' 0180'              	clrf	main@detect_on^(0+128)
   920  009E' 0180'              	clrf	(main@detect_on+1)^(0+128)
   921                           
   922                           ;main.c: 176:                     break;
   923  009F' 2828'              	goto	l2488
   924  00A0'                    l115:	
   925                           ;main.c: 177:                 case 'b':
   926                           
   927                           
   928                           ;main.c: 179:                     PORTBbits.RB3 = 0;
   929  00A0' 1283               	bcf	3,5	;RP0=0, select bank0
   930  00A1' 1303               	bcf	3,6	;RP1=0, select bank0
   931  00A2' 1186               	bcf	6,3	;volatile
   932                           
   933                           ;main.c: 180:                     break;
   934  00A3' 2828'              	goto	l2488
   935  00A4'                    l116:	
   936                           ;main.c: 181:                 case 'c':
   937                           
   938                           
   939                           ;main.c: 183:                     PORTBbits.RB4 = 1;
   940  00A4' 1283               	bcf	3,5	;RP0=0, select bank0
   941  00A5' 1303               	bcf	3,6	;RP1=0, select bank0
   942  00A6' 1606               	bsf	6,4	;volatile
   943                           
   944                           ;main.c: 184:                     Servo_8_Write(90);
   945  00A7' 305A               	movlw	90
   946  00A8' 288F'              	goto	L2
   947  00A9'                    l117:	
   948                           ;main.c: 189:                 case 'd':
   949                           
   950                           ;main.c: 186:                     PORTBbits.RB6 = 1;
   951                           
   952                           ;main.c: 185:                     UARTSendString("y\0", 16);
   953                           
   954                           
   955                           ;main.c: 191:                     PORTBbits.RB4 = 0;
   956  00A9' 1283               	bcf	3,5	;RP0=0, select bank0
   957  00AA' 1303               	bcf	3,6	;RP1=0, select bank0
   958  00AB' 1206               	bcf	6,4	;volatile
   959                           
   960                           ;main.c: 192:                     break;
   961  00AC' 2828'              	goto	l2488
   962  00AD'                    l118:	
   963                           ;main.c: 193:                 case 'e':
   964                           
   965                           
   966                           ;main.c: 195:                     PORTBbits.RB5 = 1;
   967  00AD' 1283               	bcf	3,5	;RP0=0, select bank0
   968  00AE' 1303               	bcf	3,6	;RP1=0, select bank0
   969  00AF' 1686               	bsf	6,5	;volatile
   970                           
   971                           ;main.c: 196:                     Servo_8_Write(180);
   972  00B0' 30B4               	movlw	180
   973  00B1' 288F'              	goto	L2
   974  00B2'                    l119:	
   975                           ;main.c: 201:                 case 'f':
   976                           
   977                           ;main.c: 198:                     PORTBbits.RB6 = 1;
   978                           
   979                           ;main.c: 197:                     UARTSendString("y\0", 16);
   980                           
   981                           
   982                           ;main.c: 203:                     PORTBbits.RB5 = 0;
   983  00B2' 1283               	bcf	3,5	;RP0=0, select bank0
   984  00B3' 1303               	bcf	3,6	;RP1=0, select bank0
   985  00B4' 1286               	bcf	6,5	;volatile
   986                           
   987                           ;main.c: 204:                     break;
   988  00B5' 2828'              	goto	l2488
   989  00B6'                    l2540:
   990  00B6' 0800'              	movf	main@letra^(0+128),w
   991  00B7' 0080'              	movwf	??_main^(0+128)
   992  00B8' 0181'              	clrf	(??_main^(0+128)+1)
   993                           
   994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   995                           ; Switch size 1, requested type "simple"
   996                           ; Number of cases is 1, Range of values is 0 to 0
   997                           ; switch strategies available:
   998                           ; Name         Instructions Cycles
   999                           ; simple_byte            4     3 (average)
  1000                           ; direct_byte            7     6 (fixed)
  1001                           ; jumptable            260     6 (fixed)
  1002                           ;	Chosen strategy is simple_byte
  1003  00B9' 0800'              	movf	(??_main+1)^(0+128),w
  1004  00BA' 3A00               	xorlw	0	; case 0
  1005  00BB' 1903               	skipnz
  1006  00BC' 28BE'              	goto	l2578
  1007  00BD' 2828'              	goto	l2488
  1008  00BE'                    l2578:
  1009                           
  1010                           ; Switch size 1, requested type "simple"
  1011                           ; Number of cases is 6, Range of values is 97 to 102
  1012                           ; switch strategies available:
  1013                           ; Name         Instructions Cycles
  1014                           ; direct_byte           15     9 (fixed)
  1015                           ; simple_byte           19    10 (average)
  1016                           ; jumptable            263     9 (fixed)
  1017                           ;	Chosen strategy is simple_byte
  1018  00BE' 0800'              	movf	??_main^(0+128),w
  1019  00BF' 3A61               	xorlw	97	; case 97
  1020  00C0' 1903               	skipnz
  1021  00C1' 288B'              	goto	l113
  1022  00C2' 3A03               	xorlw	3	; case 98
  1023  00C3' 1903               	skipnz
  1024  00C4' 28A0'              	goto	l115
  1025  00C5' 3A01               	xorlw	1	; case 99
  1026  00C6' 1903               	skipnz
  1027  00C7' 28A4'              	goto	l116
  1028  00C8' 3A07               	xorlw	7	; case 100
  1029  00C9' 1903               	skipnz
  1030  00CA' 28A9'              	goto	l117
  1031  00CB' 3A01               	xorlw	1	; case 101
  1032  00CC' 1903               	skipnz
  1033  00CD' 28AD'              	goto	l118
  1034  00CE' 3A03               	xorlw	3	; case 102
  1035  00CF' 1903               	skipnz
  1036  00D0' 28B2'              	goto	l119
  1037  00D1' 2828'              	goto	l2488
  1038  00D2' 2800'              	ljmp	start
  1039  00D3'                    __end_of_main:
  1040                           
  1041                           	psect	text1
  1042  0000'                    __ptext1:	
  1043 ;; *************** function _init *****************
  1044 ;; Defined at:
  1045 ;;		line 57 in file "main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1059 ;;      Params:         0       0       0       0
  1060 ;;      Locals:         0       0       0       0
  1061 ;;      Temps:          0       0       0       0
  1062 ;;      Totals:         0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 5
  1066 ;; This function calls:
  1067 ;;		_UARTInit
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073  0000'                    _init:	
  1074                           ;psect for function _init
  1075                           
  1076                           
  1077                           ;main.c: 59:     CCP1CON = 0b00000101;
  1078                           
  1079                           ;incstack = 0
  1080                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1081  0000' 3005               	movlw	5
  1082  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1083  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  1084  0003' 0097               	movwf	23	;volatile
  1085                           
  1086                           ;main.c: 60:     T1CON = 0b00111000;
  1087  0004' 3038               	movlw	56
  1088  0005' 0090               	movwf	16	;volatile
  1089                           
  1090                           ;main.c: 61:     INTCONbits.GIE = 1;
  1091  0006' 178B               	bsf	11,7	;volatile
  1092                           
  1093                           ;main.c: 62:     INTCONbits.PEIE = 1;
  1094  0007' 170B               	bsf	11,6	;volatile
  1095                           
  1096                           ;main.c: 63:     PIE1bits.CCP1IE = 1;
  1097  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  1098  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  1099  000A' 150C               	bsf	12,2	;volatile
  1100                           
  1101                           ;main.c: 64:     PIR1bits.CCP1IF = 0;
  1102  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  1103  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  1104  000D' 110C               	bcf	12,2	;volatile
  1105                           
  1106                           ;main.c: 65:     TMR1L = 0x00;
  1107  000E' 018E               	clrf	14	;volatile
  1108                           
  1109                           ;main.c: 66:     TMR1H = 0x00;
  1110  000F' 018F               	clrf	15	;volatile
  1111                           
  1112                           ;main.c: 67:     T1CONbits.TMR1ON = 1;
  1113  0010' 1410               	bsf	16,0	;volatile
  1114                           
  1115                           ;main.c: 71:     CMCONbits.CM0 = 1;
  1116  0011' 141F               	bsf	31,0	;volatile
  1117                           
  1118                           ;main.c: 72:     CMCONbits.CM1 = 1;
  1119  0012' 149F               	bsf	31,1	;volatile
  1120                           
  1121                           ;main.c: 73:     CMCONbits.CM2 = 1;
  1122  0013' 151F               	bsf	31,2	;volatile
  1123                           
  1124                           ;main.c: 78:     TRISAbits.TRISA0 = 1;
  1125  0014' 1683               	bsf	3,5	;RP0=1, select bank1
  1126  0015' 1303               	bcf	3,6	;RP1=0, select bank1
  1127  0016' 1405               	bsf	5,0	;volatile
  1128                           
  1129                           ;main.c: 79:     TRISAbits.TRISA1 = 1;
  1130  0017' 1485               	bsf	5,1	;volatile
  1131                           
  1132                           ;main.c: 80:     TRISAbits.TRISA2 = 1;
  1133  0018' 1505               	bsf	5,2	;volatile
  1134                           
  1135                           ;main.c: 81:     TRISAbits.TRISA3 = 1;
  1136  0019' 1585               	bsf	5,3	;volatile
  1137                           
  1138                           ;main.c: 83:     TRISBbits.TRISB3 = 0;
  1139  001A' 1186               	bcf	6,3	;volatile
  1140                           
  1141                           ;main.c: 84:     TRISBbits.TRISB4 = 0;
  1142  001B' 1206               	bcf	6,4	;volatile
  1143                           
  1144                           ;main.c: 85:     TRISBbits.TRISB5 = 0;
  1145  001C' 1286               	bcf	6,5	;volatile
  1146                           
  1147                           ;main.c: 86:     TRISBbits.TRISB6 = 0;
  1148  001D' 1306               	bcf	6,6	;volatile
  1149                           
  1150                           ;main.c: 87:     PORTB = 0;
  1151  001E' 1283               	bcf	3,5	;RP0=0, select bank0
  1152  001F' 1303               	bcf	3,6	;RP1=0, select bank0
  1153  0020' 0186               	clrf	6	;volatile
  1154                           
  1155                           ;main.c: 89:     UARTInit(9600, 1);
  1156  0021' 3000               	movlw	0
  1157  0022' 1683               	bsf	3,5	;RP0=1, select bank1
  1158  0023' 1303               	bcf	3,6	;RP1=0, select bank1
  1159  0024' 0080'              	movwf	(UARTInit@baud_rate+3)^(0+128)
  1160  0025' 3000               	movlw	0
  1161  0026' 0080'              	movwf	(UARTInit@baud_rate+2)^(0+128)
  1162  0027' 3025               	movlw	37
  1163  0028' 0080'              	movwf	(UARTInit@baud_rate+1)^(0+128)
  1164  0029' 3080               	movlw	128
  1165  002A' 0080'              	movwf	UARTInit@baud_rate^(0+128)
  1166  002B' 0180'              	clrf	UARTInit@BRGH^(0+128)
  1167  002C' 0A80'              	incf	UARTInit@BRGH^(0+128),f
  1168  002D' 2000'              	fcall	_UARTInit
  1169  002E' 0008               	return
  1170  002F'                    __end_of_init:
  1171                           
  1172                           	psect	text2
  1173  0000'                    __ptext2:	
  1174 ;; *************** function _UARTInit *****************
  1175 ;; Defined at:
  1176 ;;		line 15 in file "UART.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  baud_rate       4   14[BANK1 ] const unsigned long 
  1179 ;;  BRGH            1   18[BANK1 ] const unsigned char 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1191 ;;      Params:         0       0       5       0
  1192 ;;      Locals:         0       0       0       0
  1193 ;;      Temps:          0       0       4       0
  1194 ;;      Totals:         0       0       9       0
  1195 ;;Total ram usage:        9 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 4
  1198 ;; This function calls:
  1199 ;;		___lldiv
  1200 ;; This function is called by:
  1201 ;;		_init
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205  0000'                    _UARTInit:	
  1206                           ;psect for function _UARTInit
  1207                           
  1208                           
  1209                           ;UART.c: 17:     if (BRGH == 0) {
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  1213  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1214  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1215  0002' 0800'              	movf	UARTInit@BRGH^(0+128),w
  1216  0003' 1D03               	btfss	3,2
  1217  0004' 282E'              	goto	l2288
  1218                           
  1219                           ;UART.c: 18:         SPBRG = 4000000/(64*baud_rate) - 1;
  1220  0005' 0800'              	movf	UARTInit@baud_rate^(0+128),w
  1221  0006' 0080'              	movwf	??_UARTInit^(0+128)
  1222  0007' 0800'              	movf	(UARTInit@baud_rate+1)^(0+128),w
  1223  0008' 0081'              	movwf	(??_UARTInit^(0+128)+1)
  1224  0009' 0800'              	movf	(UARTInit@baud_rate+2)^(0+128),w
  1225  000A' 0082'              	movwf	(??_UARTInit^(0+128)+2)
  1226  000B' 0800'              	movf	(UARTInit@baud_rate+3)^(0+128),w
  1227  000C' 0083'              	movwf	(??_UARTInit^(0+128)+3)
  1228  000D' 3006               	movlw	6
  1229  000E'                    u2875:
  1230  000E' 1003               	clrc
  1231  000F' 0D80'              	rlf	??_UARTInit^(0+128),f
  1232  0010' 0D81'              	rlf	(??_UARTInit^(0+128)+1),f
  1233  0011' 0D82'              	rlf	(??_UARTInit^(0+128)+2),f
  1234  0012' 0D83'              	rlf	(??_UARTInit^(0+128)+3),f
  1235  0013' 3EFF               	addlw	-1
  1236  0014' 1D03               	skipz
  1237  0015' 280E'              	goto	u2875
  1238  0016' 0800'              	movf	(??_UARTInit+3)^(0+128),w
  1239  0017' 0080'              	movwf	(___lldiv@divisor+3)^(0+128)
  1240  0018' 0800'              	movf	(??_UARTInit+2)^(0+128),w
  1241  0019' 0080'              	movwf	(___lldiv@divisor+2)^(0+128)
  1242  001A' 0800'              	movf	(??_UARTInit+1)^(0+128),w
  1243  001B' 0080'              	movwf	(___lldiv@divisor+1)^(0+128)
  1244  001C' 0800'              	movf	??_UARTInit^(0+128),w
  1245  001D' 0080'              	movwf	___lldiv@divisor^(0+128)
  1246  001E' 3000               	movlw	0
  1247  001F' 0080'              	movwf	(___lldiv@dividend+3)^(0+128)
  1248  0020' 303D               	movlw	61
  1249  0021' 0080'              	movwf	(___lldiv@dividend+2)^(0+128)
  1250  0022' 3009               	movlw	9
  1251  0023' 0080'              	movwf	(___lldiv@dividend+1)^(0+128)
  1252  0024' 3000               	movlw	0
  1253  0025' 0080'              	movwf	___lldiv@dividend^(0+128)
  1254  0026' 2000'              	fcall	___lldiv
  1255  0027' 1683               	bsf	3,5	;RP0=1, select bank1
  1256  0028' 1303               	bcf	3,6	;RP1=0, select bank1
  1257  0029' 0800'              	movf	?___lldiv^(0+128),w
  1258  002A' 3EFF               	addlw	255
  1259  002B' 0099               	movwf	25	;volatile
  1260                           
  1261                           ;UART.c: 19:         TXSTAbits.BRGH = 0;
  1262  002C' 1118               	bcf	24,2	;volatile
  1263                           
  1264                           ;UART.c: 20:     } else {
  1265  002D' 2856'              	goto	l2292
  1266  002E'                    l2288:
  1267                           
  1268                           ;UART.c: 21:         SPBRG = 4000000/(16*baud_rate) - 1;
  1269  002E' 0800'              	movf	UARTInit@baud_rate^(0+128),w
  1270  002F' 0080'              	movwf	??_UARTInit^(0+128)
  1271  0030' 0800'              	movf	(UARTInit@baud_rate+1)^(0+128),w
  1272  0031' 0081'              	movwf	(??_UARTInit^(0+128)+1)
  1273  0032' 0800'              	movf	(UARTInit@baud_rate+2)^(0+128),w
  1274  0033' 0082'              	movwf	(??_UARTInit^(0+128)+2)
  1275  0034' 0800'              	movf	(UARTInit@baud_rate+3)^(0+128),w
  1276  0035' 0083'              	movwf	(??_UARTInit^(0+128)+3)
  1277  0036' 3004               	movlw	4
  1278  0037'                    u2885:
  1279  0037' 1003               	clrc
  1280  0038' 0D80'              	rlf	??_UARTInit^(0+128),f
  1281  0039' 0D81'              	rlf	(??_UARTInit^(0+128)+1),f
  1282  003A' 0D82'              	rlf	(??_UARTInit^(0+128)+2),f
  1283  003B' 0D83'              	rlf	(??_UARTInit^(0+128)+3),f
  1284  003C' 3EFF               	addlw	-1
  1285  003D' 1D03               	skipz
  1286  003E' 2837'              	goto	u2885
  1287  003F' 0800'              	movf	(??_UARTInit+3)^(0+128),w
  1288  0040' 0080'              	movwf	(___lldiv@divisor+3)^(0+128)
  1289  0041' 0800'              	movf	(??_UARTInit+2)^(0+128),w
  1290  0042' 0080'              	movwf	(___lldiv@divisor+2)^(0+128)
  1291  0043' 0800'              	movf	(??_UARTInit+1)^(0+128),w
  1292  0044' 0080'              	movwf	(___lldiv@divisor+1)^(0+128)
  1293  0045' 0800'              	movf	??_UARTInit^(0+128),w
  1294  0046' 0080'              	movwf	___lldiv@divisor^(0+128)
  1295  0047' 3000               	movlw	0
  1296  0048' 0080'              	movwf	(___lldiv@dividend+3)^(0+128)
  1297  0049' 303D               	movlw	61
  1298  004A' 0080'              	movwf	(___lldiv@dividend+2)^(0+128)
  1299  004B' 3009               	movlw	9
  1300  004C' 0080'              	movwf	(___lldiv@dividend+1)^(0+128)
  1301  004D' 3000               	movlw	0
  1302  004E' 0080'              	movwf	___lldiv@dividend^(0+128)
  1303  004F' 2000'              	fcall	___lldiv
  1304  0050' 1683               	bsf	3,5	;RP0=1, select bank1
  1305  0051' 1303               	bcf	3,6	;RP1=0, select bank1
  1306  0052' 0800'              	movf	?___lldiv^(0+128),w
  1307  0053' 3EFF               	addlw	255
  1308  0054' 0099               	movwf	25	;volatile
  1309                           
  1310                           ;UART.c: 22:         TXSTAbits.BRGH = 1;
  1311  0055' 1518               	bsf	24,2	;volatile
  1312  0056'                    l2292:
  1313                           
  1314                           ;UART.c: 26:     TXSTAbits.TX9 = 0;
  1315  0056' 1318               	bcf	24,6	;volatile
  1316                           
  1317                           ;UART.c: 27:     TXSTAbits.TXEN = 1;
  1318  0057' 1698               	bsf	24,5	;volatile
  1319                           
  1320                           ;UART.c: 28:     TXSTAbits.SYNC = 0;
  1321  0058' 1218               	bcf	24,4	;volatile
  1322                           
  1323                           ;UART.c: 29:     TXSTAbits.TRMT = 1;
  1324  0059' 1498               	bsf	24,1	;volatile
  1325                           
  1326                           ;UART.c: 32:     RCSTAbits.SPEN = 1;
  1327  005A' 1283               	bcf	3,5	;RP0=0, select bank0
  1328  005B' 1303               	bcf	3,6	;RP1=0, select bank0
  1329  005C' 1798               	bsf	24,7	;volatile
  1330                           
  1331                           ;UART.c: 33:     RCSTAbits.RX9 = 0;
  1332  005D' 1318               	bcf	24,6	;volatile
  1333                           
  1334                           ;UART.c: 34:     RCSTAbits.CREN = 1;
  1335  005E' 1618               	bsf	24,4	;volatile
  1336                           
  1337                           ;UART.c: 35:     RCSTAbits.FERR = 0;
  1338  005F' 1118               	bcf	24,2	;volatile
  1339                           
  1340                           ;UART.c: 36:     RCSTAbits.OERR = 0;
  1341  0060' 1098               	bcf	24,1	;volatile
  1342                           
  1343                           ;UART.c: 42:     TRISBbits.TRISB1 = 1;
  1344  0061' 1683               	bsf	3,5	;RP0=1, select bank1
  1345  0062' 1303               	bcf	3,6	;RP1=0, select bank1
  1346  0063' 1486               	bsf	6,1	;volatile
  1347                           
  1348                           ;UART.c: 43:     TRISBbits.TRISB2 = 1;
  1349  0064' 1506               	bsf	6,2	;volatile
  1350  0065' 0008               	return
  1351  0066'                    __end_of_UARTInit:
  1352                           
  1353                           	psect	text3
  1354  0000'                    __ptext3:	
  1355 ;; *************** function ___lldiv *****************
  1356 ;; Defined at:
  1357 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  divisor         4    0[BANK1 ] unsigned long 
  1360 ;;  dividend        4    4[BANK1 ] unsigned long 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  quotient        4    9[BANK1 ] unsigned long 
  1363 ;;  counter         1   13[BANK1 ] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  4    0[BANK1 ] unsigned long 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1373 ;;      Params:         0       0       8       0
  1374 ;;      Locals:         0       0       5       0
  1375 ;;      Temps:          0       0       1       0
  1376 ;;      Totals:         0       0      14       0
  1377 ;;Total ram usage:       14 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 3
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_UARTInit
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387  0000'                    ___lldiv:	
  1388                           ;psect for function ___lldiv
  1389                           
  1390                           
  1391                           ;incstack = 0
  1392                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1393  0000' 3000               	movlw	0
  1394  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  1395  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  1396  0003' 0080'              	movwf	(___lldiv@quotient+3)^(0+128)
  1397  0004' 3000               	movlw	0
  1398  0005' 0080'              	movwf	(___lldiv@quotient+2)^(0+128)
  1399  0006' 3000               	movlw	0
  1400  0007' 0080'              	movwf	(___lldiv@quotient+1)^(0+128)
  1401  0008' 3000               	movlw	0
  1402  0009' 0080'              	movwf	___lldiv@quotient^(0+128)
  1403  000A' 0800'              	movf	(___lldiv@divisor+3)^(0+128),w
  1404  000B' 0400'              	iorwf	(___lldiv@divisor+2)^(0+128),w
  1405  000C' 0400'              	iorwf	(___lldiv@divisor+1)^(0+128),w
  1406  000D' 0400'              	iorwf	___lldiv@divisor^(0+128),w
  1407  000E' 1903               	skipnz
  1408  000F' 2857'              	goto	l2278
  1409  0010' 0180'              	clrf	___lldiv@counter^(0+128)
  1410  0011' 0A80'              	incf	___lldiv@counter^(0+128),f
  1411  0012'                    l2264:
  1412  0012' 1B80'              	btfsc	(___lldiv@divisor+3)^(0+128),7
  1413  0013' 2822'              	goto	l2266
  1414  0014' 3001               	movlw	1
  1415  0015' 0080'              	movwf	??___lldiv^(0+128)
  1416  0016'                    u2805:
  1417  0016' 1003               	clrc
  1418  0017' 0D80'              	rlf	___lldiv@divisor^(0+128),f
  1419  0018' 0D80'              	rlf	(___lldiv@divisor+1)^(0+128),f
  1420  0019' 0D80'              	rlf	(___lldiv@divisor+2)^(0+128),f
  1421  001A' 0D80'              	rlf	(___lldiv@divisor+3)^(0+128),f
  1422  001B' 0B80'              	decfsz	??___lldiv^(0+128),f
  1423  001C' 2816'              	goto	u2805
  1424  001D' 3001               	movlw	1
  1425  001E' 0080'              	movwf	??___lldiv^(0+128)
  1426  001F' 0800'              	movf	??___lldiv^(0+128),w
  1427  0020' 0780'              	addwf	___lldiv@counter^(0+128),f
  1428  0021' 2812'              	goto	l2264
  1429  0022'                    l2266:
  1430  0022' 3001               	movlw	1
  1431  0023' 0080'              	movwf	??___lldiv^(0+128)
  1432  0024'                    u2825:
  1433  0024' 1003               	clrc
  1434  0025' 0D80'              	rlf	___lldiv@quotient^(0+128),f
  1435  0026' 0D80'              	rlf	(___lldiv@quotient+1)^(0+128),f
  1436  0027' 0D80'              	rlf	(___lldiv@quotient+2)^(0+128),f
  1437  0028' 0D80'              	rlf	(___lldiv@quotient+3)^(0+128),f
  1438  0029' 0B80'              	decfsz	??___lldiv^(0+128),f
  1439  002A' 2824'              	goto	u2825
  1440  002B' 0800'              	movf	(___lldiv@divisor+3)^(0+128),w
  1441  002C' 0200'              	subwf	(___lldiv@dividend+3)^(0+128),w
  1442  002D' 1D03               	skipz
  1443  002E' 2839'              	goto	u2835
  1444  002F' 0800'              	movf	(___lldiv@divisor+2)^(0+128),w
  1445  0030' 0200'              	subwf	(___lldiv@dividend+2)^(0+128),w
  1446  0031' 1D03               	skipz
  1447  0032' 2839'              	goto	u2835
  1448  0033' 0800'              	movf	(___lldiv@divisor+1)^(0+128),w
  1449  0034' 0200'              	subwf	(___lldiv@dividend+1)^(0+128),w
  1450  0035' 1D03               	skipz
  1451  0036' 2839'              	goto	u2835
  1452  0037' 0800'              	movf	___lldiv@divisor^(0+128),w
  1453  0038' 0200'              	subwf	___lldiv@dividend^(0+128),w
  1454  0039'                    u2835:
  1455  0039' 1C03               	skipc
  1456  003A' 284A'              	goto	l2274
  1457  003B' 0800'              	movf	___lldiv@divisor^(0+128),w
  1458  003C' 0280'              	subwf	___lldiv@dividend^(0+128),f
  1459  003D' 0800'              	movf	(___lldiv@divisor+1)^(0+128),w
  1460  003E' 1C03               	skipc
  1461  003F' 0F00'              	incfsz	(___lldiv@divisor+1)^(0+128),w
  1462  0040' 0280'              	subwf	(___lldiv@dividend+1)^(0+128),f
  1463  0041' 0800'              	movf	(___lldiv@divisor+2)^(0+128),w
  1464  0042' 1C03               	skipc
  1465  0043' 0F00'              	incfsz	(___lldiv@divisor+2)^(0+128),w
  1466  0044' 0280'              	subwf	(___lldiv@dividend+2)^(0+128),f
  1467  0045' 0800'              	movf	(___lldiv@divisor+3)^(0+128),w
  1468  0046' 1C03               	skipc
  1469  0047' 0F00'              	incfsz	(___lldiv@divisor+3)^(0+128),w
  1470  0048' 0280'              	subwf	(___lldiv@dividend+3)^(0+128),f
  1471  0049' 1400'              	bsf	___lldiv@quotient^(0+128),0
  1472  004A'                    l2274:
  1473  004A' 3001               	movlw	1
  1474  004B'                    u2845:
  1475  004B' 1003               	clrc
  1476  004C' 0C80'              	rrf	(___lldiv@divisor+3)^(0+128),f
  1477  004D' 0C80'              	rrf	(___lldiv@divisor+2)^(0+128),f
  1478  004E' 0C80'              	rrf	(___lldiv@divisor+1)^(0+128),f
  1479  004F' 0C80'              	rrf	___lldiv@divisor^(0+128),f
  1480  0050' 3EFF               	addlw	-1
  1481  0051' 1D03               	skipz
  1482  0052' 284B'              	goto	u2845
  1483  0053' 3001               	movlw	1
  1484  0054' 0280'              	subwf	___lldiv@counter^(0+128),f
  1485  0055' 1D03               	btfss	3,2
  1486  0056' 2822'              	goto	l2266
  1487  0057'                    l2278:
  1488  0057' 0800'              	movf	(___lldiv@quotient+3)^(0+128),w
  1489  0058' 0080'              	movwf	(?___lldiv+3)^(0+128)
  1490  0059' 0800'              	movf	(___lldiv@quotient+2)^(0+128),w
  1491  005A' 0080'              	movwf	(?___lldiv+2)^(0+128)
  1492  005B' 0800'              	movf	(___lldiv@quotient+1)^(0+128),w
  1493  005C' 0080'              	movwf	(?___lldiv+1)^(0+128)
  1494  005D' 0800'              	movf	___lldiv@quotient^(0+128),w
  1495  005E' 0080'              	movwf	?___lldiv^(0+128)
  1496  005F' 0008               	return
  1497  0060'                    __end_of___lldiv:
  1498                           
  1499                           	psect	text4
  1500  0000'                    __ptext4:	
  1501 ;; *************** function _UARTSendString *****************
  1502 ;; Defined at:
  1503 ;;		line 60 in file "UART.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  str             1    wreg     PTR const unsigned char 
  1506 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1507 ;;  max_length      1    1[BANK1 ] const unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  str             1    3[BANK1 ] PTR const unsigned char 
  1510 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1511 ;;  i               2    4[BANK1 ] int 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1521 ;;      Params:         0       0       1       0
  1522 ;;      Locals:         0       0       3       0
  1523 ;;      Temps:          0       0       1       0
  1524 ;;      Totals:         0       0       5       0
  1525 ;;Total ram usage:        5 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 4
  1528 ;; This function calls:
  1529 ;;		_UARTSendChar
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535  0000'                    _UARTSendString:	
  1536                           ;psect for function _UARTSendString
  1537                           
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1541                           ;UARTSendString@str stored from wreg
  1542  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1543  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1544  0002' 0080'              	movwf	UARTSendString@str^(0+128)
  1545                           
  1546                           ;UART.c: 61:     int i = 0;
  1547  0003' 0180'              	clrf	UARTSendString@i^(0+128)
  1548  0004' 0180'              	clrf	(UARTSendString@i+1)^(0+128)
  1549                           
  1550                           ;UART.c: 62:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  1551  0005' 0180'              	clrf	UARTSendString@i^(0+128)
  1552  0006' 0180'              	clrf	(UARTSendString@i+1)^(0+128)
  1553  0007'                    l2386:
  1554  0007' 0800'              	movf	(UARTSendString@i+1)^(0+128),w
  1555  0008' 3A80               	xorlw	128
  1556  0009' 0080'              	movwf	??_UARTSendString^(0+128)
  1557  000A' 3080               	movlw	128
  1558  000B' 0200'              	subwf	??_UARTSendString^(0+128),w
  1559  000C' 1D03               	skipz
  1560  000D' 2810'              	goto	u3045
  1561  000E' 0800'              	movf	UARTSendString@max_length^(0+128),w
  1562  000F' 0200'              	subwf	UARTSendString@i^(0+128),w
  1563  0010'                    u3045:
  1564  0010' 1803               	skipnc
  1565  0011' 0008               	return
  1566  0012' 1683               	bsf	3,5	;RP0=1, select bank1
  1567  0013' 1303               	bcf	3,6	;RP1=0, select bank1
  1568  0014' 0800'              	movf	UARTSendString@i^(0+128),w
  1569  0015' 0700'              	addwf	UARTSendString@str^(0+128),w
  1570  0016' 0084               	movwf	4
  1571  0017' 2000'              	fcall	stringdir
  1572  0018' 3A00               	xorlw	0
  1573  0019' 1903               	btfsc	3,2
  1574  001A' 0008               	return
  1575                           
  1576                           ;UART.c: 63:         UARTSendChar(str[i]);
  1577  001B' 0800'              	movf	UARTSendString@i^(0+128),w
  1578  001C' 0700'              	addwf	UARTSendString@str^(0+128),w
  1579  001D' 0084               	movwf	4
  1580  001E' 2000'              	fcall	stringdir
  1581  001F' 2000'              	fcall	_UARTSendChar
  1582                           
  1583                           ;UART.c: 64:     }
  1584  0020' 3001               	movlw	1
  1585  0021' 1683               	bsf	3,5	;RP0=1, select bank1
  1586  0022' 1303               	bcf	3,6	;RP1=0, select bank1
  1587  0023' 0780'              	addwf	UARTSendString@i^(0+128),f
  1588  0024' 1803               	skipnc
  1589  0025' 0A80'              	incf	(UARTSendString@i+1)^(0+128),f
  1590  0026' 3000               	movlw	0
  1591  0027' 0780'              	addwf	(UARTSendString@i+1)^(0+128),f
  1592  0028' 2807'              	goto	l2386
  1593  0029'                    __end_of_UARTSendString:
  1594                           
  1595                           	psect	text5
  1596  0000'                    __ptext5:	
  1597 ;; *************** function _UARTSendChar *****************
  1598 ;; Defined at:
  1599 ;;		line 50 in file "UART.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  c               1    wreg     const unsigned char 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  c               1    0[BANK1 ] const unsigned char 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1613 ;;      Params:         0       0       0       0
  1614 ;;      Locals:         0       0       1       0
  1615 ;;      Temps:          0       0       0       0
  1616 ;;      Totals:         0       0       1       0
  1617 ;;Total ram usage:        1 bytes
  1618 ;; Hardware stack levels used: 1
  1619 ;; Hardware stack levels required when called: 3
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_UARTSendString
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627  0000'                    _UARTSendChar:	
  1628                           ;psect for function _UARTSendChar
  1629                           
  1630                           
  1631                           ;incstack = 0
  1632                           ; Regs used in _UARTSendChar: [wreg]
  1633                           ;UARTSendChar@c stored from wreg
  1634  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1635  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1636  0002' 0080'              	movwf	UARTSendChar@c^(0+128)
  1637  0003'                    l22:	
  1638                           ;UART.c: 51:     while (TXSTAbits.TRMT == 0);
  1639                           
  1640  0003' 1C98               	btfss	24,1	;volatile
  1641  0004' 2803'              	goto	l22
  1642                           
  1643                           ;UART.c: 52:     TXREG = c;
  1644  0005' 0800'              	movf	UARTSendChar@c^(0+128),w
  1645  0006' 1283               	bcf	3,5	;RP0=0, select bank0
  1646  0007' 1303               	bcf	3,6	;RP1=0, select bank0
  1647  0008' 0099               	movwf	25	;volatile
  1648  0009' 0008               	return
  1649  000A'                    __end_of_UARTSendChar:
  1650                           
  1651                           	psect	text6
  1652  0000'                    __ptext6:	
  1653 ;; *************** function _UARTReadChar *****************
  1654 ;; Defined at:
  1655 ;;		line 79 in file "UART.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      unsigned char 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0, pclath, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1669 ;;      Params:         0       0       0       0
  1670 ;;      Locals:         0       0       0       0
  1671 ;;      Temps:          0       0       0       0
  1672 ;;      Totals:         0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; Hardware stack levels required when called: 4
  1676 ;; This function calls:
  1677 ;;		_UARTDataReady
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;;		_UARTReadString
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684  0000'                    _UARTReadChar:	
  1685                           ;psect for function _UARTReadChar
  1686                           
  1687  0000'                    l2392:	
  1688                           ;UART.c: 80:     while (!UARTDataReady());
  1689                           
  1690                           ;incstack = 0
  1691                           ; Regs used in _UARTReadChar: [wreg+status,2+status,0+pclath+cstack]
  1692                           
  1693  0000' 2000'              	fcall	_UARTDataReady
  1694  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  1695  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  1696  0003' 0800'              	movf	?_UARTDataReady^(0+128),w
  1697  0004' 0400'              	iorwf	(?_UARTDataReady+1)^(0+128),w
  1698  0005' 1903               	btfsc	3,2
  1699  0006' 2800'              	goto	l2392
  1700                           
  1701                           ;UART.c: 81:     return RCREG;
  1702  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  1703  0008' 1303               	bcf	3,6	;RP1=0, select bank0
  1704  0009' 081A               	movf	26,w	;volatile
  1705  000A' 0008               	return
  1706  000B'                    __end_of_UARTReadChar:
  1707                           
  1708                           	psect	text7
  1709  0000'                    __ptext7:	
  1710 ;; *************** function _UARTDataReady *****************
  1711 ;; Defined at:
  1712 ;;		line 71 in file "UART.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2    0[BANK1 ] short 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1726 ;;      Params:         0       0       2       0
  1727 ;;      Locals:         0       0       0       0
  1728 ;;      Temps:          0       0       3       0
  1729 ;;      Totals:         0       0       5       0
  1730 ;;Total ram usage:        5 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; Hardware stack levels required when called: 3
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_UARTReadChar
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741  0000'                    _UARTDataReady:	
  1742                           ;psect for function _UARTDataReady
  1743                           
  1744                           
  1745                           ;UART.c: 72:     return PIR1bits.RCIF ? 1 : 0;
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _UARTDataReady: [wreg+status,2+status,0]
  1749  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1750  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1751  0002' 0E0C               	swapf	12,w	;volatile
  1752  0003' 1683               	bsf	3,5	;RP0=1, select bank1
  1753  0004' 1303               	bcf	3,6	;RP1=0, select bank1
  1754  0005' 0080'              	movwf	??_UARTDataReady^(0+128)
  1755  0006' 0C00'              	rrf	??_UARTDataReady^(0+128),w
  1756  0007' 3901               	andlw	1
  1757  0008' 0080'              	movwf	(??_UARTDataReady+1)^(0+128)
  1758  0009' 0181'              	clrf	((??_UARTDataReady+1)^(0+128)+1)
  1759  000A' 0800'              	movf	(??_UARTDataReady+1)^(0+128),w
  1760  000B' 0080'              	movwf	?_UARTDataReady^(0+128)
  1761  000C' 0800'              	movf	(??_UARTDataReady+2)^(0+128),w
  1762  000D' 0080'              	movwf	(?_UARTDataReady+1)^(0+128)
  1763  000E' 0008               	return
  1764  000F'                    __end_of_UARTDataReady:
  1765                           
  1766                           	psect	text8
  1767  0000'                    __ptext8:	
  1768 ;; *************** function _Servo_Init *****************
  1769 ;; Defined at:
  1770 ;;		line 16 in file "servo.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1784 ;;      Params:         0       0       0       0
  1785 ;;      Locals:         0       0       0       0
  1786 ;;      Temps:          0       0       0       0
  1787 ;;      Totals:         0       0       0       0
  1788 ;;Total ram usage:        0 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 3
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798  0000'                    _Servo_Init:	
  1799                           ;psect for function _Servo_Init
  1800                           
  1801                           
  1802                           ;servo.c: 54:     TRISBbits.TRISB7 = 0;
  1803                           
  1804                           ;incstack = 0
  1805                           ; Regs used in _Servo_Init: [wreg+status,2+status,0]
  1806  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1807  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1808  0002' 1386               	bcf	6,7	;volatile
  1809                           
  1810                           ;servo.c: 55:     PORTBbits.RB7 = 0;
  1811  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  1812  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  1813  0005' 1386               	bcf	6,7	;volatile
  1814                           
  1815                           ;servo.c: 58:     INTCON = 0;
  1816  0006' 018B               	clrf	11	;volatile
  1817                           
  1818                           ;servo.c: 59:     INTCONbits.GIE = 1;
  1819  0007' 178B               	bsf	11,7	;volatile
  1820                           
  1821                           ;servo.c: 60:     INTCONbits.T0IE = 1;
  1822  0008' 168B               	bsf	11,5	;volatile
  1823                           
  1824                           ;servo.c: 61:     INTCONbits.T0IF = 0;
  1825  0009' 110B               	bcf	11,2	;volatile
  1826                           
  1827                           ;servo.c: 65:     OPTION_REGbits.T0CS=0;
  1828  000A' 1683               	bsf	3,5	;RP0=1, select bank1
  1829  000B' 1303               	bcf	3,6	;RP1=0, select bank1
  1830  000C' 1281               	bcf	1,5	;volatile
  1831                           
  1832                           ;servo.c: 66:     OPTION_REGbits.T0SE = 0;
  1833  000D' 1201               	bcf	1,4	;volatile
  1834                           
  1835                           ;servo.c: 67:     OPTION_REGbits.PSA=0;
  1836  000E' 1181               	bcf	1,3	;volatile
  1837                           
  1838                           ;servo.c: 68:     OPTION_REGbits.PS=0b000;
  1839  000F' 30F8               	movlw	-8
  1840  0010' 0581               	andwf	1,f	;volatile
  1841                           
  1842                           ;servo.c: 70:     TMR0=5;
  1843  0011' 3005               	movlw	5
  1844  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  1845  0013' 1303               	bcf	3,6	;RP1=0, select bank0
  1846  0014' 0081               	movwf	1	;volatile
  1847  0015' 0008               	return
  1848  0016'                    __end_of_Servo_Init:
  1849                           
  1850                           	psect	text9
  1851  0000'                    __ptext9:	
  1852 ;; *************** function _Servo_8_Write *****************
  1853 ;; Defined at:
  1854 ;;		line 124 in file "servo.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  ang             1    wreg     unsigned char 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  ang             1   18[BANK1 ] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1868 ;;      Params:         0       0       0       0
  1869 ;;      Locals:         0       0       1       0
  1870 ;;      Temps:          0       0       3       0
  1871 ;;      Totals:         0       0       4       0
  1872 ;;Total ram usage:        4 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 4
  1875 ;; This function calls:
  1876 ;;		___awdiv
  1877 ;;		___wmul
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883  0000'                    _Servo_8_Write:	
  1884                           ;psect for function _Servo_8_Write
  1885                           
  1886                           
  1887                           ;incstack = 0
  1888                           ; Regs used in _Servo_8_Write: [wreg+status,2+status,0+pclath+cstack]
  1889                           ;Servo_8_Write@ang stored from wreg
  1890  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1891  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1892  0002' 0080'              	movwf	Servo_8_Write@ang^(0+128)
  1893                           
  1894                           ;servo.c: 124: void Servo_8_Write(unsigned char ang);servo.c: 125: {;servo.c: 126:     d
      +                          ata_s[7] = (ang-0)*(4 -1)/(180-0)+1;
  1895  0003' 30B4               	movlw	180
  1896  0004' 0080'              	movwf	___awdiv@divisor^(0+128)
  1897  0005' 3000               	movlw	0
  1898  0006' 0081'              	movwf	(___awdiv@divisor^(0+128)+1)
  1899  0007' 0800'              	movf	Servo_8_Write@ang^(0+128),w
  1900  0008' 0080'              	movwf	??_Servo_8_Write^(0+128)
  1901  0009' 0181'              	clrf	(??_Servo_8_Write^(0+128)+1)
  1902  000A' 0800'              	movf	??_Servo_8_Write^(0+128),w
  1903  000B' 0080'              	movwf	___wmul@multiplier^(0+128)
  1904  000C' 0800'              	movf	(??_Servo_8_Write+1)^(0+128),w
  1905  000D' 0080'              	movwf	(___wmul@multiplier+1)^(0+128)
  1906  000E' 3003               	movlw	3
  1907  000F' 0080'              	movwf	___wmul@multiplicand^(0+128)
  1908  0010' 3000               	movlw	0
  1909  0011' 0081'              	movwf	(___wmul@multiplicand^(0+128)+1)
  1910  0012' 2000'              	fcall	___wmul
  1911  0013' 1683               	bsf	3,5	;RP0=1, select bank1
  1912  0014' 1303               	bcf	3,6	;RP1=0, select bank1
  1913  0015' 0800'              	movf	(?___wmul+1)^(0+128),w
  1914  0016' 0080'              	movwf	(___awdiv@dividend+1)^(0+128)
  1915  0017' 0800'              	movf	?___wmul^(0+128),w
  1916  0018' 0080'              	movwf	___awdiv@dividend^(0+128)
  1917  0019' 2000'              	fcall	___awdiv
  1918  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  1919  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  1920  001C' 0800'              	movf	?___awdiv^(0+128),w
  1921  001D' 3E01               	addlw	1
  1922  001E' 0080'              	movwf	(??_Servo_8_Write+2)^(0+128)
  1923  001F' 0800'              	movf	(??_Servo_8_Write+2)^(0+128),w
  1924  0020' 1283               	bcf	3,5	;RP0=0, select bank0
  1925  0021' 1303               	bcf	3,6	;RP1=0, select bank0
  1926  0022' 0087'              	movwf	_data_s+7
  1927  0023' 0008               	return
  1928  0024'                    __end_of_Servo_8_Write:
  1929                           
  1930                           	psect	text10
  1931  0000'                    __ptext10:	
  1932 ;; *************** function ___wmul *****************
  1933 ;; Defined at:
  1934 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  multiplier      2    0[BANK1 ] unsigned int 
  1937 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  product         2    4[BANK1 ] unsigned int 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  2    0[BANK1 ] unsigned int 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1949 ;;      Params:         0       0       4       0
  1950 ;;      Locals:         0       0       2       0
  1951 ;;      Temps:          0       0       0       0
  1952 ;;      Totals:         0       0       6       0
  1953 ;;Total ram usage:        6 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 3
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_Servo_8_Write
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963  0000'                    ___wmul:	
  1964                           ;psect for function ___wmul
  1965                           
  1966                           
  1967                           ;incstack = 0
  1968                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1969  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1970  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1971  0002' 0180'              	clrf	___wmul@product^(0+128)
  1972  0003' 0180'              	clrf	(___wmul@product+1)^(0+128)
  1973  0004'                    l2324:
  1974  0004' 1C00'              	btfss	___wmul@multiplier^(0+128),0
  1975  0005' 280C'              	goto	l256
  1976  0006' 0800'              	movf	___wmul@multiplicand^(0+128),w
  1977  0007' 0780'              	addwf	___wmul@product^(0+128),f
  1978  0008' 1803               	skipnc
  1979  0009' 0A80'              	incf	(___wmul@product+1)^(0+128),f
  1980  000A' 0800'              	movf	(___wmul@multiplicand+1)^(0+128),w
  1981  000B' 0780'              	addwf	(___wmul@product+1)^(0+128),f
  1982  000C'                    l256:
  1983  000C' 3001               	movlw	1
  1984  000D'                    u2915:
  1985  000D' 1003               	clrc
  1986  000E' 0D80'              	rlf	___wmul@multiplicand^(0+128),f
  1987  000F' 0D80'              	rlf	(___wmul@multiplicand+1)^(0+128),f
  1988  0010' 3EFF               	addlw	-1
  1989  0011' 1D03               	skipz
  1990  0012' 280D'              	goto	u2915
  1991  0013' 3001               	movlw	1
  1992  0014'                    u2925:
  1993  0014' 1003               	clrc
  1994  0015' 0C80'              	rrf	(___wmul@multiplier+1)^(0+128),f
  1995  0016' 0C80'              	rrf	___wmul@multiplier^(0+128),f
  1996  0017' 3EFF               	addlw	-1
  1997  0018' 1D03               	skipz
  1998  0019' 2814'              	goto	u2925
  1999  001A' 0800'              	movf	___wmul@multiplier^(0+128),w
  2000  001B' 0400'              	iorwf	(___wmul@multiplier+1)^(0+128),w
  2001  001C' 1D03               	btfss	3,2
  2002  001D' 2804'              	goto	l2324
  2003  001E' 0800'              	movf	(___wmul@product+1)^(0+128),w
  2004  001F' 0080'              	movwf	(?___wmul+1)^(0+128)
  2005  0020' 0800'              	movf	___wmul@product^(0+128),w
  2006  0021' 0080'              	movwf	?___wmul^(0+128)
  2007  0022' 0008               	return
  2008  0023'                    __end_of___wmul:
  2009                           
  2010                           	psect	text11
  2011  0000'                    __ptext11:	
  2012 ;; *************** function ___awdiv *****************
  2013 ;; Defined at:
  2014 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  divisor         2    6[BANK1 ] int 
  2017 ;;  dividend        2    8[BANK1 ] int 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  quotient        2   13[BANK1 ] int 
  2020 ;;  sign            1   12[BANK1 ] unsigned char 
  2021 ;;  counter         1   11[BANK1 ] unsigned char 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  2    6[BANK1 ] int 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2031 ;;      Params:         0       0       4       0
  2032 ;;      Locals:         0       0       4       0
  2033 ;;      Temps:          0       0       1       0
  2034 ;;      Totals:         0       0       9       0
  2035 ;;Total ram usage:        9 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 3
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_Servo_8_Write
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045  0000'                    ___awdiv:	
  2046                           ;psect for function ___awdiv
  2047                           
  2048                           
  2049                           ;incstack = 0
  2050                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2051  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2052  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2053  0002' 0180'              	clrf	___awdiv@sign^(0+128)
  2054  0003' 1F80'              	btfss	(___awdiv@divisor+1)^(0+128),7
  2055  0004' 280C'              	goto	l2344
  2056  0005' 0980'              	comf	___awdiv@divisor^(0+128),f
  2057  0006' 0980'              	comf	(___awdiv@divisor+1)^(0+128),f
  2058  0007' 0A80'              	incf	___awdiv@divisor^(0+128),f
  2059  0008' 1903               	skipnz
  2060  0009' 0A80'              	incf	(___awdiv@divisor+1)^(0+128),f
  2061  000A' 0180'              	clrf	___awdiv@sign^(0+128)
  2062  000B' 0A80'              	incf	___awdiv@sign^(0+128),f
  2063  000C'                    l2344:
  2064  000C' 1F80'              	btfss	(___awdiv@dividend+1)^(0+128),7
  2065  000D' 2817'              	goto	l2350
  2066  000E' 0980'              	comf	___awdiv@dividend^(0+128),f
  2067  000F' 0980'              	comf	(___awdiv@dividend+1)^(0+128),f
  2068  0010' 0A80'              	incf	___awdiv@dividend^(0+128),f
  2069  0011' 1903               	skipnz
  2070  0012' 0A80'              	incf	(___awdiv@dividend+1)^(0+128),f
  2071  0013' 3001               	movlw	1
  2072  0014' 0080'              	movwf	??___awdiv^(0+128)
  2073  0015' 0800'              	movf	??___awdiv^(0+128),w
  2074  0016' 0680'              	xorwf	___awdiv@sign^(0+128),f
  2075  0017'                    l2350:
  2076  0017' 0180'              	clrf	___awdiv@quotient^(0+128)
  2077  0018' 0180'              	clrf	(___awdiv@quotient+1)^(0+128)
  2078  0019' 0800'              	movf	___awdiv@divisor^(0+128),w
  2079  001A' 0400'              	iorwf	(___awdiv@divisor+1)^(0+128),w
  2080  001B' 1903               	btfsc	3,2
  2081  001C' 284E'              	goto	l2372
  2082  001D' 0180'              	clrf	___awdiv@counter^(0+128)
  2083  001E' 0A80'              	incf	___awdiv@counter^(0+128),f
  2084  001F'                    l2360:
  2085  001F' 1B80'              	btfsc	(___awdiv@divisor+1)^(0+128),7
  2086  0020' 282D'              	goto	l2362
  2087  0021' 3001               	movlw	1
  2088  0022'                    u2975:
  2089  0022' 1003               	clrc
  2090  0023' 0D80'              	rlf	___awdiv@divisor^(0+128),f
  2091  0024' 0D80'              	rlf	(___awdiv@divisor+1)^(0+128),f
  2092  0025' 3EFF               	addlw	-1
  2093  0026' 1D03               	skipz
  2094  0027' 2822'              	goto	u2975
  2095  0028' 3001               	movlw	1
  2096  0029' 0080'              	movwf	??___awdiv^(0+128)
  2097  002A' 0800'              	movf	??___awdiv^(0+128),w
  2098  002B' 0780'              	addwf	___awdiv@counter^(0+128),f
  2099  002C' 281F'              	goto	l2360
  2100  002D'                    l2362:
  2101  002D' 3001               	movlw	1
  2102  002E'                    u2995:
  2103  002E' 1003               	clrc
  2104  002F' 0D80'              	rlf	___awdiv@quotient^(0+128),f
  2105  0030' 0D80'              	rlf	(___awdiv@quotient+1)^(0+128),f
  2106  0031' 3EFF               	addlw	-1
  2107  0032' 1D03               	skipz
  2108  0033' 282E'              	goto	u2995
  2109  0034' 0800'              	movf	(___awdiv@divisor+1)^(0+128),w
  2110  0035' 0200'              	subwf	(___awdiv@dividend+1)^(0+128),w
  2111  0036' 1D03               	skipz
  2112  0037' 283A'              	goto	u3005
  2113  0038' 0800'              	movf	___awdiv@divisor^(0+128),w
  2114  0039' 0200'              	subwf	___awdiv@dividend^(0+128),w
  2115  003A'                    u3005:
  2116  003A' 1C03               	skipc
  2117  003B' 2843'              	goto	l2368
  2118  003C' 0800'              	movf	___awdiv@divisor^(0+128),w
  2119  003D' 0280'              	subwf	___awdiv@dividend^(0+128),f
  2120  003E' 0800'              	movf	(___awdiv@divisor+1)^(0+128),w
  2121  003F' 1C03               	skipc
  2122  0040' 0380'              	decf	(___awdiv@dividend+1)^(0+128),f
  2123  0041' 0280'              	subwf	(___awdiv@dividend+1)^(0+128),f
  2124  0042' 1400'              	bsf	___awdiv@quotient^(0+128),0
  2125  0043'                    l2368:
  2126  0043' 3001               	movlw	1
  2127  0044'                    u3015:
  2128  0044' 1003               	clrc
  2129  0045' 0C80'              	rrf	(___awdiv@divisor+1)^(0+128),f
  2130  0046' 0C80'              	rrf	___awdiv@divisor^(0+128),f
  2131  0047' 3EFF               	addlw	-1
  2132  0048' 1D03               	skipz
  2133  0049' 2844'              	goto	u3015
  2134  004A' 3001               	movlw	1
  2135  004B' 0280'              	subwf	___awdiv@counter^(0+128),f
  2136  004C' 1D03               	btfss	3,2
  2137  004D' 282D'              	goto	l2362
  2138  004E'                    l2372:
  2139  004E' 0800'              	movf	___awdiv@sign^(0+128),w
  2140  004F' 1903               	btfsc	3,2
  2141  0050' 2856'              	goto	l2376
  2142  0051' 0980'              	comf	___awdiv@quotient^(0+128),f
  2143  0052' 0980'              	comf	(___awdiv@quotient+1)^(0+128),f
  2144  0053' 0A80'              	incf	___awdiv@quotient^(0+128),f
  2145  0054' 1903               	skipnz
  2146  0055' 0A80'              	incf	(___awdiv@quotient+1)^(0+128),f
  2147  0056'                    l2376:
  2148  0056' 0800'              	movf	(___awdiv@quotient+1)^(0+128),w
  2149  0057' 0080'              	movwf	(?___awdiv+1)^(0+128)
  2150  0058' 0800'              	movf	___awdiv@quotient^(0+128),w
  2151  0059' 0080'              	movwf	?___awdiv^(0+128)
  2152  005A' 0008               	return
  2153  005B'                    __end_of___awdiv:
  2154                           
  2155                           	psect	text12
  2156  0000'                    __ptext12:	
  2157 ;; *************** function _TMR0_ISR *****************
  2158 ;; Defined at:
  2159 ;;		line 136 in file "servo.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2173 ;;      Params:         0       0       0       0
  2174 ;;      Locals:         0       0       0       0
  2175 ;;      Temps:          0       5       0       0
  2176 ;;      Totals:         0       5       0       0
  2177 ;;Total ram usage:        5 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 2
  2180 ;; This function calls:
  2181 ;;		___fldiv
  2182 ;;		___flmul
  2183 ;;		___fltol
  2184 ;;		___xxtofl
  2185 ;; This function is called by:
  2186 ;;		Interrupt level 1
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190  0000'                    _TMR0_ISR:	
  2191                           ;psect for function _TMR0_ISR
  2192                           
  2193                           
  2194                           ;servo.c: 138:     if(PIR1bits.CCP1IF == 1){
  2195  0000' 1D0C               	btfss	12,2	;volatile
  2196  0001' 2850'              	goto	i1l2210
  2197                           
  2198                           ;servo.c: 139:         valor_pasos = (CCPR1H << 8) + CCPR1L;
  2199  0002' 0816               	movf	22,w	;volatile
  2200  0003' 008B'              	movwf	_valor_pasos+1
  2201  0004' 0815               	movf	21,w	;volatile
  2202  0005' 008A'              	movwf	_valor_pasos
  2203                           
  2204                           ;servo.c: 140:         TMR1L = 0x00;
  2205  0006' 018E               	clrf	14	;volatile
  2206                           
  2207                           ;servo.c: 141:         TMR1H = 0x00;
  2208  0007' 018F               	clrf	15	;volatile
  2209                           
  2210                           ;servo.c: 142:         periodo = valor_pasos * 0.000008;
  2211  0008' 3037               	movlw	55
  2212  0009' 0083'              	movwf	___flmul@b+3
  2213  000A' 3006               	movlw	6
  2214  000B' 0082'              	movwf	___flmul@b+2
  2215  000C' 3037               	movlw	55
  2216  000D' 0081'              	movwf	___flmul@b+1
  2217  000E' 30BD               	movlw	189
  2218  000F' 0080'              	movwf	___flmul@b
  2219  0010' 080A'              	movf	_valor_pasos,w
  2220  0011' 0080'              	movwf	___xxtofl@val
  2221  0012' 080B'              	movf	_valor_pasos+1,w
  2222  0013' 0081'              	movwf	___xxtofl@val+1
  2223  0014' 0182'              	clrf	___xxtofl@val+2
  2224  0015' 0183'              	clrf	___xxtofl@val+3
  2225  0016' 3000               	movlw	0
  2226  0017' 2000'              	fcall	___xxtofl
  2227  0018' 0803'              	movf	?___xxtofl+3,w
  2228  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  2229  001A' 1303               	bcf	3,6	;RP1=0, select bank0
  2230  001B' 0087'              	movwf	___flmul@a+3
  2231  001C' 0802'              	movf	?___xxtofl+2,w
  2232  001D' 0086'              	movwf	___flmul@a+2
  2233  001E' 0801'              	movf	?___xxtofl+1,w
  2234  001F' 0085'              	movwf	___flmul@a+1
  2235  0020' 0800'              	movf	?___xxtofl,w
  2236  0021' 0084'              	movwf	___flmul@a
  2237  0022' 2000'              	fcall	___flmul
  2238  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  2239  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  2240  0025' 0803'              	movf	?___flmul+3,w
  2241  0026' 0091'              	movwf	_periodo+3
  2242  0027' 0802'              	movf	?___flmul+2,w
  2243  0028' 0090'              	movwf	_periodo+2
  2244  0029' 0801'              	movf	?___flmul+1,w
  2245  002A' 008F'              	movwf	_periodo+1
  2246  002B' 0800'              	movf	?___flmul,w
  2247  002C' 008E'              	movwf	_periodo
  2248                           
  2249                           ;servo.c: 143:         frecuencia = 1 / periodo;
  2250  002D' 303F               	movlw	63
  2251  002E' 0087'              	movwf	___fldiv@b+3
  2252  002F' 3080               	movlw	128
  2253  0030' 0086'              	movwf	___fldiv@b+2
  2254  0031' 3000               	movlw	0
  2255  0032' 0085'              	movwf	___fldiv@b+1
  2256  0033' 3000               	movlw	0
  2257  0034' 0084'              	movwf	___fldiv@b
  2258  0035' 0811'              	movf	_periodo+3,w
  2259  0036' 0083'              	movwf	___fldiv@a+3
  2260  0037' 0810'              	movf	_periodo+2,w
  2261  0038' 0082'              	movwf	___fldiv@a+2
  2262  0039' 080F'              	movf	_periodo+1,w
  2263  003A' 0081'              	movwf	___fldiv@a+1
  2264  003B' 080E'              	movf	_periodo,w
  2265  003C' 0080'              	movwf	___fldiv@a
  2266  003D' 2000'              	fcall	___fldiv
  2267  003E' 0803'              	movf	?___fldiv+3,w
  2268  003F' 1283               	bcf	3,5	;RP0=0, select bank0
  2269  0040' 1303               	bcf	3,6	;RP1=0, select bank0
  2270  0041' 0090'              	movwf	___fltol@f1+3
  2271  0042' 0802'              	movf	?___fldiv+2,w
  2272  0043' 008F'              	movwf	___fltol@f1+2
  2273  0044' 0801'              	movf	?___fldiv+1,w
  2274  0045' 008E'              	movwf	___fltol@f1+1
  2275  0046' 0800'              	movf	?___fldiv,w
  2276  0047' 008D'              	movwf	___fltol@f1
  2277  0048' 2000'              	fcall	___fltol
  2278  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  2279  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  2280  004B' 080E'              	movf	?___fltol+1,w
  2281  004C' 0089'              	movwf	_frecuencia+1
  2282  004D' 080D'              	movf	?___fltol,w
  2283  004E' 0088'              	movwf	_frecuencia
  2284                           
  2285                           ;servo.c: 144:         PIR1bits.CCP1IF = 0;
  2286  004F' 110C               	bcf	12,2	;volatile
  2287  0050'                    i1l2210:
  2288                           
  2289                           ;servo.c: 146:     if(INTCONbits.T0IF == 1)
  2290  0050' 1D0B               	btfss	11,2	;volatile
  2291  0051' 2875'              	goto	i1l170
  2292                           
  2293                           ;servo.c: 147:     {;servo.c: 148:         cont_sr = cont_sr + 1;
  2294  0052' 080C'              	movf	_cont_sr,w
  2295  0053' 3E01               	addlw	1
  2296  0054' 008C'              	movwf	_cont_sr
  2297  0055' 080D'              	movf	_cont_sr+1,w
  2298  0056' 1803               	skipnc
  2299  0057' 3E01               	addlw	1
  2300  0058' 3E00               	addlw	0
  2301  0059' 008D'              	movwf	_cont_sr+1
  2302                           
  2303                           ;servo.c: 149:         if(cont_sr > 41){
  2304  005A' 3000               	movlw	0
  2305  005B' 020D'              	subwf	_cont_sr+1,w
  2306  005C' 302A               	movlw	42
  2307  005D' 1903               	skipnz
  2308  005E' 020C'              	subwf	_cont_sr,w
  2309  005F' 1C03               	skipc
  2310  0060' 2863'              	goto	i1l2218
  2311                           
  2312                           ;servo.c: 150:             cont_sr = 0;
  2313  0061' 018C'              	clrf	_cont_sr
  2314  0062' 018D'              	clrf	_cont_sr+1
  2315  0063'                    i1l2218:
  2316                           
  2317                           ;servo.c: 181:         if(cont_sr < data_s[7]){PORTBbits.RB7 = 1;} else{PORTBbits.RB7 = 
      +                          0;}
  2318  0063' 0807'              	movf	_data_s+7,w
  2319  0064' 009A'              	movwf	??_TMR0_ISR
  2320  0065' 019B'              	clrf	??_TMR0_ISR+1
  2321  0066' 081B'              	movf	??_TMR0_ISR+1,w
  2322  0067' 020D'              	subwf	_cont_sr+1,w
  2323  0068' 1D03               	skipz
  2324  0069' 286C'              	goto	u278_25
  2325  006A' 081A'              	movf	??_TMR0_ISR,w
  2326  006B' 020C'              	subwf	_cont_sr,w
  2327  006C'                    u278_25:
  2328  006C' 1803               	skipnc
  2329  006D' 2870'              	goto	i1l168
  2330  006E' 1786               	bsf	6,7	;volatile
  2331  006F' 2871'              	goto	i1l2222
  2332  0070'                    i1l168:
  2333  0070' 1386               	bcf	6,7	;volatile
  2334  0071'                    i1l2222:
  2335                           
  2336                           ;servo.c: 184:         TMR0 = 5;
  2337  0071' 3005               	movlw	5
  2338  0072' 0081               	movwf	1	;volatile
  2339                           
  2340                           ;servo.c: 185:         INTCONbits.T0IF = 0;
  2341  0073' 110B               	bcf	11,2	;volatile
  2342                           
  2343                           ;servo.c: 186:         INTCONbits.T0IE = 1;
  2344  0074' 168B               	bsf	11,5	;volatile
  2345  0075'                    i1l170:
  2346  0075' 081E'              	movf	??_TMR0_ISR+4,w
  2347  0076' 00FF               	movwf	127
  2348  0077' 081D'              	movf	??_TMR0_ISR+3,w
  2349  0078' 008A               	movwf	10
  2350  0079' 0E1C'              	swapf	??_TMR0_ISR+2,w
  2351  007A' 0083               	movwf	3
  2352  007B' 0EFE               	swapf	126,f
  2353  007C' 0E7E               	swapf	126,w
  2354  007D' 0009               	retfie
  2355  007E'                    __end_of_TMR0_ISR:
  2356                           
  2357                           	psect	intentry
  2358  0000'                    __pintentry:	
  2359                           ;incstack = 0
  2360                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2361                           
  2362  0000'                    interrupt_function:
  2363  007E                     saved_w	set	btemp
  2364  0000' 00FE               	movwf	btemp
  2365  0001' 0E03               	swapf	3,w
  2366  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  2367  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  2368  0004' 009C'              	movwf	??_TMR0_ISR+2
  2369  0005' 080A               	movf	10,w
  2370  0006' 009D'              	movwf	??_TMR0_ISR+3
  2371  0007' 087F               	movf	btemp+1,w
  2372  0008' 009E'              	movwf	??_TMR0_ISR+4
  2373  0009' 2800'              	ljmp	_TMR0_ISR
  2374                           
  2375                           	psect	text13
  2376  0000'                    __ptext13:	
  2377 ;; *************** function ___xxtofl *****************
  2378 ;; Defined at:
  2379 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  sign            1    wreg     unsigned char 
  2382 ;;  val             4    0[COMMON] long 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  sign            1    8[COMMON] unsigned char 
  2385 ;;  arg             4   10[COMMON] unsigned long 
  2386 ;;  exp             1    9[COMMON] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  4    0[COMMON] unsigned char 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2396 ;;      Params:         4       0       0       0
  2397 ;;      Locals:         6       0       0       0
  2398 ;;      Temps:          4       0       0       0
  2399 ;;      Totals:        14       0       0       0
  2400 ;;Total ram usage:       14 bytes
  2401 ;; Hardware stack levels used: 1
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_TMR0_ISR
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409  0000'                    ___xxtofl:	
  2410                           ;psect for function ___xxtofl
  2411                           
  2412                           
  2413                           ;incstack = 0
  2414                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2415                           ;___xxtofl@sign stored from wreg
  2416  0000' 0088'              	movwf	___xxtofl@sign
  2417  0001' 0808'              	movf	___xxtofl@sign,w
  2418  0002' 1D03               	btfss	3,2
  2419  0003' 1F83'              	btfss	___xxtofl@val+3,7
  2420  0004' 2815'              	goto	i1l2052
  2421  0005' 0900'              	comf	___xxtofl@val,w
  2422  0006' 008A'              	movwf	___xxtofl@arg
  2423  0007' 0901'              	comf	___xxtofl@val+1,w
  2424  0008' 008B'              	movwf	___xxtofl@arg+1
  2425  0009' 0902'              	comf	___xxtofl@val+2,w
  2426  000A' 008C'              	movwf	___xxtofl@arg+2
  2427  000B' 0903'              	comf	___xxtofl@val+3,w
  2428  000C' 008D'              	movwf	___xxtofl@arg+3
  2429  000D' 0A8A'              	incf	___xxtofl@arg,f
  2430  000E' 1903               	skipnz
  2431  000F' 0A8B'              	incf	___xxtofl@arg+1,f
  2432  0010' 1903               	skipnz
  2433  0011' 0A8C'              	incf	___xxtofl@arg+2,f
  2434  0012' 1903               	skipnz
  2435  0013' 0A8D'              	incf	___xxtofl@arg+3,f
  2436  0014' 281D'              	goto	i1l689
  2437  0015'                    i1l2052:
  2438  0015' 0803'              	movf	___xxtofl@val+3,w
  2439  0016' 008D'              	movwf	___xxtofl@arg+3
  2440  0017' 0802'              	movf	___xxtofl@val+2,w
  2441  0018' 008C'              	movwf	___xxtofl@arg+2
  2442  0019' 0801'              	movf	___xxtofl@val+1,w
  2443  001A' 008B'              	movwf	___xxtofl@arg+1
  2444  001B' 0800'              	movf	___xxtofl@val,w
  2445  001C' 008A'              	movwf	___xxtofl@arg
  2446  001D'                    i1l689:
  2447  001D' 0803'              	movf	___xxtofl@val+3,w
  2448  001E' 0402'              	iorwf	___xxtofl@val+2,w
  2449  001F' 0401'              	iorwf	___xxtofl@val+1,w
  2450  0020' 0400'              	iorwf	___xxtofl@val,w
  2451  0021' 1D03               	skipz
  2452  0022' 282C'              	goto	i1l2058
  2453  0023' 3000               	movlw	0
  2454  0024' 0083'              	movwf	?___xxtofl+3
  2455  0025' 3000               	movlw	0
  2456  0026' 0082'              	movwf	?___xxtofl+2
  2457  0027' 3000               	movlw	0
  2458  0028' 0081'              	movwf	?___xxtofl+1
  2459  0029' 3000               	movlw	0
  2460  002A' 0080'              	movwf	?___xxtofl
  2461  002B' 0008               	return
  2462  002C'                    i1l2058:
  2463  002C' 3096               	movlw	150
  2464  002D' 0084'              	movwf	??___xxtofl
  2465  002E' 0804'              	movf	??___xxtofl,w
  2466  002F' 0089'              	movwf	___xxtofl@exp
  2467  0030'                    i1l2062:
  2468  0030' 30FE               	movlw	254
  2469  0031' 050D'              	andwf	___xxtofl@arg+3,w
  2470  0032' 1903               	btfsc	3,2
  2471  0033' 285D'              	goto	i1l695
  2472  0034' 3001               	movlw	1
  2473  0035' 0084'              	movwf	??___xxtofl
  2474  0036' 0804'              	movf	??___xxtofl,w
  2475  0037' 0789'              	addwf	___xxtofl@exp,f
  2476  0038' 3001               	movlw	1
  2477  0039'                    u251_25:
  2478  0039' 1003               	clrc
  2479  003A' 0C8D'              	rrf	___xxtofl@arg+3,f
  2480  003B' 0C8C'              	rrf	___xxtofl@arg+2,f
  2481  003C' 0C8B'              	rrf	___xxtofl@arg+1,f
  2482  003D' 0C8A'              	rrf	___xxtofl@arg,f
  2483  003E' 3EFF               	addlw	-1
  2484  003F' 1D03               	skipz
  2485  0040' 2839'              	goto	u251_25
  2486  0041' 2830'              	goto	i1l2062
  2487  0042'                    i1l2064:
  2488  0042' 3001               	movlw	1
  2489  0043' 0084'              	movwf	??___xxtofl
  2490  0044' 0804'              	movf	??___xxtofl,w
  2491  0045' 0789'              	addwf	___xxtofl@exp,f
  2492  0046' 3001               	movlw	1
  2493  0047' 078A'              	addwf	___xxtofl@arg,f
  2494  0048' 3000               	movlw	0
  2495  0049' 1803               	skipnc
  2496  004A' 3001               	movlw	1
  2497  004B' 078B'              	addwf	___xxtofl@arg+1,f
  2498  004C' 3000               	movlw	0
  2499  004D' 1803               	skipnc
  2500  004E' 3001               	movlw	1
  2501  004F' 078C'              	addwf	___xxtofl@arg+2,f
  2502  0050' 3000               	movlw	0
  2503  0051' 1803               	skipnc
  2504  0052' 3001               	movlw	1
  2505  0053' 078D'              	addwf	___xxtofl@arg+3,f
  2506  0054' 3001               	movlw	1
  2507  0055'                    u253_25:
  2508  0055' 1003               	clrc
  2509  0056' 0C8D'              	rrf	___xxtofl@arg+3,f
  2510  0057' 0C8C'              	rrf	___xxtofl@arg+2,f
  2511  0058' 0C8B'              	rrf	___xxtofl@arg+1,f
  2512  0059' 0C8A'              	rrf	___xxtofl@arg,f
  2513  005A' 3EFF               	addlw	-1
  2514  005B' 1D03               	skipz
  2515  005C' 2855'              	goto	u253_25
  2516  005D'                    i1l695:
  2517  005D' 30FF               	movlw	255
  2518  005E' 050D'              	andwf	___xxtofl@arg+3,w
  2519  005F' 1903               	btfsc	3,2
  2520  0060' 2871'              	goto	i1l2072
  2521  0061' 2842'              	goto	i1l2064
  2522  0062'                    i1l2074:
  2523  0062' 3002               	movlw	2
  2524  0063' 0209'              	subwf	___xxtofl@exp,w
  2525  0064' 1C03               	btfss	3,0
  2526  0065' 2873'              	goto	i1l702
  2527  0066' 3001               	movlw	1
  2528  0067' 0289'              	subwf	___xxtofl@exp,f
  2529  0068' 3001               	movlw	1
  2530  0069' 0084'              	movwf	??___xxtofl
  2531  006A'                    u255_25:
  2532  006A' 1003               	clrc
  2533  006B' 0D8A'              	rlf	___xxtofl@arg,f
  2534  006C' 0D8B'              	rlf	___xxtofl@arg+1,f
  2535  006D' 0D8C'              	rlf	___xxtofl@arg+2,f
  2536  006E' 0D8D'              	rlf	___xxtofl@arg+3,f
  2537  006F' 0B84'              	decfsz	??___xxtofl,f
  2538  0070' 286A'              	goto	u255_25
  2539  0071'                    i1l2072:
  2540  0071' 1F8C'              	btfss	___xxtofl@arg+2,7
  2541  0072' 2862'              	goto	i1l2074
  2542  0073'                    i1l702:
  2543  0073' 1809'              	btfsc	___xxtofl@exp,0
  2544  0074' 287D'              	goto	i1l703
  2545  0075' 30FF               	movlw	255
  2546  0076' 058A'              	andwf	___xxtofl@arg,f
  2547  0077' 30FF               	movlw	255
  2548  0078' 058B'              	andwf	___xxtofl@arg+1,f
  2549  0079' 307F               	movlw	127
  2550  007A' 058C'              	andwf	___xxtofl@arg+2,f
  2551  007B' 30FF               	movlw	255
  2552  007C' 058D'              	andwf	___xxtofl@arg+3,f
  2553  007D'                    i1l703:
  2554  007D' 1003               	clrc
  2555  007E' 0C89'              	rrf	___xxtofl@exp,f
  2556  007F' 0809'              	movf	___xxtofl@exp,w
  2557  0080' 0084'              	movwf	??___xxtofl
  2558  0081' 0185'              	clrf	??___xxtofl+1
  2559  0082' 0186'              	clrf	??___xxtofl+2
  2560  0083' 0187'              	clrf	??___xxtofl+3
  2561  0084' 3018               	movlw	24
  2562  0085'                    u259_25:
  2563  0085' 1003               	clrc
  2564  0086' 0D84'              	rlf	??___xxtofl,f
  2565  0087' 0D85'              	rlf	??___xxtofl+1,f
  2566  0088' 0D86'              	rlf	??___xxtofl+2,f
  2567  0089' 0D87'              	rlf	??___xxtofl+3,f
  2568  008A' 3EFF               	addlw	-1
  2569  008B' 1D03               	skipz
  2570  008C' 2885'              	goto	u259_25
  2571  008D' 0804'              	movf	??___xxtofl,w
  2572  008E' 048A'              	iorwf	___xxtofl@arg,f
  2573  008F' 0805'              	movf	??___xxtofl+1,w
  2574  0090' 048B'              	iorwf	___xxtofl@arg+1,f
  2575  0091' 0806'              	movf	??___xxtofl+2,w
  2576  0092' 048C'              	iorwf	___xxtofl@arg+2,f
  2577  0093' 0807'              	movf	??___xxtofl+3,w
  2578  0094' 048D'              	iorwf	___xxtofl@arg+3,f
  2579  0095' 0808'              	movf	___xxtofl@sign,w
  2580  0096' 1D03               	btfss	3,2
  2581  0097' 1F83'              	btfss	___xxtofl@val+3,7
  2582  0098' 289A'              	goto	i1l2086
  2583  0099' 178D'              	bsf	___xxtofl@arg+3,7
  2584  009A'                    i1l2086:
  2585  009A' 080D'              	movf	___xxtofl@arg+3,w
  2586  009B' 0083'              	movwf	?___xxtofl+3
  2587  009C' 080C'              	movf	___xxtofl@arg+2,w
  2588  009D' 0082'              	movwf	?___xxtofl+2
  2589  009E' 080B'              	movf	___xxtofl@arg+1,w
  2590  009F' 0081'              	movwf	?___xxtofl+1
  2591  00A0' 080A'              	movf	___xxtofl@arg,w
  2592  00A1' 0080'              	movwf	?___xxtofl
  2593  00A2' 0008               	return
  2594  00A3'                    __end_of___xxtofl:
  2595                           
  2596                           	psect	text14
  2597  0000'                    __ptext14:	
  2598 ;; *************** function ___fltol *****************
  2599 ;; Defined at:
  2600 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  f1              4   13[BANK0 ] unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  exp1            1   23[BANK0 ] unsigned char 
  2605 ;;  sign1           1   22[BANK0 ] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  4   13[BANK0 ] long 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2615 ;;      Params:         0       4       0       0
  2616 ;;      Locals:         0       2       0       0
  2617 ;;      Temps:          0       5       0       0
  2618 ;;      Totals:         0      11       0       0
  2619 ;;Total ram usage:       11 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_TMR0_ISR
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628  0000'                    ___fltol:	
  2629                           ;psect for function ___fltol
  2630                           
  2631                           
  2632                           ;incstack = 0
  2633                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2634  0000' 1003               	clrc
  2635  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  2636  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  2637  0003' 0D0F'              	rlf	___fltol@f1+2,w
  2638  0004' 0D10'              	rlf	___fltol@f1+3,w
  2639  0005' 0091'              	movwf	??___fltol
  2640  0006' 0811'              	movf	??___fltol,w
  2641  0007' 0097'              	movwf	___fltol@exp1
  2642  0008' 0817'              	movf	___fltol@exp1,w
  2643  0009' 1D03               	btfss	3,2
  2644  000A' 2814'              	goto	i1l1734
  2645  000B'                    i1l1730:
  2646  000B' 3000               	movlw	0
  2647  000C' 0090'              	movwf	?___fltol+3
  2648  000D' 3000               	movlw	0
  2649  000E' 008F'              	movwf	?___fltol+2
  2650  000F' 3000               	movlw	0
  2651  0010' 008E'              	movwf	?___fltol+1
  2652  0011' 3000               	movlw	0
  2653  0012' 008D'              	movwf	?___fltol
  2654  0013' 0008               	return
  2655  0014'                    i1l1734:
  2656  0014' 080D'              	movf	___fltol@f1,w
  2657  0015' 0091'              	movwf	??___fltol
  2658  0016' 080E'              	movf	___fltol@f1+1,w
  2659  0017' 0092'              	movwf	??___fltol+1
  2660  0018' 080F'              	movf	___fltol@f1+2,w
  2661  0019' 0093'              	movwf	??___fltol+2
  2662  001A' 0810'              	movf	___fltol@f1+3,w
  2663  001B' 0094'              	movwf	??___fltol+3
  2664  001C' 301F               	movlw	31
  2665  001D'                    u172_25:
  2666  001D' 1003               	clrc
  2667  001E' 0C94'              	rrf	??___fltol+3,f
  2668  001F' 0C93'              	rrf	??___fltol+2,f
  2669  0020' 0C92'              	rrf	??___fltol+1,f
  2670  0021' 0C91'              	rrf	??___fltol,f
  2671  0022' 3EFF               	addlw	-1
  2672  0023' 1D03               	skipz
  2673  0024' 281D'              	goto	u172_25
  2674  0025' 0811'              	movf	??___fltol,w
  2675  0026' 0095'              	movwf	??___fltol+4
  2676  0027' 0815'              	movf	??___fltol+4,w
  2677  0028' 0096'              	movwf	___fltol@sign1
  2678  0029' 178F'              	bsf	___fltol@f1+2,7
  2679  002A' 30FF               	movlw	255
  2680  002B' 058D'              	andwf	___fltol@f1,f
  2681  002C' 30FF               	movlw	255
  2682  002D' 058E'              	andwf	___fltol@f1+1,f
  2683  002E' 30FF               	movlw	255
  2684  002F' 058F'              	andwf	___fltol@f1+2,f
  2685  0030' 3000               	movlw	0
  2686  0031' 0590'              	andwf	___fltol@f1+3,f
  2687  0032' 3096               	movlw	150
  2688  0033' 0297'              	subwf	___fltol@exp1,f
  2689  0034' 1F97'              	btfss	___fltol@exp1,7
  2690  0035' 284B'              	goto	i1l1752
  2691  0036' 0817'              	movf	___fltol@exp1,w
  2692  0037' 3A80               	xorlw	128
  2693  0038' 3E97               	addlw	151
  2694  0039' 1C03               	btfss	3,0
  2695  003A' 280B'              	goto	i1l1730
  2696  003B'                    i1l1750:
  2697  003B' 3001               	movlw	1
  2698  003C'                    u175_25:
  2699  003C' 1003               	clrc
  2700  003D' 0C90'              	rrf	___fltol@f1+3,f
  2701  003E' 0C8F'              	rrf	___fltol@f1+2,f
  2702  003F' 0C8E'              	rrf	___fltol@f1+1,f
  2703  0040' 0C8D'              	rrf	___fltol@f1,f
  2704  0041' 3EFF               	addlw	-1
  2705  0042' 1D03               	skipz
  2706  0043' 283C'              	goto	u175_25
  2707  0044' 3001               	movlw	1
  2708  0045' 0091'              	movwf	??___fltol
  2709  0046' 0811'              	movf	??___fltol,w
  2710  0047' 0797'              	addwf	___fltol@exp1,f
  2711  0048' 1903               	btfsc	3,2
  2712  0049' 285E'              	goto	i1l1760
  2713  004A' 283B'              	goto	i1l1750
  2714  004B'                    i1l1752:
  2715  004B' 3020               	movlw	32
  2716  004C' 0217'              	subwf	___fltol@exp1,w
  2717  004D' 1803               	btfsc	3,0
  2718  004E' 280B'              	goto	i1l1730
  2719  004F'                    i1l449:
  2720  004F' 0817'              	movf	___fltol@exp1,w
  2721  0050' 1903               	btfsc	3,2
  2722  0051' 285E'              	goto	i1l1760
  2723  0052' 3001               	movlw	1
  2724  0053' 0091'              	movwf	??___fltol
  2725  0054'                    u178_25:
  2726  0054' 1003               	clrc
  2727  0055' 0D8D'              	rlf	___fltol@f1,f
  2728  0056' 0D8E'              	rlf	___fltol@f1+1,f
  2729  0057' 0D8F'              	rlf	___fltol@f1+2,f
  2730  0058' 0D90'              	rlf	___fltol@f1+3,f
  2731  0059' 0B91'              	decfsz	??___fltol,f
  2732  005A' 2854'              	goto	u178_25
  2733  005B' 3001               	movlw	1
  2734  005C' 0297'              	subwf	___fltol@exp1,f
  2735  005D' 284F'              	goto	i1l449
  2736  005E'                    i1l1760:
  2737  005E' 0816'              	movf	___fltol@sign1,w
  2738  005F' 1903               	btfsc	3,2
  2739  0060' 0008               	return
  2740  0061' 098D'              	comf	___fltol@f1,f
  2741  0062' 098E'              	comf	___fltol@f1+1,f
  2742  0063' 098F'              	comf	___fltol@f1+2,f
  2743  0064' 0990'              	comf	___fltol@f1+3,f
  2744  0065' 0A8D'              	incf	___fltol@f1,f
  2745  0066' 1903               	skipnz
  2746  0067' 0A8E'              	incf	___fltol@f1+1,f
  2747  0068' 1903               	skipnz
  2748  0069' 0A8F'              	incf	___fltol@f1+2,f
  2749  006A' 1903               	skipnz
  2750  006B' 0A90'              	incf	___fltol@f1+3,f
  2751  006C' 0008               	return
  2752  006D'                    __end_of___fltol:
  2753                           
  2754                           	psect	text15
  2755  0000'                    __ptext15:	
  2756 ;; *************** function ___flmul *****************
  2757 ;; Defined at:
  2758 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  b               4    0[BANK0 ] long 
  2761 ;;  a               4    4[BANK0 ] long 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  prod            4   20[BANK0 ] struct .
  2764 ;;  grs             4   14[BANK0 ] unsigned long 
  2765 ;;  temp            2   24[BANK0 ] struct .
  2766 ;;  bexp            1   19[BANK0 ] unsigned char 
  2767 ;;  aexp            1   18[BANK0 ] unsigned char 
  2768 ;;  sign            1   13[BANK0 ] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  4    0[BANK0 ] unsigned char 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2778 ;;      Params:         0       8       0       0
  2779 ;;      Locals:         0      13       0       0
  2780 ;;      Temps:          0       5       0       0
  2781 ;;      Totals:         0      26       0       0
  2782 ;;Total ram usage:       26 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 1
  2785 ;; This function calls:
  2786 ;;		__Umul8_16
  2787 ;; This function is called by:
  2788 ;;		_TMR0_ISR
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792  0000'                    ___flmul:	
  2793                           ;psect for function ___flmul
  2794                           
  2795                           
  2796                           ;incstack = 0
  2797                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2798  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2799  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2800  0002' 0803'              	movf	___flmul@b+3,w
  2801  0003' 3980               	andlw	128
  2802  0004' 0088'              	movwf	??___flmul
  2803  0005' 0808'              	movf	??___flmul,w
  2804  0006' 008D'              	movwf	___flmul@sign
  2805  0007' 0803'              	movf	___flmul@b+3,w
  2806  0008' 0088'              	movwf	??___flmul
  2807  0009' 0708'              	addwf	??___flmul,w
  2808  000A' 0089'              	movwf	??___flmul+1
  2809  000B' 0809'              	movf	??___flmul+1,w
  2810  000C' 0093'              	movwf	___flmul@bexp
  2811  000D' 1B82'              	btfsc	___flmul@b+2,7
  2812  000E' 1413'              	bsf	___flmul@bexp,0
  2813  000F' 0813'              	movf	___flmul@bexp,w
  2814  0010' 1903               	btfsc	3,2
  2815  0011' 281F'              	goto	i1l1922
  2816  0012' 0A13'              	incf	___flmul@bexp,w
  2817  0013' 1D03               	btfss	3,2
  2818  0014' 281D'              	goto	i1l1920
  2819  0015' 3000               	movlw	0
  2820  0016' 0083'              	movwf	___flmul@b+3
  2821  0017' 3000               	movlw	0
  2822  0018' 0082'              	movwf	___flmul@b+2
  2823  0019' 3000               	movlw	0
  2824  001A' 0081'              	movwf	___flmul@b+1
  2825  001B' 3000               	movlw	0
  2826  001C' 0080'              	movwf	___flmul@b
  2827  001D'                    i1l1920:
  2828  001D' 1782'              	bsf	___flmul@b+2,7
  2829  001E' 2827'              	goto	i1l1924
  2830  001F'                    i1l1922:
  2831  001F' 3000               	movlw	0
  2832  0020' 0083'              	movwf	___flmul@b+3
  2833  0021' 3000               	movlw	0
  2834  0022' 0082'              	movwf	___flmul@b+2
  2835  0023' 3000               	movlw	0
  2836  0024' 0081'              	movwf	___flmul@b+1
  2837  0025' 3000               	movlw	0
  2838  0026' 0080'              	movwf	___flmul@b
  2839  0027'                    i1l1924:
  2840  0027' 0807'              	movf	___flmul@a+3,w
  2841  0028' 3980               	andlw	128
  2842  0029' 0088'              	movwf	??___flmul
  2843  002A' 0808'              	movf	??___flmul,w
  2844  002B' 068D'              	xorwf	___flmul@sign,f
  2845  002C' 0807'              	movf	___flmul@a+3,w
  2846  002D' 0088'              	movwf	??___flmul
  2847  002E' 0708'              	addwf	??___flmul,w
  2848  002F' 0089'              	movwf	??___flmul+1
  2849  0030' 0809'              	movf	??___flmul+1,w
  2850  0031' 0092'              	movwf	___flmul@aexp
  2851  0032' 1B86'              	btfsc	___flmul@a+2,7
  2852  0033' 1412'              	bsf	___flmul@aexp,0
  2853  0034' 0812'              	movf	___flmul@aexp,w
  2854  0035' 1903               	btfsc	3,2
  2855  0036' 2844'              	goto	i1l1940
  2856  0037' 0A12'              	incf	___flmul@aexp,w
  2857  0038' 1D03               	btfss	3,2
  2858  0039' 2842'              	goto	i1l1938
  2859  003A' 3000               	movlw	0
  2860  003B' 0087'              	movwf	___flmul@a+3
  2861  003C' 3000               	movlw	0
  2862  003D' 0086'              	movwf	___flmul@a+2
  2863  003E' 3000               	movlw	0
  2864  003F' 0085'              	movwf	___flmul@a+1
  2865  0040' 3000               	movlw	0
  2866  0041' 0084'              	movwf	___flmul@a
  2867  0042'                    i1l1938:
  2868  0042' 1786'              	bsf	___flmul@a+2,7
  2869  0043' 284C'              	goto	i1l1942
  2870  0044'                    i1l1940:
  2871  0044' 3000               	movlw	0
  2872  0045' 0087'              	movwf	___flmul@a+3
  2873  0046' 3000               	movlw	0
  2874  0047' 0086'              	movwf	___flmul@a+2
  2875  0048' 3000               	movlw	0
  2876  0049' 0085'              	movwf	___flmul@a+1
  2877  004A' 3000               	movlw	0
  2878  004B' 0084'              	movwf	___flmul@a
  2879  004C'                    i1l1942:
  2880  004C' 0812'              	movf	___flmul@aexp,w
  2881  004D' 1D03               	btfss	3,2
  2882  004E' 0813'              	movf	___flmul@bexp,w
  2883  004F' 1D03               	btfss	3,2
  2884  0050' 285A'              	goto	i1l1950
  2885  0051' 3000               	movlw	0
  2886  0052' 0083'              	movwf	?___flmul+3
  2887  0053' 3000               	movlw	0
  2888  0054' 0082'              	movwf	?___flmul+2
  2889  0055' 3000               	movlw	0
  2890  0056' 0081'              	movwf	?___flmul+1
  2891  0057' 3000               	movlw	0
  2892  0058' 0080'              	movwf	?___flmul
  2893  0059' 0008               	return
  2894  005A'                    i1l1950:
  2895  005A' 0800'              	movf	___flmul@b,w
  2896  005B' 0088'              	movwf	??___flmul
  2897  005C' 0808'              	movf	??___flmul,w
  2898  005D' 0080'              	movwf	__Umul8_16@multiplicand
  2899  005E' 0806'              	movf	___flmul@a+2,w
  2900  005F' 2000'              	fcall	__Umul8_16
  2901  0060' 0801'              	movf	?__Umul8_16+1,w
  2902  0061' 1283               	bcf	3,5	;RP0=0, select bank0
  2903  0062' 1303               	bcf	3,6	;RP1=0, select bank0
  2904  0063' 0099'              	movwf	___flmul@temp+1
  2905  0064' 0800'              	movf	?__Umul8_16,w
  2906  0065' 0098'              	movwf	___flmul@temp
  2907  0066' 0818'              	movf	___flmul@temp,w
  2908  0067' 0088'              	movwf	??___flmul
  2909  0068' 0189'              	clrf	??___flmul+1
  2910  0069' 018A'              	clrf	??___flmul+2
  2911  006A' 018B'              	clrf	??___flmul+3
  2912  006B' 080B'              	movf	??___flmul+3,w
  2913  006C' 0091'              	movwf	___flmul@grs+3
  2914  006D' 080A'              	movf	??___flmul+2,w
  2915  006E' 0090'              	movwf	___flmul@grs+2
  2916  006F' 0809'              	movf	??___flmul+1,w
  2917  0070' 008F'              	movwf	___flmul@grs+1
  2918  0071' 0808'              	movf	??___flmul,w
  2919  0072' 008E'              	movwf	___flmul@grs
  2920  0073' 0819'              	movf	___flmul@temp+1,w
  2921  0074' 0088'              	movwf	??___flmul
  2922  0075' 0189'              	clrf	??___flmul+1
  2923  0076' 018A'              	clrf	??___flmul+2
  2924  0077' 018B'              	clrf	??___flmul+3
  2925  0078' 080B'              	movf	??___flmul+3,w
  2926  0079' 0097'              	movwf	___flmul@prod+3
  2927  007A' 080A'              	movf	??___flmul+2,w
  2928  007B' 0096'              	movwf	___flmul@prod+2
  2929  007C' 0809'              	movf	??___flmul+1,w
  2930  007D' 0095'              	movwf	___flmul@prod+1
  2931  007E' 0808'              	movf	??___flmul,w
  2932  007F' 0094'              	movwf	___flmul@prod
  2933  0080' 0801'              	movf	___flmul@b+1,w
  2934  0081' 0088'              	movwf	??___flmul
  2935  0082' 0808'              	movf	??___flmul,w
  2936  0083' 0080'              	movwf	__Umul8_16@multiplicand
  2937  0084' 0805'              	movf	___flmul@a+1,w
  2938  0085' 2000'              	fcall	__Umul8_16
  2939  0086' 0801'              	movf	?__Umul8_16+1,w
  2940  0087' 1283               	bcf	3,5	;RP0=0, select bank0
  2941  0088' 1303               	bcf	3,6	;RP1=0, select bank0
  2942  0089' 0099'              	movwf	___flmul@temp+1
  2943  008A' 0800'              	movf	?__Umul8_16,w
  2944  008B' 0098'              	movwf	___flmul@temp
  2945  008C' 0818'              	movf	___flmul@temp,w
  2946  008D' 0088'              	movwf	??___flmul
  2947  008E' 0189'              	clrf	??___flmul+1
  2948  008F' 018A'              	clrf	??___flmul+2
  2949  0090' 018B'              	clrf	??___flmul+3
  2950  0091' 0808'              	movf	??___flmul,w
  2951  0092' 078E'              	addwf	___flmul@grs,f
  2952  0093' 0809'              	movf	??___flmul+1,w
  2953  0094' 1103               	clrz
  2954  0095' 1803               	skipnc
  2955  0096' 3E01               	addlw	1
  2956  0097' 1D03               	btfss	3,2
  2957  0098' 078F'              	addwf	___flmul@grs+1,f
  2958  0099' 080A'              	movf	??___flmul+2,w
  2959  009A' 1103               	clrz
  2960  009B' 1803               	skipnc
  2961  009C' 3E01               	addlw	1
  2962  009D' 1D03               	btfss	3,2
  2963  009E' 0790'              	addwf	___flmul@grs+2,f
  2964  009F' 080B'              	movf	??___flmul+3,w
  2965  00A0' 1103               	clrz
  2966  00A1' 1803               	skipnc
  2967  00A2' 3E01               	addlw	1
  2968  00A3' 1D03               	btfss	3,2
  2969  00A4' 0791'              	addwf	___flmul@grs+3,f
  2970  00A5' 0819'              	movf	___flmul@temp+1,w
  2971  00A6' 0088'              	movwf	??___flmul
  2972  00A7' 0189'              	clrf	??___flmul+1
  2973  00A8' 018A'              	clrf	??___flmul+2
  2974  00A9' 018B'              	clrf	??___flmul+3
  2975  00AA' 0808'              	movf	??___flmul,w
  2976  00AB' 0794'              	addwf	___flmul@prod,f
  2977  00AC' 0809'              	movf	??___flmul+1,w
  2978  00AD' 1103               	clrz
  2979  00AE' 1803               	skipnc
  2980  00AF' 3E01               	addlw	1
  2981  00B0' 1D03               	btfss	3,2
  2982  00B1' 0795'              	addwf	___flmul@prod+1,f
  2983  00B2' 080A'              	movf	??___flmul+2,w
  2984  00B3' 1103               	clrz
  2985  00B4' 1803               	skipnc
  2986  00B5' 3E01               	addlw	1
  2987  00B6' 1D03               	btfss	3,2
  2988  00B7' 0796'              	addwf	___flmul@prod+2,f
  2989  00B8' 080B'              	movf	??___flmul+3,w
  2990  00B9' 1103               	clrz
  2991  00BA' 1803               	skipnc
  2992  00BB' 3E01               	addlw	1
  2993  00BC' 1D03               	btfss	3,2
  2994  00BD' 0797'              	addwf	___flmul@prod+3,f
  2995  00BE' 0802'              	movf	___flmul@b+2,w
  2996  00BF' 0088'              	movwf	??___flmul
  2997  00C0' 0808'              	movf	??___flmul,w
  2998  00C1' 0080'              	movwf	__Umul8_16@multiplicand
  2999  00C2' 0804'              	movf	___flmul@a,w
  3000  00C3' 2000'              	fcall	__Umul8_16
  3001  00C4' 0801'              	movf	?__Umul8_16+1,w
  3002  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  3003  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  3004  00C7' 0099'              	movwf	___flmul@temp+1
  3005  00C8' 0800'              	movf	?__Umul8_16,w
  3006  00C9' 0098'              	movwf	___flmul@temp
  3007  00CA' 0818'              	movf	___flmul@temp,w
  3008  00CB' 0088'              	movwf	??___flmul
  3009  00CC' 0189'              	clrf	??___flmul+1
  3010  00CD' 018A'              	clrf	??___flmul+2
  3011  00CE' 018B'              	clrf	??___flmul+3
  3012  00CF' 0808'              	movf	??___flmul,w
  3013  00D0' 078E'              	addwf	___flmul@grs,f
  3014  00D1' 0809'              	movf	??___flmul+1,w
  3015  00D2' 1103               	clrz
  3016  00D3' 1803               	skipnc
  3017  00D4' 3E01               	addlw	1
  3018  00D5' 1D03               	btfss	3,2
  3019  00D6' 078F'              	addwf	___flmul@grs+1,f
  3020  00D7' 080A'              	movf	??___flmul+2,w
  3021  00D8' 1103               	clrz
  3022  00D9' 1803               	skipnc
  3023  00DA' 3E01               	addlw	1
  3024  00DB' 1D03               	btfss	3,2
  3025  00DC' 0790'              	addwf	___flmul@grs+2,f
  3026  00DD' 080B'              	movf	??___flmul+3,w
  3027  00DE' 1103               	clrz
  3028  00DF' 1803               	skipnc
  3029  00E0' 3E01               	addlw	1
  3030  00E1' 1D03               	btfss	3,2
  3031  00E2' 0791'              	addwf	___flmul@grs+3,f
  3032  00E3' 0819'              	movf	___flmul@temp+1,w
  3033  00E4' 0088'              	movwf	??___flmul
  3034  00E5' 0189'              	clrf	??___flmul+1
  3035  00E6' 018A'              	clrf	??___flmul+2
  3036  00E7' 018B'              	clrf	??___flmul+3
  3037  00E8' 0808'              	movf	??___flmul,w
  3038  00E9' 0794'              	addwf	___flmul@prod,f
  3039  00EA' 0809'              	movf	??___flmul+1,w
  3040  00EB' 1103               	clrz
  3041  00EC' 1803               	skipnc
  3042  00ED' 3E01               	addlw	1
  3043  00EE' 1D03               	btfss	3,2
  3044  00EF' 0795'              	addwf	___flmul@prod+1,f
  3045  00F0' 080A'              	movf	??___flmul+2,w
  3046  00F1' 1103               	clrz
  3047  00F2' 1803               	skipnc
  3048  00F3' 3E01               	addlw	1
  3049  00F4' 1D03               	btfss	3,2
  3050  00F5' 0796'              	addwf	___flmul@prod+2,f
  3051  00F6' 080B'              	movf	??___flmul+3,w
  3052  00F7' 1103               	clrz
  3053  00F8' 1803               	skipnc
  3054  00F9' 3E01               	addlw	1
  3055  00FA' 1D03               	btfss	3,2
  3056  00FB' 0797'              	addwf	___flmul@prod+3,f
  3057  00FC' 3008               	movlw	8
  3058  00FD' 0088'              	movwf	??___flmul
  3059  00FE'                    u223_25:
  3060  00FE' 1003               	clrc
  3061  00FF' 0D8E'              	rlf	___flmul@grs,f
  3062  0100' 0D8F'              	rlf	___flmul@grs+1,f
  3063  0101' 0D90'              	rlf	___flmul@grs+2,f
  3064  0102' 0D91'              	rlf	___flmul@grs+3,f
  3065  0103' 0B88'              	decfsz	??___flmul,f
  3066  0104' 28FE'              	goto	u223_25
  3067  0105' 0801'              	movf	___flmul@b+1,w
  3068  0106' 0088'              	movwf	??___flmul
  3069  0107' 0808'              	movf	??___flmul,w
  3070  0108' 0080'              	movwf	__Umul8_16@multiplicand
  3071  0109' 0804'              	movf	___flmul@a,w
  3072  010A' 2000'              	fcall	__Umul8_16
  3073  010B' 0801'              	movf	?__Umul8_16+1,w
  3074  010C' 1283               	bcf	3,5	;RP0=0, select bank0
  3075  010D' 1303               	bcf	3,6	;RP1=0, select bank0
  3076  010E' 0099'              	movwf	___flmul@temp+1
  3077  010F' 0800'              	movf	?__Umul8_16,w
  3078  0110' 0098'              	movwf	___flmul@temp
  3079  0111' 0818'              	movf	___flmul@temp,w
  3080  0112' 0088'              	movwf	??___flmul
  3081  0113' 0819'              	movf	___flmul@temp+1,w
  3082  0114' 0089'              	movwf	??___flmul+1
  3083  0115' 018A'              	clrf	??___flmul+2
  3084  0116' 018B'              	clrf	??___flmul+3
  3085  0117' 0808'              	movf	??___flmul,w
  3086  0118' 078E'              	addwf	___flmul@grs,f
  3087  0119' 0809'              	movf	??___flmul+1,w
  3088  011A' 1103               	clrz
  3089  011B' 1803               	skipnc
  3090  011C' 3E01               	addlw	1
  3091  011D' 1D03               	btfss	3,2
  3092  011E' 078F'              	addwf	___flmul@grs+1,f
  3093  011F' 080A'              	movf	??___flmul+2,w
  3094  0120' 1103               	clrz
  3095  0121' 1803               	skipnc
  3096  0122' 3E01               	addlw	1
  3097  0123' 1D03               	btfss	3,2
  3098  0124' 0790'              	addwf	___flmul@grs+2,f
  3099  0125' 080B'              	movf	??___flmul+3,w
  3100  0126' 1103               	clrz
  3101  0127' 1803               	skipnc
  3102  0128' 3E01               	addlw	1
  3103  0129' 1D03               	btfss	3,2
  3104  012A' 0791'              	addwf	___flmul@grs+3,f
  3105  012B' 0800'              	movf	___flmul@b,w
  3106  012C' 0088'              	movwf	??___flmul
  3107  012D' 0808'              	movf	??___flmul,w
  3108  012E' 0080'              	movwf	__Umul8_16@multiplicand
  3109  012F' 0805'              	movf	___flmul@a+1,w
  3110  0130' 2000'              	fcall	__Umul8_16
  3111  0131' 0801'              	movf	?__Umul8_16+1,w
  3112  0132' 1283               	bcf	3,5	;RP0=0, select bank0
  3113  0133' 1303               	bcf	3,6	;RP1=0, select bank0
  3114  0134' 0099'              	movwf	___flmul@temp+1
  3115  0135' 0800'              	movf	?__Umul8_16,w
  3116  0136' 0098'              	movwf	___flmul@temp
  3117  0137' 0818'              	movf	___flmul@temp,w
  3118  0138' 0088'              	movwf	??___flmul
  3119  0139' 0819'              	movf	___flmul@temp+1,w
  3120  013A' 0089'              	movwf	??___flmul+1
  3121  013B' 018A'              	clrf	??___flmul+2
  3122  013C' 018B'              	clrf	??___flmul+3
  3123  013D' 0808'              	movf	??___flmul,w
  3124  013E' 078E'              	addwf	___flmul@grs,f
  3125  013F' 0809'              	movf	??___flmul+1,w
  3126  0140' 1103               	clrz
  3127  0141' 1803               	skipnc
  3128  0142' 3E01               	addlw	1
  3129  0143' 1D03               	btfss	3,2
  3130  0144' 078F'              	addwf	___flmul@grs+1,f
  3131  0145' 080A'              	movf	??___flmul+2,w
  3132  0146' 1103               	clrz
  3133  0147' 1803               	skipnc
  3134  0148' 3E01               	addlw	1
  3135  0149' 1D03               	btfss	3,2
  3136  014A' 0790'              	addwf	___flmul@grs+2,f
  3137  014B' 080B'              	movf	??___flmul+3,w
  3138  014C' 1103               	clrz
  3139  014D' 1803               	skipnc
  3140  014E' 3E01               	addlw	1
  3141  014F' 1D03               	btfss	3,2
  3142  0150' 0791'              	addwf	___flmul@grs+3,f
  3143  0151' 3008               	movlw	8
  3144  0152' 0088'              	movwf	??___flmul
  3145  0153'                    u226_25:
  3146  0153' 1003               	clrc
  3147  0154' 0D8E'              	rlf	___flmul@grs,f
  3148  0155' 0D8F'              	rlf	___flmul@grs+1,f
  3149  0156' 0D90'              	rlf	___flmul@grs+2,f
  3150  0157' 0D91'              	rlf	___flmul@grs+3,f
  3151  0158' 0B88'              	decfsz	??___flmul,f
  3152  0159' 2953'              	goto	u226_25
  3153  015A' 0800'              	movf	___flmul@b,w
  3154  015B' 0088'              	movwf	??___flmul
  3155  015C' 0808'              	movf	??___flmul,w
  3156  015D' 0080'              	movwf	__Umul8_16@multiplicand
  3157  015E' 0804'              	movf	___flmul@a,w
  3158  015F' 2000'              	fcall	__Umul8_16
  3159  0160' 0801'              	movf	?__Umul8_16+1,w
  3160  0161' 1283               	bcf	3,5	;RP0=0, select bank0
  3161  0162' 1303               	bcf	3,6	;RP1=0, select bank0
  3162  0163' 0099'              	movwf	___flmul@temp+1
  3163  0164' 0800'              	movf	?__Umul8_16,w
  3164  0165' 0098'              	movwf	___flmul@temp
  3165  0166' 0818'              	movf	___flmul@temp,w
  3166  0167' 0088'              	movwf	??___flmul
  3167  0168' 0819'              	movf	___flmul@temp+1,w
  3168  0169' 0089'              	movwf	??___flmul+1
  3169  016A' 018A'              	clrf	??___flmul+2
  3170  016B' 018B'              	clrf	??___flmul+3
  3171  016C' 0808'              	movf	??___flmul,w
  3172  016D' 078E'              	addwf	___flmul@grs,f
  3173  016E' 0809'              	movf	??___flmul+1,w
  3174  016F' 1103               	clrz
  3175  0170' 1803               	skipnc
  3176  0171' 3E01               	addlw	1
  3177  0172' 1D03               	btfss	3,2
  3178  0173' 078F'              	addwf	___flmul@grs+1,f
  3179  0174' 080A'              	movf	??___flmul+2,w
  3180  0175' 1103               	clrz
  3181  0176' 1803               	skipnc
  3182  0177' 3E01               	addlw	1
  3183  0178' 1D03               	btfss	3,2
  3184  0179' 0790'              	addwf	___flmul@grs+2,f
  3185  017A' 080B'              	movf	??___flmul+3,w
  3186  017B' 1103               	clrz
  3187  017C' 1803               	skipnc
  3188  017D' 3E01               	addlw	1
  3189  017E' 1D03               	btfss	3,2
  3190  017F' 0791'              	addwf	___flmul@grs+3,f
  3191  0180' 0801'              	movf	___flmul@b+1,w
  3192  0181' 0088'              	movwf	??___flmul
  3193  0182' 0808'              	movf	??___flmul,w
  3194  0183' 0080'              	movwf	__Umul8_16@multiplicand
  3195  0184' 0806'              	movf	___flmul@a+2,w
  3196  0185' 2000'              	fcall	__Umul8_16
  3197  0186' 0801'              	movf	?__Umul8_16+1,w
  3198  0187' 1283               	bcf	3,5	;RP0=0, select bank0
  3199  0188' 1303               	bcf	3,6	;RP1=0, select bank0
  3200  0189' 0099'              	movwf	___flmul@temp+1
  3201  018A' 0800'              	movf	?__Umul8_16,w
  3202  018B' 0098'              	movwf	___flmul@temp
  3203  018C' 0818'              	movf	___flmul@temp,w
  3204  018D' 0088'              	movwf	??___flmul
  3205  018E' 0819'              	movf	___flmul@temp+1,w
  3206  018F' 0089'              	movwf	??___flmul+1
  3207  0190' 018A'              	clrf	??___flmul+2
  3208  0191' 018B'              	clrf	??___flmul+3
  3209  0192' 0808'              	movf	??___flmul,w
  3210  0193' 0794'              	addwf	___flmul@prod,f
  3211  0194' 0809'              	movf	??___flmul+1,w
  3212  0195' 1103               	clrz
  3213  0196' 1803               	skipnc
  3214  0197' 3E01               	addlw	1
  3215  0198' 1D03               	btfss	3,2
  3216  0199' 0795'              	addwf	___flmul@prod+1,f
  3217  019A' 080A'              	movf	??___flmul+2,w
  3218  019B' 1103               	clrz
  3219  019C' 1803               	skipnc
  3220  019D' 3E01               	addlw	1
  3221  019E' 1D03               	btfss	3,2
  3222  019F' 0796'              	addwf	___flmul@prod+2,f
  3223  01A0' 080B'              	movf	??___flmul+3,w
  3224  01A1' 1103               	clrz
  3225  01A2' 1803               	skipnc
  3226  01A3' 3E01               	addlw	1
  3227  01A4' 1D03               	btfss	3,2
  3228  01A5' 0797'              	addwf	___flmul@prod+3,f
  3229  01A6' 0802'              	movf	___flmul@b+2,w
  3230  01A7' 0088'              	movwf	??___flmul
  3231  01A8' 0808'              	movf	??___flmul,w
  3232  01A9' 0080'              	movwf	__Umul8_16@multiplicand
  3233  01AA' 0805'              	movf	___flmul@a+1,w
  3234  01AB' 2000'              	fcall	__Umul8_16
  3235  01AC' 0801'              	movf	?__Umul8_16+1,w
  3236  01AD' 1283               	bcf	3,5	;RP0=0, select bank0
  3237  01AE' 1303               	bcf	3,6	;RP1=0, select bank0
  3238  01AF' 0099'              	movwf	___flmul@temp+1
  3239  01B0' 0800'              	movf	?__Umul8_16,w
  3240  01B1' 0098'              	movwf	___flmul@temp
  3241  01B2' 0818'              	movf	___flmul@temp,w
  3242  01B3' 0088'              	movwf	??___flmul
  3243  01B4' 0819'              	movf	___flmul@temp+1,w
  3244  01B5' 0089'              	movwf	??___flmul+1
  3245  01B6' 018A'              	clrf	??___flmul+2
  3246  01B7' 018B'              	clrf	??___flmul+3
  3247  01B8' 0808'              	movf	??___flmul,w
  3248  01B9' 0794'              	addwf	___flmul@prod,f
  3249  01BA' 0809'              	movf	??___flmul+1,w
  3250  01BB' 1103               	clrz
  3251  01BC' 1803               	skipnc
  3252  01BD' 3E01               	addlw	1
  3253  01BE' 1D03               	btfss	3,2
  3254  01BF' 0795'              	addwf	___flmul@prod+1,f
  3255  01C0' 080A'              	movf	??___flmul+2,w
  3256  01C1' 1103               	clrz
  3257  01C2' 1803               	skipnc
  3258  01C3' 3E01               	addlw	1
  3259  01C4' 1D03               	btfss	3,2
  3260  01C5' 0796'              	addwf	___flmul@prod+2,f
  3261  01C6' 080B'              	movf	??___flmul+3,w
  3262  01C7' 1103               	clrz
  3263  01C8' 1803               	skipnc
  3264  01C9' 3E01               	addlw	1
  3265  01CA' 1D03               	btfss	3,2
  3266  01CB' 0797'              	addwf	___flmul@prod+3,f
  3267  01CC' 0802'              	movf	___flmul@b+2,w
  3268  01CD' 0088'              	movwf	??___flmul
  3269  01CE' 0808'              	movf	??___flmul,w
  3270  01CF' 0080'              	movwf	__Umul8_16@multiplicand
  3271  01D0' 0806'              	movf	___flmul@a+2,w
  3272  01D1' 2000'              	fcall	__Umul8_16
  3273  01D2' 0801'              	movf	?__Umul8_16+1,w
  3274  01D3' 1283               	bcf	3,5	;RP0=0, select bank0
  3275  01D4' 1303               	bcf	3,6	;RP1=0, select bank0
  3276  01D5' 0099'              	movwf	___flmul@temp+1
  3277  01D6' 0800'              	movf	?__Umul8_16,w
  3278  01D7' 0098'              	movwf	___flmul@temp
  3279  01D8' 0818'              	movf	___flmul@temp,w
  3280  01D9' 0088'              	movwf	??___flmul
  3281  01DA' 0819'              	movf	___flmul@temp+1,w
  3282  01DB' 0089'              	movwf	??___flmul+1
  3283  01DC' 018A'              	clrf	??___flmul+2
  3284  01DD' 018B'              	clrf	??___flmul+3
  3285  01DE' 3008               	movlw	8
  3286  01DF'                    u230_25:
  3287  01DF' 1003               	clrc
  3288  01E0' 0D88'              	rlf	??___flmul,f
  3289  01E1' 0D89'              	rlf	??___flmul+1,f
  3290  01E2' 0D8A'              	rlf	??___flmul+2,f
  3291  01E3' 0D8B'              	rlf	??___flmul+3,f
  3292  01E4' 3EFF               	addlw	-1
  3293  01E5' 1D03               	skipz
  3294  01E6' 29DF'              	goto	u230_25
  3295  01E7' 0808'              	movf	??___flmul,w
  3296  01E8' 0794'              	addwf	___flmul@prod,f
  3297  01E9' 0809'              	movf	??___flmul+1,w
  3298  01EA' 1103               	clrz
  3299  01EB' 1803               	skipnc
  3300  01EC' 3E01               	addlw	1
  3301  01ED' 1D03               	btfss	3,2
  3302  01EE' 0795'              	addwf	___flmul@prod+1,f
  3303  01EF' 080A'              	movf	??___flmul+2,w
  3304  01F0' 1103               	clrz
  3305  01F1' 1803               	skipnc
  3306  01F2' 3E01               	addlw	1
  3307  01F3' 1D03               	btfss	3,2
  3308  01F4' 0796'              	addwf	___flmul@prod+2,f
  3309  01F5' 080B'              	movf	??___flmul+3,w
  3310  01F6' 1103               	clrz
  3311  01F7' 1803               	skipnc
  3312  01F8' 3E01               	addlw	1
  3313  01F9' 1D03               	btfss	3,2
  3314  01FA' 0797'              	addwf	___flmul@prod+3,f
  3315  01FB' 080E'              	movf	___flmul@grs,w
  3316  01FC' 0088'              	movwf	??___flmul
  3317  01FD' 080F'              	movf	___flmul@grs+1,w
  3318  01FE' 0089'              	movwf	??___flmul+1
  3319  01FF' 0810'              	movf	___flmul@grs+2,w
  3320  0200' 008A'              	movwf	??___flmul+2
  3321  0201' 0811'              	movf	___flmul@grs+3,w
  3322  0202' 008B'              	movwf	??___flmul+3
  3323  0203' 3018               	movlw	24
  3324  0204'                    u232_25:
  3325  0204' 1003               	clrc
  3326  0205' 0C8B'              	rrf	??___flmul+3,f
  3327  0206' 0C8A'              	rrf	??___flmul+2,f
  3328  0207' 0C89'              	rrf	??___flmul+1,f
  3329  0208' 0C88'              	rrf	??___flmul,f
  3330  0209' 3EFF               	addlw	-1
  3331  020A' 1D03               	skipz
  3332  020B' 2A04'              	goto	u232_25
  3333  020C' 0808'              	movf	??___flmul,w
  3334  020D' 0794'              	addwf	___flmul@prod,f
  3335  020E' 0809'              	movf	??___flmul+1,w
  3336  020F' 1103               	clrz
  3337  0210' 1803               	skipnc
  3338  0211' 3E01               	addlw	1
  3339  0212' 1D03               	btfss	3,2
  3340  0213' 0795'              	addwf	___flmul@prod+1,f
  3341  0214' 080A'              	movf	??___flmul+2,w
  3342  0215' 1103               	clrz
  3343  0216' 1803               	skipnc
  3344  0217' 3E01               	addlw	1
  3345  0218' 1D03               	btfss	3,2
  3346  0219' 0796'              	addwf	___flmul@prod+2,f
  3347  021A' 080B'              	movf	??___flmul+3,w
  3348  021B' 1103               	clrz
  3349  021C' 1803               	skipnc
  3350  021D' 3E01               	addlw	1
  3351  021E' 1D03               	btfss	3,2
  3352  021F' 0797'              	addwf	___flmul@prod+3,f
  3353  0220' 3008               	movlw	8
  3354  0221' 0088'              	movwf	??___flmul
  3355  0222'                    u234_25:
  3356  0222' 1003               	clrc
  3357  0223' 0D8E'              	rlf	___flmul@grs,f
  3358  0224' 0D8F'              	rlf	___flmul@grs+1,f
  3359  0225' 0D90'              	rlf	___flmul@grs+2,f
  3360  0226' 0D91'              	rlf	___flmul@grs+3,f
  3361  0227' 0B88'              	decfsz	??___flmul,f
  3362  0228' 2A22'              	goto	u234_25
  3363  0229' 0813'              	movf	___flmul@bexp,w
  3364  022A' 0712'              	addwf	___flmul@aexp,w
  3365  022B' 0088'              	movwf	??___flmul
  3366  022C' 0189'              	clrf	??___flmul+1
  3367  022D' 0D89'              	rlf	??___flmul+1,f
  3368  022E' 0808'              	movf	??___flmul,w
  3369  022F' 3E82               	addlw	130
  3370  0230' 0098'              	movwf	___flmul@temp
  3371  0231' 0809'              	movf	??___flmul+1,w
  3372  0232' 1803               	skipnc
  3373  0233' 3E01               	addlw	1
  3374  0234' 3EFF               	addlw	255
  3375  0235' 0099'              	movwf	___flmul@temp+1
  3376  0236'                    i1l2002:
  3377  0236' 1B96'              	btfsc	___flmul@prod+2,7
  3378  0237' 2A53'              	goto	i1l2004
  3379  0238' 3001               	movlw	1
  3380  0239' 0088'              	movwf	??___flmul
  3381  023A'                    u235_25:
  3382  023A' 1003               	clrc
  3383  023B' 0D94'              	rlf	___flmul@prod,f
  3384  023C' 0D95'              	rlf	___flmul@prod+1,f
  3385  023D' 0D96'              	rlf	___flmul@prod+2,f
  3386  023E' 0D97'              	rlf	___flmul@prod+3,f
  3387  023F' 0B88'              	decfsz	??___flmul,f
  3388  0240' 2A3A'              	goto	u235_25
  3389  0241' 1B91'              	btfsc	___flmul@grs+3,7
  3390  0242' 1414'              	bsf	___flmul@prod,0
  3391  0243' 3001               	movlw	1
  3392  0244' 0088'              	movwf	??___flmul
  3393  0245'                    u237_25:
  3394  0245' 1003               	clrc
  3395  0246' 0D8E'              	rlf	___flmul@grs,f
  3396  0247' 0D8F'              	rlf	___flmul@grs+1,f
  3397  0248' 0D90'              	rlf	___flmul@grs+2,f
  3398  0249' 0D91'              	rlf	___flmul@grs+3,f
  3399  024A' 0B88'              	decfsz	??___flmul,f
  3400  024B' 2A45'              	goto	u237_25
  3401  024C' 30FF               	movlw	255
  3402  024D' 0798'              	addwf	___flmul@temp,f
  3403  024E' 1803               	skipnc
  3404  024F' 0A99'              	incf	___flmul@temp+1,f
  3405  0250' 30FF               	movlw	255
  3406  0251' 0799'              	addwf	___flmul@temp+1,f
  3407  0252' 2A36'              	goto	i1l2002
  3408  0253'                    i1l2004:
  3409  0253' 0192'              	clrf	___flmul@aexp
  3410  0254' 1F91'              	btfss	___flmul@grs+3,7
  3411  0255' 2A6C'              	goto	i1l2014
  3412  0256' 30FF               	movlw	255
  3413  0257' 050E'              	andwf	___flmul@grs,w
  3414  0258' 0088'              	movwf	??___flmul
  3415  0259' 30FF               	movlw	255
  3416  025A' 050F'              	andwf	___flmul@grs+1,w
  3417  025B' 0089'              	movwf	??___flmul+1
  3418  025C' 30FF               	movlw	255
  3419  025D' 0510'              	andwf	___flmul@grs+2,w
  3420  025E' 008A'              	movwf	??___flmul+2
  3421  025F' 307F               	movlw	127
  3422  0260' 0511'              	andwf	___flmul@grs+3,w
  3423  0261' 008B'              	movwf	??___flmul+3
  3424  0262' 080B'              	movf	??___flmul+3,w
  3425  0263' 040A'              	iorwf	??___flmul+2,w
  3426  0264' 0409'              	iorwf	??___flmul+1,w
  3427  0265' 0408'              	iorwf	??___flmul,w
  3428  0266' 1903               	skipnz
  3429  0267' 1814'              	btfsc	___flmul@prod,0
  3430  0268' 2A6A'              	goto	i1l2010
  3431  0269' 2A6C'              	goto	i1l2014
  3432  026A'                    i1l2010:
  3433  026A' 0192'              	clrf	___flmul@aexp
  3434  026B' 0A92'              	incf	___flmul@aexp,f
  3435  026C'                    i1l2014:
  3436  026C' 0812'              	movf	___flmul@aexp,w
  3437  026D' 1903               	btfsc	3,2
  3438  026E' 2A9E'              	goto	i1l2024
  3439  026F' 3001               	movlw	1
  3440  0270' 0794'              	addwf	___flmul@prod,f
  3441  0271' 3000               	movlw	0
  3442  0272' 1803               	skipnc
  3443  0273' 3001               	movlw	1
  3444  0274' 0795'              	addwf	___flmul@prod+1,f
  3445  0275' 3000               	movlw	0
  3446  0276' 1803               	skipnc
  3447  0277' 3001               	movlw	1
  3448  0278' 0796'              	addwf	___flmul@prod+2,f
  3449  0279' 3000               	movlw	0
  3450  027A' 1803               	skipnc
  3451  027B' 3001               	movlw	1
  3452  027C' 0797'              	addwf	___flmul@prod+3,f
  3453  027D' 1C17'              	btfss	___flmul@prod+3,0
  3454  027E' 2A9E'              	goto	i1l2024
  3455  027F' 0814'              	movf	___flmul@prod,w
  3456  0280' 0088'              	movwf	??___flmul
  3457  0281' 0815'              	movf	___flmul@prod+1,w
  3458  0282' 0089'              	movwf	??___flmul+1
  3459  0283' 0816'              	movf	___flmul@prod+2,w
  3460  0284' 008A'              	movwf	??___flmul+2
  3461  0285' 0817'              	movf	___flmul@prod+3,w
  3462  0286' 008B'              	movwf	??___flmul+3
  3463  0287' 3001               	movlw	1
  3464  0288' 008C'              	movwf	??___flmul+4
  3465  0289'                    u244_25:
  3466  0289' 0D0B'              	rlf	??___flmul+3,w
  3467  028A' 0C8B'              	rrf	??___flmul+3,f
  3468  028B' 0C8A'              	rrf	??___flmul+2,f
  3469  028C' 0C89'              	rrf	??___flmul+1,f
  3470  028D' 0C88'              	rrf	??___flmul,f
  3471  028E' 0B8C'              	decfsz	??___flmul+4,f
  3472  028F' 2A89'              	goto	u244_25
  3473  0290' 080B'              	movf	??___flmul+3,w
  3474  0291' 0097'              	movwf	___flmul@prod+3
  3475  0292' 080A'              	movf	??___flmul+2,w
  3476  0293' 0096'              	movwf	___flmul@prod+2
  3477  0294' 0809'              	movf	??___flmul+1,w
  3478  0295' 0095'              	movwf	___flmul@prod+1
  3479  0296' 0808'              	movf	??___flmul,w
  3480  0297' 0094'              	movwf	___flmul@prod
  3481  0298' 3001               	movlw	1
  3482  0299' 0798'              	addwf	___flmul@temp,f
  3483  029A' 1803               	skipnc
  3484  029B' 0A99'              	incf	___flmul@temp+1,f
  3485  029C' 3000               	movlw	0
  3486  029D' 0799'              	addwf	___flmul@temp+1,f
  3487  029E'                    i1l2024:
  3488  029E' 0819'              	movf	___flmul@temp+1,w
  3489  029F' 3A80               	xorlw	128
  3490  02A0' 00FF               	movwf	127
  3491  02A1' 3080               	movlw	128
  3492  02A2' 027F               	subwf	127,w
  3493  02A3' 1D03               	skipz
  3494  02A4' 2AA7'              	goto	u245_25
  3495  02A5' 30FF               	movlw	255
  3496  02A6' 0218'              	subwf	___flmul@temp,w
  3497  02A7'                    u245_25:
  3498  02A7' 1C03               	skipc
  3499  02A8' 2AB4'              	goto	i1l2028
  3500  02A9' 307F               	movlw	127
  3501  02AA' 1283               	bcf	3,5	;RP0=0, select bank0
  3502  02AB' 1303               	bcf	3,6	;RP1=0, select bank0
  3503  02AC' 0097'              	movwf	___flmul@prod+3
  3504  02AD' 3080               	movlw	128
  3505  02AE' 0096'              	movwf	___flmul@prod+2
  3506  02AF' 3000               	movlw	0
  3507  02B0' 0095'              	movwf	___flmul@prod+1
  3508  02B1' 3000               	movlw	0
  3509  02B2' 0094'              	movwf	___flmul@prod
  3510  02B3' 2AE4'              	goto	i1l657
  3511  02B4'                    i1l2028:
  3512  02B4' 1283               	bcf	3,5	;RP0=0, select bank0
  3513  02B5' 1303               	bcf	3,6	;RP1=0, select bank0
  3514  02B6' 0819'              	movf	___flmul@temp+1,w
  3515  02B7' 3A80               	xorlw	128
  3516  02B8' 00FF               	movwf	127
  3517  02B9' 3080               	movlw	128
  3518  02BA' 027F               	subwf	127,w
  3519  02BB' 1D03               	skipz
  3520  02BC' 2ABF'              	goto	u246_25
  3521  02BD' 3001               	movlw	1
  3522  02BE' 0218'              	subwf	___flmul@temp,w
  3523  02BF'                    u246_25:
  3524  02BF' 1803               	skipnc
  3525  02C0' 2ACD'              	goto	i1l2034
  3526  02C1' 3000               	movlw	0
  3527  02C2' 1283               	bcf	3,5	;RP0=0, select bank0
  3528  02C3' 1303               	bcf	3,6	;RP1=0, select bank0
  3529  02C4' 0097'              	movwf	___flmul@prod+3
  3530  02C5' 3000               	movlw	0
  3531  02C6' 0096'              	movwf	___flmul@prod+2
  3532  02C7' 3000               	movlw	0
  3533  02C8' 0095'              	movwf	___flmul@prod+1
  3534  02C9' 3000               	movlw	0
  3535  02CA' 0094'              	movwf	___flmul@prod
  3536  02CB' 018D'              	clrf	___flmul@sign
  3537  02CC' 2AE4'              	goto	i1l657
  3538  02CD'                    i1l2034:
  3539  02CD' 1283               	bcf	3,5	;RP0=0, select bank0
  3540  02CE' 1303               	bcf	3,6	;RP1=0, select bank0
  3541  02CF' 0818'              	movf	___flmul@temp,w
  3542  02D0' 0088'              	movwf	??___flmul
  3543  02D1' 0808'              	movf	??___flmul,w
  3544  02D2' 0093'              	movwf	___flmul@bexp
  3545  02D3' 30FF               	movlw	255
  3546  02D4' 0594'              	andwf	___flmul@prod,f
  3547  02D5' 30FF               	movlw	255
  3548  02D6' 0595'              	andwf	___flmul@prod+1,f
  3549  02D7' 307F               	movlw	127
  3550  02D8' 0596'              	andwf	___flmul@prod+2,f
  3551  02D9' 3000               	movlw	0
  3552  02DA' 0597'              	andwf	___flmul@prod+3,f
  3553  02DB' 1813'              	btfsc	___flmul@bexp,0
  3554  02DC' 1796'              	bsf	___flmul@prod+2,7
  3555  02DD' 0813'              	movf	___flmul@bexp,w
  3556  02DE' 0088'              	movwf	??___flmul
  3557  02DF' 1003               	clrc
  3558  02E0' 0C08'              	rrf	??___flmul,w
  3559  02E1' 0089'              	movwf	??___flmul+1
  3560  02E2' 0809'              	movf	??___flmul+1,w
  3561  02E3' 0097'              	movwf	___flmul@prod+3
  3562  02E4'                    i1l657:
  3563  02E4' 080D'              	movf	___flmul@sign,w
  3564  02E5' 0088'              	movwf	??___flmul
  3565  02E6' 0808'              	movf	??___flmul,w
  3566  02E7' 0497'              	iorwf	___flmul@prod+3,f
  3567  02E8' 0817'              	movf	___flmul@prod+3,w
  3568  02E9' 0083'              	movwf	?___flmul+3
  3569  02EA' 0816'              	movf	___flmul@prod+2,w
  3570  02EB' 0082'              	movwf	?___flmul+2
  3571  02EC' 0815'              	movf	___flmul@prod+1,w
  3572  02ED' 0081'              	movwf	?___flmul+1
  3573  02EE' 0814'              	movf	___flmul@prod,w
  3574  02EF' 0080'              	movwf	?___flmul
  3575  02F0' 0008               	return
  3576  02F1'                    __end_of___flmul:
  3577                           
  3578                           	psect	text16
  3579  0000'                    __ptext16:	
  3580 ;; *************** function __Umul8_16 *****************
  3581 ;; Defined at:
  3582 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  multiplier      1    wreg     unsigned char 
  3585 ;;  multiplicand    1    0[COMMON] unsigned char 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  multiplier      1    8[COMMON] unsigned char 
  3588 ;;  word_mpld       2    6[COMMON] unsigned int 
  3589 ;;  product         2    4[COMMON] unsigned int 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  2    0[COMMON] unsigned int 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3599 ;;      Params:         2       0       0       0
  3600 ;;      Locals:         5       0       0       0
  3601 ;;      Temps:          2       0       0       0
  3602 ;;      Totals:         9       0       0       0
  3603 ;;Total ram usage:        9 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		___flmul
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612  0000'                    __Umul8_16:	
  3613                           ;psect for function __Umul8_16
  3614                           
  3615                           
  3616                           ;incstack = 0
  3617                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3618                           ;__Umul8_16@multiplier stored from wreg
  3619  0000' 0088'              	movwf	__Umul8_16@multiplier
  3620  0001' 0184'              	clrf	__Umul8_16@product
  3621  0002' 0185'              	clrf	__Umul8_16@product+1
  3622  0003' 0800'              	movf	__Umul8_16@multiplicand,w
  3623  0004' 0082'              	movwf	??__Umul8_16
  3624  0005' 0183'              	clrf	??__Umul8_16+1
  3625  0006' 0802'              	movf	??__Umul8_16,w
  3626  0007' 0086'              	movwf	__Umul8_16@word_mpld
  3627  0008' 0803'              	movf	??__Umul8_16+1,w
  3628  0009' 0087'              	movwf	__Umul8_16@word_mpld+1
  3629  000A'                    i1l1636:
  3630  000A' 1C08'              	btfss	__Umul8_16@multiplier,0
  3631  000B' 2812'              	goto	i1l664
  3632  000C' 0806'              	movf	__Umul8_16@word_mpld,w
  3633  000D' 0784'              	addwf	__Umul8_16@product,f
  3634  000E' 1803               	skipnc
  3635  000F' 0A85'              	incf	__Umul8_16@product+1,f
  3636  0010' 0807'              	movf	__Umul8_16@word_mpld+1,w
  3637  0011' 0785'              	addwf	__Umul8_16@product+1,f
  3638  0012'                    i1l664:
  3639  0012' 3001               	movlw	1
  3640  0013'                    u166_25:
  3641  0013' 1003               	clrc
  3642  0014' 0D86'              	rlf	__Umul8_16@word_mpld,f
  3643  0015' 0D87'              	rlf	__Umul8_16@word_mpld+1,f
  3644  0016' 3EFF               	addlw	-1
  3645  0017' 1D03               	skipz
  3646  0018' 2813'              	goto	u166_25
  3647  0019' 1003               	clrc
  3648  001A' 0C88'              	rrf	__Umul8_16@multiplier,f
  3649  001B' 0808'              	movf	__Umul8_16@multiplier,w
  3650  001C' 1D03               	btfss	3,2
  3651  001D' 280A'              	goto	i1l1636
  3652  001E' 0805'              	movf	__Umul8_16@product+1,w
  3653  001F' 0081'              	movwf	?__Umul8_16+1
  3654  0020' 0804'              	movf	__Umul8_16@product,w
  3655  0021' 0080'              	movwf	?__Umul8_16
  3656  0022' 0008               	return
  3657  0023'                    __end_of__Umul8_16:
  3658                           
  3659                           	psect	text17
  3660  0000'                    __ptext17:	
  3661 ;; *************** function ___fldiv *****************
  3662 ;; Defined at:
  3663 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcdiv.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  a               4    0[COMMON] unsigned int 
  3666 ;;  b               4    4[COMMON] unsigned int 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  grs             4    7[BANK0 ] unsigned long 
  3669 ;;  rem             4    0[BANK0 ] unsigned long 
  3670 ;;  new_exp         2    5[BANK0 ] int 
  3671 ;;  aexp            1   12[BANK0 ] unsigned char 
  3672 ;;  bexp            1   11[BANK0 ] unsigned char 
  3673 ;;  sign            1    4[BANK0 ] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  4    0[COMMON] unsigned char 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0, btemp+1
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3683 ;;      Params:         8       0       0       0
  3684 ;;      Locals:         0      13       0       0
  3685 ;;      Temps:          5       0       0       0
  3686 ;;      Totals:        13      13       0       0
  3687 ;;Total ram usage:       26 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_TMR0_ISR
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696  0000'                    ___fldiv:	
  3697                           ;psect for function ___fldiv
  3698                           
  3699                           
  3700                           ;incstack = 0
  3701                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3702  0000' 0807'              	movf	___fldiv@b+3,w
  3703  0001' 3980               	andlw	128
  3704  0002' 0088'              	movwf	??___fldiv
  3705  0003' 0808'              	movf	??___fldiv,w
  3706  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  3707  0005' 1303               	bcf	3,6	;RP1=0, select bank0
  3708  0006' 0084'              	movwf	___fldiv@sign
  3709  0007' 0807'              	movf	___fldiv@b+3,w
  3710  0008' 0088'              	movwf	??___fldiv
  3711  0009' 0708'              	addwf	??___fldiv,w
  3712  000A' 0089'              	movwf	??___fldiv+1
  3713  000B' 0809'              	movf	??___fldiv+1,w
  3714  000C' 008B'              	movwf	___fldiv@bexp
  3715  000D' 1B86'              	btfsc	___fldiv@b+2,7
  3716  000E' 140B'              	bsf	___fldiv@bexp,0
  3717  000F' 080B'              	movf	___fldiv@bexp,w
  3718  0010' 1903               	btfsc	3,2
  3719  0011' 2820'              	goto	i1l1782
  3720  0012' 0A0B'              	incf	___fldiv@bexp,w
  3721  0013' 1D03               	btfss	3,2
  3722  0014' 281D'              	goto	i1l1778
  3723  0015' 3000               	movlw	0
  3724  0016' 0087'              	movwf	___fldiv@b+3
  3725  0017' 3000               	movlw	0
  3726  0018' 0086'              	movwf	___fldiv@b+2
  3727  0019' 3000               	movlw	0
  3728  001A' 0085'              	movwf	___fldiv@b+1
  3729  001B' 3000               	movlw	0
  3730  001C' 0084'              	movwf	___fldiv@b
  3731  001D'                    i1l1778:
  3732  001D' 1786'              	bsf	___fldiv@b+2,7
  3733  001E' 0187'              	clrf	___fldiv@b+3
  3734  001F' 2828'              	goto	i1l1784
  3735  0020'                    i1l1782:
  3736  0020' 3000               	movlw	0
  3737  0021' 0087'              	movwf	___fldiv@b+3
  3738  0022' 3000               	movlw	0
  3739  0023' 0086'              	movwf	___fldiv@b+2
  3740  0024' 3000               	movlw	0
  3741  0025' 0085'              	movwf	___fldiv@b+1
  3742  0026' 3000               	movlw	0
  3743  0027' 0084'              	movwf	___fldiv@b
  3744  0028'                    i1l1784:
  3745  0028' 0803'              	movf	___fldiv@a+3,w
  3746  0029' 3980               	andlw	128
  3747  002A' 0088'              	movwf	??___fldiv
  3748  002B' 0808'              	movf	??___fldiv,w
  3749  002C' 0684'              	xorwf	___fldiv@sign,f
  3750  002D' 0803'              	movf	___fldiv@a+3,w
  3751  002E' 0088'              	movwf	??___fldiv
  3752  002F' 0708'              	addwf	??___fldiv,w
  3753  0030' 0089'              	movwf	??___fldiv+1
  3754  0031' 0809'              	movf	??___fldiv+1,w
  3755  0032' 008C'              	movwf	___fldiv@aexp
  3756  0033' 1B82'              	btfsc	___fldiv@a+2,7
  3757  0034' 140C'              	bsf	___fldiv@aexp,0
  3758  0035' 080C'              	movf	___fldiv@aexp,w
  3759  0036' 1903               	btfsc	3,2
  3760  0037' 2846'              	goto	i1l1802
  3761  0038' 0A0C'              	incf	___fldiv@aexp,w
  3762  0039' 1D03               	btfss	3,2
  3763  003A' 2843'              	goto	i1l1798
  3764  003B' 3000               	movlw	0
  3765  003C' 0083'              	movwf	___fldiv@a+3
  3766  003D' 3000               	movlw	0
  3767  003E' 0082'              	movwf	___fldiv@a+2
  3768  003F' 3000               	movlw	0
  3769  0040' 0081'              	movwf	___fldiv@a+1
  3770  0041' 3000               	movlw	0
  3771  0042' 0080'              	movwf	___fldiv@a
  3772  0043'                    i1l1798:
  3773  0043' 1782'              	bsf	___fldiv@a+2,7
  3774  0044' 0183'              	clrf	___fldiv@a+3
  3775  0045' 284E'              	goto	i1l605
  3776  0046'                    i1l1802:
  3777  0046' 3000               	movlw	0
  3778  0047' 0083'              	movwf	___fldiv@a+3
  3779  0048' 3000               	movlw	0
  3780  0049' 0082'              	movwf	___fldiv@a+2
  3781  004A' 3000               	movlw	0
  3782  004B' 0081'              	movwf	___fldiv@a+1
  3783  004C' 3000               	movlw	0
  3784  004D' 0080'              	movwf	___fldiv@a
  3785  004E'                    i1l605:
  3786  004E' 0803'              	movf	___fldiv@a+3,w
  3787  004F' 0402'              	iorwf	___fldiv@a+2,w
  3788  0050' 0401'              	iorwf	___fldiv@a+1,w
  3789  0051' 0400'              	iorwf	___fldiv@a,w
  3790  0052' 1D03               	skipz
  3791  0053' 286D'              	goto	i1l1812
  3792  0054' 3000               	movlw	0
  3793  0055' 0087'              	movwf	___fldiv@b+3
  3794  0056' 3000               	movlw	0
  3795  0057' 0086'              	movwf	___fldiv@b+2
  3796  0058' 3000               	movlw	0
  3797  0059' 0085'              	movwf	___fldiv@b+1
  3798  005A' 3000               	movlw	0
  3799  005B' 0084'              	movwf	___fldiv@b
  3800  005C' 3080               	movlw	128
  3801  005D' 0486'              	iorwf	___fldiv@b+2,f
  3802  005E' 307F               	movlw	127
  3803  005F' 0487'              	iorwf	___fldiv@b+3,f
  3804  0060'                    L3:
  3805  0060' 0804'              	movf	___fldiv@sign,w
  3806  0061' 0088'              	movwf	??___fldiv
  3807  0062' 0808'              	movf	??___fldiv,w
  3808  0063' 0487'              	iorwf	___fldiv@b+3,f
  3809  0064' 0807'              	movf	___fldiv@b+3,w
  3810  0065' 0083'              	movwf	?___fldiv+3
  3811  0066' 0806'              	movf	___fldiv@b+2,w
  3812  0067' 0082'              	movwf	?___fldiv+2
  3813  0068' 0805'              	movf	___fldiv@b+1,w
  3814  0069' 0081'              	movwf	?___fldiv+1
  3815  006A' 0804'              	movf	___fldiv@b,w
  3816  006B' 0080'              	movwf	?___fldiv
  3817  006C' 0008               	return
  3818  006D'                    i1l1812:
  3819  006D' 080B'              	movf	___fldiv@bexp,w
  3820  006E' 1D03               	btfss	3,2
  3821  006F' 2879'              	goto	i1l1818
  3822  0070' 3000               	movlw	0
  3823  0071' 0083'              	movwf	?___fldiv+3
  3824  0072' 3000               	movlw	0
  3825  0073' 0082'              	movwf	?___fldiv+2
  3826  0074' 3000               	movlw	0
  3827  0075' 0081'              	movwf	?___fldiv+1
  3828  0076' 3000               	movlw	0
  3829  0077' 0080'              	movwf	?___fldiv
  3830  0078' 0008               	return
  3831  0079'                    i1l1818:
  3832  0079' 080B'              	movf	___fldiv@bexp,w
  3833  007A' 0088'              	movwf	??___fldiv
  3834  007B' 0189'              	clrf	??___fldiv+1
  3835  007C' 0809'              	movf	??___fldiv+1,w
  3836  007D' 008B'              	movwf	??___fldiv+3
  3837  007E' 080C'              	movf	___fldiv@aexp,w
  3838  007F' 0208'              	subwf	??___fldiv,w
  3839  0080' 008A'              	movwf	??___fldiv+2
  3840  0081' 1C03               	skipc
  3841  0082' 038B'              	decf	??___fldiv+3,f
  3842  0083' 080A'              	movf	??___fldiv+2,w
  3843  0084' 3E7F               	addlw	127
  3844  0085' 0085'              	movwf	___fldiv@new_exp
  3845  0086' 080B'              	movf	??___fldiv+3,w
  3846  0087' 1803               	skipnc
  3847  0088' 3E01               	addlw	1
  3848  0089' 3E00               	addlw	0
  3849  008A' 0086'              	movwf	___fldiv@new_exp+1
  3850  008B' 0807'              	movf	___fldiv@b+3,w
  3851  008C' 0083'              	movwf	___fldiv@rem+3
  3852  008D' 0806'              	movf	___fldiv@b+2,w
  3853  008E' 0082'              	movwf	___fldiv@rem+2
  3854  008F' 0805'              	movf	___fldiv@b+1,w
  3855  0090' 0081'              	movwf	___fldiv@rem+1
  3856  0091' 0804'              	movf	___fldiv@b,w
  3857  0092' 0080'              	movwf	___fldiv@rem
  3858  0093' 3000               	movlw	0
  3859  0094' 0087'              	movwf	___fldiv@b+3
  3860  0095' 3000               	movlw	0
  3861  0096' 0086'              	movwf	___fldiv@b+2
  3862  0097' 3000               	movlw	0
  3863  0098' 0085'              	movwf	___fldiv@b+1
  3864  0099' 3000               	movlw	0
  3865  009A' 0084'              	movwf	___fldiv@b
  3866  009B' 3000               	movlw	0
  3867  009C' 008A'              	movwf	___fldiv@grs+3
  3868  009D' 3000               	movlw	0
  3869  009E' 0089'              	movwf	___fldiv@grs+2
  3870  009F' 3000               	movlw	0
  3871  00A0' 0088'              	movwf	___fldiv@grs+1
  3872  00A1' 3000               	movlw	0
  3873  00A2' 0087'              	movwf	___fldiv@grs
  3874  00A3' 018C'              	clrf	___fldiv@aexp
  3875  00A4'                    i1l1846:
  3876  00A4' 301A               	movlw	26
  3877  00A5' 020C'              	subwf	___fldiv@aexp,w
  3878  00A6' 1803               	btfsc	3,0
  3879  00A7' 28F2'              	goto	i1l1848
  3880  00A8' 080C'              	movf	___fldiv@aexp,w
  3881  00A9' 1903               	btfsc	3,2
  3882  00AA' 28C8'              	goto	i1l1838
  3883  00AB' 3001               	movlw	1
  3884  00AC' 0088'              	movwf	??___fldiv
  3885  00AD'                    u190_25:
  3886  00AD' 1003               	clrc
  3887  00AE' 0D80'              	rlf	___fldiv@rem,f
  3888  00AF' 0D81'              	rlf	___fldiv@rem+1,f
  3889  00B0' 0D82'              	rlf	___fldiv@rem+2,f
  3890  00B1' 0D83'              	rlf	___fldiv@rem+3,f
  3891  00B2' 0B88'              	decfsz	??___fldiv,f
  3892  00B3' 28AD'              	goto	u190_25
  3893  00B4' 3001               	movlw	1
  3894  00B5' 0088'              	movwf	??___fldiv
  3895  00B6'                    u191_25:
  3896  00B6' 1003               	clrc
  3897  00B7' 0D84'              	rlf	___fldiv@b,f
  3898  00B8' 0D85'              	rlf	___fldiv@b+1,f
  3899  00B9' 0D86'              	rlf	___fldiv@b+2,f
  3900  00BA' 0D87'              	rlf	___fldiv@b+3,f
  3901  00BB' 0B88'              	decfsz	??___fldiv,f
  3902  00BC' 28B6'              	goto	u191_25
  3903  00BD' 1B8A'              	btfsc	___fldiv@grs+3,7
  3904  00BE' 1404'              	bsf	___fldiv@b,0
  3905  00BF' 3001               	movlw	1
  3906  00C0' 0088'              	movwf	??___fldiv
  3907  00C1'                    u193_25:
  3908  00C1' 1003               	clrc
  3909  00C2' 0D87'              	rlf	___fldiv@grs,f
  3910  00C3' 0D88'              	rlf	___fldiv@grs+1,f
  3911  00C4' 0D89'              	rlf	___fldiv@grs+2,f
  3912  00C5' 0D8A'              	rlf	___fldiv@grs+3,f
  3913  00C6' 0B88'              	decfsz	??___fldiv,f
  3914  00C7' 28C1'              	goto	u193_25
  3915  00C8'                    i1l1838:
  3916  00C8' 0803'              	movf	___fldiv@a+3,w
  3917  00C9' 0203'              	subwf	___fldiv@rem+3,w
  3918  00CA' 1D03               	skipz
  3919  00CB' 28D6'              	goto	u194_25
  3920  00CC' 0802'              	movf	___fldiv@a+2,w
  3921  00CD' 0202'              	subwf	___fldiv@rem+2,w
  3922  00CE' 1D03               	skipz
  3923  00CF' 28D6'              	goto	u194_25
  3924  00D0' 0801'              	movf	___fldiv@a+1,w
  3925  00D1' 0201'              	subwf	___fldiv@rem+1,w
  3926  00D2' 1D03               	skipz
  3927  00D3' 28D6'              	goto	u194_25
  3928  00D4' 0800'              	movf	___fldiv@a,w
  3929  00D5' 0200'              	subwf	___fldiv@rem,w
  3930  00D6'                    u194_25:
  3931  00D6' 1C03               	skipc
  3932  00D7' 28ED'              	goto	i1l1844
  3933  00D8' 170A'              	bsf	___fldiv@grs+3,6
  3934  00D9' 0800'              	movf	___fldiv@a,w
  3935  00DA' 0280'              	subwf	___fldiv@rem,f
  3936  00DB' 0801'              	movf	___fldiv@a+1,w
  3937  00DC' 1C03               	skipc
  3938  00DD' 0F01'              	incfsz	___fldiv@a+1,w
  3939  00DE' 28E0'              	goto	u195_25
  3940  00DF' 28E1'              	goto	u195_26
  3941  00E0'                    u195_25:
  3942  00E0' 0281'              	subwf	___fldiv@rem+1,f
  3943  00E1'                    u195_26:
  3944  00E1' 0802'              	movf	___fldiv@a+2,w
  3945  00E2' 1C03               	skipc
  3946  00E3' 0F02'              	incfsz	___fldiv@a+2,w
  3947  00E4' 28E6'              	goto	u195_27
  3948  00E5' 28E7'              	goto	u195_28
  3949  00E6'                    u195_27:
  3950  00E6' 0282'              	subwf	___fldiv@rem+2,f
  3951  00E7'                    u195_28:
  3952  00E7' 0803'              	movf	___fldiv@a+3,w
  3953  00E8' 1C03               	skipc
  3954  00E9' 0F03'              	incfsz	___fldiv@a+3,w
  3955  00EA' 28EC'              	goto	u195_29
  3956  00EB' 28ED'              	goto	i1l1844
  3957  00EC'                    u195_29:
  3958  00EC' 0283'              	subwf	___fldiv@rem+3,f
  3959  00ED'                    i1l1844:
  3960  00ED' 3001               	movlw	1
  3961  00EE' 0088'              	movwf	??___fldiv
  3962  00EF' 0808'              	movf	??___fldiv,w
  3963  00F0' 078C'              	addwf	___fldiv@aexp,f
  3964  00F1' 28A4'              	goto	i1l1846
  3965  00F2'                    i1l1848:
  3966  00F2' 0803'              	movf	___fldiv@rem+3,w
  3967  00F3' 0402'              	iorwf	___fldiv@rem+2,w
  3968  00F4' 0401'              	iorwf	___fldiv@rem+1,w
  3969  00F5' 0400'              	iorwf	___fldiv@rem,w
  3970  00F6' 1D03               	btfss	3,2
  3971  00F7' 1407'              	bsf	___fldiv@grs,0
  3972  00F8'                    i1l1862:
  3973  00F8' 1B86'              	btfsc	___fldiv@b+2,7
  3974  00F9' 2915'              	goto	i1l1864
  3975  00FA' 3001               	movlw	1
  3976  00FB' 0088'              	movwf	??___fldiv
  3977  00FC'                    u198_25:
  3978  00FC' 1003               	clrc
  3979  00FD' 0D84'              	rlf	___fldiv@b,f
  3980  00FE' 0D85'              	rlf	___fldiv@b+1,f
  3981  00FF' 0D86'              	rlf	___fldiv@b+2,f
  3982  0100' 0D87'              	rlf	___fldiv@b+3,f
  3983  0101' 0B88'              	decfsz	??___fldiv,f
  3984  0102' 28FC'              	goto	u198_25
  3985  0103' 1B8A'              	btfsc	___fldiv@grs+3,7
  3986  0104' 1404'              	bsf	___fldiv@b,0
  3987  0105' 3001               	movlw	1
  3988  0106' 0088'              	movwf	??___fldiv
  3989  0107'                    u200_25:
  3990  0107' 1003               	clrc
  3991  0108' 0D87'              	rlf	___fldiv@grs,f
  3992  0109' 0D88'              	rlf	___fldiv@grs+1,f
  3993  010A' 0D89'              	rlf	___fldiv@grs+2,f
  3994  010B' 0D8A'              	rlf	___fldiv@grs+3,f
  3995  010C' 0B88'              	decfsz	??___fldiv,f
  3996  010D' 2907'              	goto	u200_25
  3997  010E' 30FF               	movlw	255
  3998  010F' 0785'              	addwf	___fldiv@new_exp,f
  3999  0110' 1803               	skipnc
  4000  0111' 0A86'              	incf	___fldiv@new_exp+1,f
  4001  0112' 30FF               	movlw	255
  4002  0113' 0786'              	addwf	___fldiv@new_exp+1,f
  4003  0114' 28F8'              	goto	i1l1862
  4004  0115'                    i1l1864:
  4005  0115' 018C'              	clrf	___fldiv@aexp
  4006  0116' 1F8A'              	btfss	___fldiv@grs+3,7
  4007  0117' 292E'              	goto	i1l1874
  4008  0118' 30FF               	movlw	255
  4009  0119' 0507'              	andwf	___fldiv@grs,w
  4010  011A' 0088'              	movwf	??___fldiv
  4011  011B' 30FF               	movlw	255
  4012  011C' 0508'              	andwf	___fldiv@grs+1,w
  4013  011D' 0089'              	movwf	??___fldiv+1
  4014  011E' 30FF               	movlw	255
  4015  011F' 0509'              	andwf	___fldiv@grs+2,w
  4016  0120' 008A'              	movwf	??___fldiv+2
  4017  0121' 307F               	movlw	127
  4018  0122' 050A'              	andwf	___fldiv@grs+3,w
  4019  0123' 008B'              	movwf	??___fldiv+3
  4020  0124' 080B'              	movf	??___fldiv+3,w
  4021  0125' 040A'              	iorwf	??___fldiv+2,w
  4022  0126' 0409'              	iorwf	??___fldiv+1,w
  4023  0127' 0408'              	iorwf	??___fldiv,w
  4024  0128' 1903               	skipnz
  4025  0129' 1804'              	btfsc	___fldiv@b,0
  4026  012A' 292C'              	goto	i1l1870
  4027  012B' 292E'              	goto	i1l1874
  4028  012C'                    i1l1870:
  4029  012C' 018C'              	clrf	___fldiv@aexp
  4030  012D' 0A8C'              	incf	___fldiv@aexp,f
  4031  012E'                    i1l1874:
  4032  012E' 080C'              	movf	___fldiv@aexp,w
  4033  012F' 1903               	btfsc	3,2
  4034  0130' 2960'              	goto	i1l1884
  4035  0131' 3001               	movlw	1
  4036  0132' 0784'              	addwf	___fldiv@b,f
  4037  0133' 3000               	movlw	0
  4038  0134' 1803               	skipnc
  4039  0135' 3001               	movlw	1
  4040  0136' 0785'              	addwf	___fldiv@b+1,f
  4041  0137' 3000               	movlw	0
  4042  0138' 1803               	skipnc
  4043  0139' 3001               	movlw	1
  4044  013A' 0786'              	addwf	___fldiv@b+2,f
  4045  013B' 3000               	movlw	0
  4046  013C' 1803               	skipnc
  4047  013D' 3001               	movlw	1
  4048  013E' 0787'              	addwf	___fldiv@b+3,f
  4049  013F' 1C07'              	btfss	___fldiv@b+3,0
  4050  0140' 2960'              	goto	i1l1884
  4051  0141' 0804'              	movf	___fldiv@b,w
  4052  0142' 0088'              	movwf	??___fldiv
  4053  0143' 0805'              	movf	___fldiv@b+1,w
  4054  0144' 0089'              	movwf	??___fldiv+1
  4055  0145' 0806'              	movf	___fldiv@b+2,w
  4056  0146' 008A'              	movwf	??___fldiv+2
  4057  0147' 0807'              	movf	___fldiv@b+3,w
  4058  0148' 008B'              	movwf	??___fldiv+3
  4059  0149' 3001               	movlw	1
  4060  014A' 008C'              	movwf	??___fldiv+4
  4061  014B'                    u207_25:
  4062  014B' 0D0B'              	rlf	??___fldiv+3,w
  4063  014C' 0C8B'              	rrf	??___fldiv+3,f
  4064  014D' 0C8A'              	rrf	??___fldiv+2,f
  4065  014E' 0C89'              	rrf	??___fldiv+1,f
  4066  014F' 0C88'              	rrf	??___fldiv,f
  4067  0150' 0B8C'              	decfsz	??___fldiv+4,f
  4068  0151' 294B'              	goto	u207_25
  4069  0152' 080B'              	movf	??___fldiv+3,w
  4070  0153' 0087'              	movwf	___fldiv@b+3
  4071  0154' 080A'              	movf	??___fldiv+2,w
  4072  0155' 0086'              	movwf	___fldiv@b+2
  4073  0156' 0809'              	movf	??___fldiv+1,w
  4074  0157' 0085'              	movwf	___fldiv@b+1
  4075  0158' 0808'              	movf	??___fldiv,w
  4076  0159' 0084'              	movwf	___fldiv@b
  4077  015A' 3001               	movlw	1
  4078  015B' 0785'              	addwf	___fldiv@new_exp,f
  4079  015C' 1803               	skipnc
  4080  015D' 0A86'              	incf	___fldiv@new_exp+1,f
  4081  015E' 3000               	movlw	0
  4082  015F' 0786'              	addwf	___fldiv@new_exp+1,f
  4083  0160'                    i1l1884:
  4084  0160' 0806'              	movf	___fldiv@new_exp+1,w
  4085  0161' 3A80               	xorlw	128
  4086  0162' 00FF               	movwf	127
  4087  0163' 3080               	movlw	128
  4088  0164' 027F               	subwf	127,w
  4089  0165' 1D03               	skipz
  4090  0166' 2969'              	goto	u208_25
  4091  0167' 30FF               	movlw	255
  4092  0168' 0205'              	subwf	___fldiv@new_exp,w
  4093  0169'                    u208_25:
  4094  0169' 1C03               	skipc
  4095  016A' 2979'              	goto	i1l1888
  4096  016B' 30FF               	movlw	255
  4097  016C' 1283               	bcf	3,5	;RP0=0, select bank0
  4098  016D' 1303               	bcf	3,6	;RP1=0, select bank0
  4099  016E' 0085'              	movwf	___fldiv@new_exp
  4100  016F' 3000               	movlw	0
  4101  0170' 0086'              	movwf	___fldiv@new_exp+1
  4102  0171' 3000               	movlw	0
  4103  0172' 0087'              	movwf	___fldiv@b+3
  4104  0173' 3000               	movlw	0
  4105  0174' 0086'              	movwf	___fldiv@b+2
  4106  0175' 3000               	movlw	0
  4107  0176' 0085'              	movwf	___fldiv@b+1
  4108  0177' 3000               	movlw	0
  4109  0178' 0084'              	movwf	___fldiv@b
  4110  0179'                    i1l1888:
  4111  0179' 1283               	bcf	3,5	;RP0=0, select bank0
  4112  017A' 1303               	bcf	3,6	;RP1=0, select bank0
  4113  017B' 0806'              	movf	___fldiv@new_exp+1,w
  4114  017C' 3A80               	xorlw	128
  4115  017D' 00FF               	movwf	127
  4116  017E' 3080               	movlw	128
  4117  017F' 027F               	subwf	127,w
  4118  0180' 1D03               	skipz
  4119  0181' 2984'              	goto	u209_25
  4120  0182' 3001               	movlw	1
  4121  0183' 0205'              	subwf	___fldiv@new_exp,w
  4122  0184'                    u209_25:
  4123  0184' 1803               	skipnc
  4124  0185' 2993'              	goto	i1l627
  4125  0186' 1283               	bcf	3,5	;RP0=0, select bank0
  4126  0187' 1303               	bcf	3,6	;RP1=0, select bank0
  4127  0188' 0185'              	clrf	___fldiv@new_exp
  4128  0189' 0186'              	clrf	___fldiv@new_exp+1
  4129  018A' 3000               	movlw	0
  4130  018B' 0087'              	movwf	___fldiv@b+3
  4131  018C' 3000               	movlw	0
  4132  018D' 0086'              	movwf	___fldiv@b+2
  4133  018E' 3000               	movlw	0
  4134  018F' 0085'              	movwf	___fldiv@b+1
  4135  0190' 3000               	movlw	0
  4136  0191' 0084'              	movwf	___fldiv@b
  4137  0192' 0184'              	clrf	___fldiv@sign
  4138  0193'                    i1l627:
  4139  0193' 1283               	bcf	3,5	;RP0=0, select bank0
  4140  0194' 1303               	bcf	3,6	;RP1=0, select bank0
  4141  0195' 0805'              	movf	___fldiv@new_exp,w
  4142  0196' 0088'              	movwf	??___fldiv
  4143  0197' 0808'              	movf	??___fldiv,w
  4144  0198' 008B'              	movwf	___fldiv@bexp
  4145  0199' 1C0B'              	btfss	___fldiv@bexp,0
  4146  019A' 299D'              	goto	i1l1900
  4147  019B' 1786'              	bsf	___fldiv@b+2,7
  4148  019C' 29A1'              	goto	i1l629
  4149  019D'                    i1l1900:
  4150  019D' 307F               	movlw	127
  4151  019E' 0088'              	movwf	??___fldiv
  4152  019F' 0808'              	movf	??___fldiv,w
  4153  01A0' 0586'              	andwf	___fldiv@b+2,f
  4154  01A1'                    i1l629:
  4155  01A1' 080B'              	movf	___fldiv@bexp,w
  4156  01A2' 0088'              	movwf	??___fldiv
  4157  01A3' 1003               	clrc
  4158  01A4' 0C08'              	rrf	??___fldiv,w
  4159  01A5' 0089'              	movwf	??___fldiv+1
  4160  01A6' 0809'              	movf	??___fldiv+1,w
  4161  01A7' 0087'              	movwf	___fldiv@b+3
  4162  01A8' 2860'              	goto	L3
  4163  01A9'                    __end_of___fldiv:
  4164  007E                     btemp	set	126	;btemp
  4165  007E                     wtemp0	set	126
  4166                           
  4167                           	psect	idloc
  4168                           
  4169                           ;Config register IDLOC0 @ 0x2000
  4170                           ;	unspecified, using default values
  4171  2000                     	org	8192
  4172  2000  3FFF               	dw	16383
  4173                           
  4174                           ;Config register IDLOC1 @ 0x2001
  4175                           ;	unspecified, using default values
  4176  2001                     	org	8193
  4177  2001  3FFF               	dw	16383
  4178                           
  4179                           ;Config register IDLOC2 @ 0x2002
  4180                           ;	unspecified, using default values
  4181  2002                     	org	8194
  4182  2002  3FFF               	dw	16383
  4183                           
  4184                           ;Config register IDLOC3 @ 0x2003
  4185                           ;	unspecified, using default values
  4186  2003                     	org	8195
  4187  2003  3FFF               	dw	16383
  4188                           
  4189                           	psect	config
  4190                           
  4191                           ;Config register CONFIG @ 0x2007
  4192                           ;	Oscillator Selection bits
  4193                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  4194                           ;	Watchdog Timer Enable bit
  4195                           ;	WDTE = OFF, WDT disabled
  4196                           ;	Power-up Timer Enable bit
  4197                           ;	PWRTE = ON, PWRT enabled
  4198                           ;	RA5/MCLR/VPP Pin Function Select bit
  4199                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  4200                           ;	Brown-out Detect Enable bit
  4201                           ;	BOREN = ON, BOD enabled
  4202                           ;	Low-Voltage Programming Enable bit
  4203                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  4204                           ;	Data EE Memory Code Protection bit
  4205                           ;	CPD = OFF, Data memory code protection off
  4206                           ;	Flash Program Memory Code Protection bit
  4207                           ;	CP = OFF, Code protection off
  4208  2007                     	org	8199
  4209  2007  3F50               	dw	16208

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      49
    BANK1            80     31      31
    BANK2            48      0       0

Pointer List with Targets:

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TMR0_ISR in COMMON

    _TMR0_ISR->___xxtofl
    ___fltol->___fldiv
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR0_ISR in BANK0

    _TMR0_ISR->___flmul
    ___fltol->___fldiv

Critical Paths under _main in BANK1

    _init->_UARTInit
    _UARTInit->___lldiv
    _UARTSendString->_UARTSendChar
    _UARTReadChar->_UARTDataReady
    _Servo_8_Write->___awdiv
    ___awdiv->___wmul

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0    2632
                                             23 BANK1      8     8      0
                      _Servo_8_Write
                         _Servo_Init
                      _UARTDataReady
                       _UARTReadChar
                     _UARTSendString
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     874
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             9     4      5     874
                                             14 BANK1      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     601
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       5     4      1     604
                                              1 BANK1      5     4      1
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTReadChar                                         0     0      0       0
                      _UARTDataReady
 ---------------------------------------------------------------------------------
 (2) _UARTDataReady                                        5     3      2       0
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Servo_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo_8_Write                                        4     4      0     972
                                             15 BANK1      4     4      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              6 BANK1      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             5     5      0    4393
                                             26 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     305
                                             13 BANK0     11     7      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Servo_8_Write
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _Servo_Init
   _UARTDataReady
   _UARTReadChar
     _UARTDataReady
   _UARTSendString
     _UARTSendChar
   _init
     _UARTInit
       ___lldiv

 _TMR0_ISR (ROOT)
   ___fldiv
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     1F      31       3       61.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1F      1F       7       38.8%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      5E      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Dec 09 12:57:38 2022

       UARTInit@baud_rate 000E              ___fldiv@aexp 000C              ___fldiv@bexp 000B  
                       pc 0002              ___fldiv@sign 0004                        l22 0003  
            ___awdiv@sign 000C                        fsr 0004       ___wmul@multiplicand 0002  
     __Umul8_16@word_mpld 0006                       l113 008B                       l106 006D  
                     l115 00A0                       l107 0070                       l116 00A4  
                     l117 00A9                       l118 00AD                       l119 00B2  
                     l256 000C                       fsr0 0004                       indf 0000  
            ___flmul@aexp 0012              ___flmul@bexp 0013              ___flmul@sign 000D  
            ___flmul@temp 0018              ___flmul@prod 0014              ___fltol@exp1 0017  
                    l2324 0004                      l2350 0017                      l2360 001F  
                    l2344 000C                      l2264 0012                      l2362 002D  
                    l2274 004A                      l2266 0022                      l2372 004E  
                    l2292 0056                      l2540 00B6                      l2278 0057  
                    l2376 0056                      l2368 0043                      l2392 0000  
                    l2288 002E                      l2386 0007                      l2494 0041  
                    l2488 0028                      l2578 00BE                      l2498 0056  
                    STR_1 0006                      STR_2 0006                      STR_3 0006  
                    u3005 003A                      u3015 0044                      u3045 0010  
                    u3125 0037                      u3135 004C                      u3207 000F  
                    u3145 0061                      u3195 0082                      u2805 0016  
                    u2825 0024                      u2915 000D                      u2835 0039  
                    u2925 0014                      u2845 004B                      u2875 000E  
                    u2885 0037                      u2975 0022                      u2995 002E  
                    _TMR0 0001                      _main 0000                      _init 0000  
                    btemp 007E                      start 0000*          ___fldiv@new_exp 0005  
           ___fltol@sign1 0016              main@contador 001D                     ?_main 0000  
                   ?_init 0000           __end_of___fldiv 01A9           __end_of___awdiv 005B  
         __end_of___flmul 02F1           __end_of___fltol 006D           __end_of___lldiv 0060  
         ___awdiv@divisor 0006                     _T1CON 0010                     i1l170 0075  
                   i1l168 0070                     i1l605 004E                     i1l702 0073  
                   i1l703 007D                     i1l449 004F                     i1l627 0193  
                   i1l629 01A1                     i1l664 0012                     i1l657 02E4  
                   i1l695 005D                     i1l689 001D           ___awdiv@counter 000B  
                   _RCREG 001A                     _TMR1H 000F                     _TMR1L 000E  
                   _SPBRG 0099                     _PORTB 0006                     _TXREG 0019  
        __end_of_UARTInit 0066          __end_of_TMR0_ISR 007E                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 0000  
            __end_of_main 00D3              __end_of_init 002F                    ??_main 0017  
                  ??_init 001F             main@detect_on 001B     __end_of_UARTDataReady 000F  
                  _CCPR1H 0016                    _CCPR1L 0015          ___awdiv@dividend 0008  
                  i1l2010 026A                    i1l2002 0236                    i1l2004 0253  
                  i1l2014 026C                    i1l2024 029E                    i1l2034 02CD  
                  i1l2210 0050                    i1l2028 02B4                    i1l2052 0015  
                  i1l2062 0030                    i1l2222 0071                    i1l2072 0071  
                  i1l2064 0042                    i1l2074 0062                    i1l2058 002C  
                  i1l2218 0063                    u200_25 0107                    i1l2086 009A  
                  i1l1802 0046                    i1l1730 000B                    i1l1900 019D  
                  i1l1812 006D                    i1l1636 000A                    i1l1750 003B  
                  i1l1734 0014                    i1l1920 001D                    i1l1760 005E  
                  i1l1752 004B                    i1l1818 0079                    i1l1922 001F  
                  i1l1844 00ED                    i1l1940 0044                    i1l1924 0027  
                  i1l1870 012C                    i1l1862 00F8                    i1l1838 00C8  
                  i1l1846 00A4                    i1l1782 0020                    i1l1950 005A  
                  i1l1942 004C                    i1l1864 0115                    i1l1848 00F2  
                  i1l1784 0028                    i1l1874 012E                    i1l1778 001D  
                  i1l1938 0042                    i1l1884 0160                    i1l1798 0043  
                  i1l1888 0179                    u230_25 01DF                    u207_25 014B  
                  u223_25 00FE                    u208_25 0169                    u232_25 0204  
                  _INTCON 000B                    u209_25 0184                    u234_25 0222  
                  u226_25 0153                    u235_25 023A                    u251_25 0039  
                  u244_25 0289                    u172_25 001D                    u245_25 02A7  
                  u237_25 0245                    u253_25 0055                    u190_25 00AD  
                  u166_25 0013                    u246_25 02BF                    u191_25 00B6  
                  u175_25 003C                    u255_25 006A                    u193_25 00C1  
                  u194_25 00D6                    u178_25 0054                    u195_25 00E0  
                  u259_25 0085                    u195_26 00E1                    u195_27 00E6  
                  u195_28 00E7                    u195_29 00EC                    u198_25 00FC  
                  u278_25 006C          __end_of___xxtofl 00A3     __end_of_Servo_8_Write 0024  
                  ___wmul 0000                 ??___fldiv 0008                 ??___awdiv 000A  
               ??___flmul 0008                    _data_s 0000                 ??___fltol 0011  
               ??___lldiv 0008                _Servo_Init 0000          ___awdiv@quotient 000D  
                  saved_w 007E              ___xxtofl@arg 000A              ___xxtofl@exp 0009  
            ___xxtofl@val 0000   __end_of__initialization 0005                ___fltol@f1 000D  
          __pcstackCOMMON 0000                 ?_UARTInit 000E                 ?_TMR0_ISR 0000  
          _OPTION_REGbits 0081  UARTSendString@max_length 0001                __pbssBANK0 0000  
       __end_of__Umul8_16 0023                __pmaintext 0000                   ?___wmul 0000  
              ??_UARTInit 0013                ??_TMR0_ISR 001A                __pintentry 0000  
             ?_Servo_Init 0000                   _CCP1CON 0017                 ?___xxtofl 0000  
           ?_UARTReadChar 0000                __stringtab 0000             ?_UARTSendChar 0000  
              _frecuencia 0008                   ___fldiv 0000                   ___awdiv 0000  
                 ___flmul 0000                   ___fltol 0000                   ___lldiv 0000  
               _CMCONbits 001F            _UARTSendString 0000                   __ptext1 0000  
                 __ptext2 0000                   __ptext3 0000                   __ptext4 0000  
                 __ptext5 0000                   __ptext6 0000                   __ptext7 0000  
                 __ptext8 0000                   __ptext9 0000                   _cont_sr 000C  
               _T1CONbits 0010                ??___xxtofl 0004                   _periodo 000E  
          ??_UARTReadChar 001F                   clrloop0 0001      end_of_initialization 0005  
          ??_UARTSendChar 001F           ___lldiv@divisor 0000           ___lldiv@counter 000D  
               _RCSTAbits 0018    __end_of_UARTSendString 0029                 _PORTAbits 0005  
               _PORTBbits 0006             ___xxtofl@sign 0008                 _TRISAbits 0085  
               _TRISBbits 0086               ___fldiv@grs 0007               ___fldiv@rem 0000  
             ___flmul@grs 000E                 _TXSTAbits 0098           ?_UARTSendString 0001  
          __end_of___wmul 0023       start_initialization 0000      __end_of_UARTReadChar 000B  
                ??___wmul 001F                 __Umul8_16 0000              ??_Servo_Init 001F  
    __end_of_UARTSendChar 000A                 ___fldiv@a 0000                 ___fldiv@b 0004  
               ___flmul@a 0004                 ___flmul@b 0000                 ___latbits 0000  
           __pcstackBANK0 0000             __pcstackBANK1 0000             _UARTDataReady 0000  
      __end_of_Servo_Init 0016             _Servo_8_Write 0000             UARTSendChar@c 0000  
                ?___fldiv 0000                  ?___awdiv 0006                  ?___flmul 0000  
                ?___fltol 000D                  ?___lldiv 0000                ?__Umul8_16 0000  
               __pstrings 0000            ?_UARTDataReady 0000         interrupt_function 0000  
          ___wmul@product 0004                 clear_ram0 0000                  _PIE1bits 008C  
         UARTSendString@i 0004            ?_Servo_8_Write 0000                  _PIR1bits 000C  
                _UARTInit 0000                  _TMR0_ISR 0000               __stringbase 0005  
       ___wmul@multiplier 0000                 main@letra 001A          ??_UARTSendString 0002  
        Servo_8_Write@ang 0012              UARTInit@BRGH 0012               ??__Umul8_16 0002  
      __end_of__stringtab 0006           ??_UARTDataReady 0002                  ___xxtofl 0000  
                __ptext10 0000                  __ptext11 0000                  __ptext12 0000  
                __ptext13 0000                  __ptext14 0000                  __ptext15 0000  
                __ptext16 0000                  __ptext17 0000              _UARTReadChar 0000  
            _UARTSendChar 0000           ??_Servo_8_Write 000F                _INTCONbits 000B  
       UARTSendString@str 0003                  intlevel1 0000*         ___lldiv@dividend 0004  
               stringcode 0000               _valor_pasos 000A    __Umul8_16@multiplicand 0000  
        ___lldiv@quotient 0009                  stringdir 0000                  stringtab 0000  
    __Umul8_16@multiplier 0008         __Umul8_16@product 0004  
