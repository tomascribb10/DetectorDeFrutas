

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Aug 01 19:57:02 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.36
    22                           ; Generated 28/01/2022 GMT
    23                           ; 
    24                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _RCREG	set	4014
    57  0000                     _TXREG	set	4013
    58  0000                     _SPBRG	set	4015
    59  0000                     _BAUDCON	set	4024
    60  0000                     _RCSTAbits	set	4011
    61  0000                     _TXSTAbits	set	4012
    62  0000                     _BAUDCONbits	set	4024
    63  0000                     _LATBbits	set	3978
    64  0000                     _TRISBbits	set	3987
    65  0000                     _ADCON1bits	set	4033
    66  0000                     _PIR1bits	set	3998
    67  0000                     _RCSTA	set	4011
    68  0000                     _TXSTA	set	4012
    69  0000                     _TRISCbits	set	3988
    70  0000                     _SPBRGH	set	4016
    71                           
    72                           	psect	smallconst
    73  000800                     __psmallconst:
    74                           	callstack 0
    75  000800  00                 	db	0
    76  000801                     STR_1:
    77  000801  4C                 	db	76	;'L'
    78  000802  65                 	db	101	;'e'
    79  000803  64                 	db	100	;'d'
    80  000804  20                 	db	32
    81  000805  31                 	db	49	;'1'
    82  000806  3A                 	db	58	;':'
    83  000807  20                 	db	32
    84  000808  45                 	db	69	;'E'
    85  000809  6E                 	db	110	;'n'
    86  00080A  63                 	db	99	;'c'
    87  00080B  65                 	db	101	;'e'
    88  00080C  6E                 	db	110	;'n'
    89  00080D  64                 	db	100	;'d'
    90  00080E  69                 	db	105	;'i'
    91  00080F  64                 	db	100	;'d'
    92  000810  6F                 	db	111	;'o'
    93  000811  0D                 	db	13
    94  000812  0A                 	db	10
    95  000813  00                 	db	0
    96  000814                     STR_3:
    97  000814  4C                 	db	76	;'L'
    98  000815  65                 	db	101	;'e'
    99  000816  64                 	db	100	;'d'
   100  000817  20                 	db	32
   101  000818  32                 	db	50	;'2'
   102  000819  3A                 	db	58	;':'
   103  00081A  20                 	db	32
   104  00081B  45                 	db	69	;'E'
   105  00081C  6E                 	db	110	;'n'
   106  00081D  63                 	db	99	;'c'
   107  00081E  65                 	db	101	;'e'
   108  00081F  6E                 	db	110	;'n'
   109  000820  64                 	db	100	;'d'
   110  000821  69                 	db	105	;'i'
   111  000822  64                 	db	100	;'d'
   112  000823  6F                 	db	111	;'o'
   113  000824  0D                 	db	13
   114  000825  0A                 	db	10
   115  000826  00                 	db	0
   116  000827                     STR_2:
   117  000827  4C                 	db	76	;'L'
   118  000828  65                 	db	101	;'e'
   119  000829  64                 	db	100	;'d'
   120  00082A  20                 	db	32
   121  00082B  31                 	db	49	;'1'
   122  00082C  3A                 	db	58	;':'
   123  00082D  20                 	db	32
   124  00082E  41                 	db	65	;'A'
   125  00082F  70                 	db	112	;'p'
   126  000830  61                 	db	97	;'a'
   127  000831  67                 	db	103	;'g'
   128  000832  61                 	db	97	;'a'
   129  000833  64                 	db	100	;'d'
   130  000834  6F                 	db	111	;'o'
   131  000835  0D                 	db	13
   132  000836  0A                 	db	10
   133  000837  00                 	db	0
   134  000838                     STR_4:
   135  000838  4C                 	db	76	;'L'
   136  000839  65                 	db	101	;'e'
   137  00083A  64                 	db	100	;'d'
   138  00083B  20                 	db	32
   139  00083C  32                 	db	50	;'2'
   140  00083D  3A                 	db	58	;':'
   141  00083E  20                 	db	32
   142  00083F  41                 	db	65	;'A'
   143  000840  70                 	db	112	;'p'
   144  000841  61                 	db	97	;'a'
   145  000842  67                 	db	103	;'g'
   146  000843  61                 	db	97	;'a'
   147  000844  64                 	db	100	;'d'
   148  000845  6F                 	db	111	;'o'
   149  000846  0D                 	db	13
   150  000847  0A                 	db	10
   151  000848  00                 	db	0
   152  000849  00                 	db	0	; dummy byte at the end
   153  0000                     
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157  000AB8                     __pcinit:
   158                           	callstack 0
   159  000AB8                     start_initialization:
   160                           	callstack 0
   161  000AB8                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Clear objects allocated to COMRAM (1 bytes)
   165  000AB8  6A1A               	clrf	__pbssCOMRAM& (0+255),c
   166  000ABA                     end_of_initialization:
   167                           	callstack 0
   168  000ABA                     __end_of__initialization:
   169                           	callstack 0
   170  000ABA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   171  000ABC  6EF8               	movwf	tblptru,c
   172  000ABE  0100               	movlb	0
   173  000AC0  EF25  F004         	goto	_main	;jump to C main() function
   174                           
   175                           	psect	bssCOMRAM
   176  00001A                     __pbssCOMRAM:
   177                           	callstack 0
   178  00001A                     _dato_rx:
   179                           	callstack 0
   180  00001A                     	ds	1
   181                           
   182                           	psect	cstackCOMRAM
   183  000001                     __pcstackCOMRAM:
   184                           	callstack 0
   185  000001                     ?_Uart_Available:
   186                           	callstack 0
   187  000001                     ?___lldiv:
   188                           	callstack 0
   189  000001                     Uart_Send_Char@txData:
   190                           	callstack 0
   191  000001                     ___lldiv@dividend:
   192                           	callstack 0
   193                           
   194                           ; 4 bytes @ 0x0
   195  000001                     	ds	1
   196  000002                     Uart_Send_String@info:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x1
   200  000002                     	ds	1
   201  000003                     ??_Uart_Available:
   202                           
   203                           ; 1 bytes @ 0x2
   204  000003                     	ds	1
   205  000004                     
   206                           ; 1 bytes @ 0x3
   207  000004                     	ds	1
   208  000005                     ___lldiv@divisor:
   209                           	callstack 0
   210                           
   211                           ; 4 bytes @ 0x4
   212  000005                     	ds	4
   213  000009                     ___lldiv@quotient:
   214                           	callstack 0
   215                           
   216                           ; 4 bytes @ 0x8
   217  000009                     	ds	4
   218  00000D                     ___lldiv@counter:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0xC
   222  00000D                     	ds	1
   223  00000E                     Uart_Init@baud:
   224                           	callstack 0
   225                           
   226                           ; 4 bytes @ 0xD
   227  00000E                     	ds	4
   228  000012                     ??_Uart_Init:
   229                           
   230                           ; 1 bytes @ 0x11
   231  000012                     	ds	4
   232  000016                     Uart_Init@vx:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x15
   236  000016                     	ds	2
   237  000018                     ??_main:
   238                           
   239                           ; 1 bytes @ 0x17
   240  000018                     	ds	2
   241                           
   242 ;;
   243 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   244 ;;
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 23 in file "UART_RX_Leds.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : 0/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   261 ;;      Params:         0       0       0       0       0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0       0       0       0       0
   263 ;;      Temps:          2       0       0       0       0       0       0       0       0
   264 ;;      Totals:         2       0       0       0       0       0       0       0       0
   265 ;;Total ram usage:        2 bytes
   266 ;; Hardware stack levels required when called: 2
   267 ;; This function calls:
   268 ;;		_Uart_Available
   269 ;;		_Uart_Init
   270 ;;		_Uart_Read
   271 ;;		_Uart_Send_String
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text0
   278  00084A                     __ptext0:
   279                           	callstack 0
   280  00084A                     _main:
   281                           	callstack 29
   282  00084A                     
   283                           ;UART_RX_Leds.c: 25:     ADCON1bits.PCFG = 0x0F;
   284  00084A  0E0F               	movlw	15
   285  00084C  12C1               	iorwf	193,f,c	;volatile
   286  00084E                     
   287                           ;UART_RX_Leds.c: 26:     TRISBbits.RB2 = 0;
   288  00084E  9493               	bcf	147,2,c	;volatile
   289  000850                     
   290                           ;UART_RX_Leds.c: 27:     TRISBbits.RB3 = 0;
   291  000850  9693               	bcf	147,3,c	;volatile
   292  000852                     
   293                           ;UART_RX_Leds.c: 28:     LATBbits.LB2 = 0;
   294  000852  948A               	bcf	138,2,c	;volatile
   295  000854                     
   296                           ;UART_RX_Leds.c: 29:     LATBbits.LB3 = 0;
   297  000854  968A               	bcf	138,3,c	;volatile
   298  000856                     
   299                           ;UART_RX_Leds.c: 30:     Uart_Init(9600);
   300  000856  0E80               	movlw	128
   301  000858  6E0E               	movwf	Uart_Init@baud^0,c
   302  00085A  0E25               	movlw	37
   303  00085C  6E0F               	movwf	(Uart_Init@baud+1)^0,c
   304  00085E  0E00               	movlw	0
   305  000860  6E10               	movwf	(Uart_Init@baud+2)^0,c
   306  000862  0E00               	movlw	0
   307  000864  6E11               	movwf	(Uart_Init@baud+3)^0,c
   308  000866  ECDE  F004         	call	_Uart_Init	;wreg free
   309  00086A                     l967:
   310                           
   311                           ;UART_RX_Leds.c: 33:     {;UART_RX_Leds.c: 34:         if(Uart_Available() > 0)
   312  00086A  EC43  F005         	call	_Uart_Available	;wreg free
   313  00086E  BE02               	btfsc	(?_Uart_Available+1)^0,7,c
   314  000870  EF42  F004         	goto	u221
   315  000874  5002               	movf	(?_Uart_Available+1)^0,w,c
   316  000876  E108               	bnz	u220
   317  000878  0401               	decf	?_Uart_Available^0,w,c
   318  00087A  A0D8               	btfss	status,0,c
   319  00087C  EF42  F004         	goto	u221
   320  000880  EF44  F004         	goto	u220
   321  000884                     u221:
   322  000884  EF35  F004         	goto	l967
   323  000888                     u220:
   324  000888                     
   325                           ;UART_RX_Leds.c: 35:         {;UART_RX_Leds.c: 36:             dato_rx = Uart_Read();
   326  000888  EC30  F005         	call	_Uart_Read	;wreg free
   327  00088C  6E1A               	movwf	_dato_rx^0,c
   328                           
   329                           ;UART_RX_Leds.c: 38:             switch(dato_rx)
   330  00088E  EF6D  F004         	goto	l981
   331  000892                     l24:
   332                           
   333                           ;UART_RX_Leds.c: 41:                     LATBbits.LB2 = 1;
   334  000892  848A               	bsf	138,2,c	;volatile
   335  000894                     
   336                           ;UART_RX_Leds.c: 42:                     Uart_Send_String("Led 1: Encendido\r\n");
   337  000894  0E01               	movlw	low STR_1
   338  000896  6E02               	movwf	Uart_Send_String@info^0,c
   339  000898  0E08               	movlw	high STR_1
   340  00089A  6E03               	movwf	(Uart_Send_String@info+1)^0,c
   341  00089C  EC15  F005         	call	_Uart_Send_String	;wreg free
   342                           
   343                           ;UART_RX_Leds.c: 43:                     break;
   344  0008A0  EF35  F004         	goto	l967
   345  0008A4                     l26:
   346                           
   347                           ;UART_RX_Leds.c: 46:                     LATBbits.LB2 = 0;
   348  0008A4  948A               	bcf	138,2,c	;volatile
   349  0008A6                     
   350                           ;UART_RX_Leds.c: 47:                     Uart_Send_String("Led 1: Apagado\r\n");
   351  0008A6  0E27               	movlw	low STR_2
   352  0008A8  6E02               	movwf	Uart_Send_String@info^0,c
   353  0008AA  0E08               	movlw	high STR_2
   354  0008AC  6E03               	movwf	(Uart_Send_String@info+1)^0,c
   355  0008AE  EC15  F005         	call	_Uart_Send_String	;wreg free
   356                           
   357                           ;UART_RX_Leds.c: 48:                     break;
   358  0008B2  EF35  F004         	goto	l967
   359  0008B6                     l27:
   360                           
   361                           ;UART_RX_Leds.c: 51:                     LATBbits.LB3 = 1;
   362  0008B6  868A               	bsf	138,3,c	;volatile
   363  0008B8                     
   364                           ;UART_RX_Leds.c: 52:                     Uart_Send_String("Led 2: Encendido\r\n");
   365  0008B8  0E14               	movlw	low STR_3
   366  0008BA  6E02               	movwf	Uart_Send_String@info^0,c
   367  0008BC  0E08               	movlw	high STR_3
   368  0008BE  6E03               	movwf	(Uart_Send_String@info+1)^0,c
   369  0008C0  EC15  F005         	call	_Uart_Send_String	;wreg free
   370                           
   371                           ;UART_RX_Leds.c: 53:                     break;
   372  0008C4  EF35  F004         	goto	l967
   373  0008C8                     l28:
   374                           
   375                           ;UART_RX_Leds.c: 56:                     LATBbits.LB3 = 0;
   376  0008C8  968A               	bcf	138,3,c	;volatile
   377  0008CA                     
   378                           ;UART_RX_Leds.c: 57:                     Uart_Send_String("Led 2: Apagado\r\n");
   379  0008CA  0E38               	movlw	low STR_4
   380  0008CC  6E02               	movwf	Uart_Send_String@info^0,c
   381  0008CE  0E08               	movlw	high STR_4
   382  0008D0  6E03               	movwf	(Uart_Send_String@info+1)^0,c
   383  0008D2  EC15  F005         	call	_Uart_Send_String	;wreg free
   384                           
   385                           ;UART_RX_Leds.c: 58:                     break;
   386  0008D6  EF35  F004         	goto	l967
   387  0008DA                     l981:
   388  0008DA  501A               	movf	_dato_rx^0,w,c
   389  0008DC  6E18               	movwf	??_main^0,c
   390  0008DE  6A19               	clrf	(??_main+1)^0,c
   391                           
   392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   393                           ; Switch size 1, requested type "simple"
   394                           ; Number of cases is 1, Range of values is 0 to 0
   395                           ; switch strategies available:
   396                           ; Name         Instructions Cycles
   397                           ; simple_byte            4     3 (average)
   398                           ;	Chosen strategy is simple_byte
   399  0008E0  5019               	movf	(??_main+1)^0,w,c
   400  0008E2  0A00               	xorlw	0	; case 0
   401  0008E4  B4D8               	btfsc	status,2,c
   402  0008E6  EF77  F004         	goto	l991
   403  0008EA  EF35  F004         	goto	l967
   404  0008EE                     l991:
   405                           
   406                           ; Switch size 1, requested type "simple"
   407                           ; Number of cases is 4, Range of values is 97 to 100
   408                           ; switch strategies available:
   409                           ; Name         Instructions Cycles
   410                           ; simple_byte           13     7 (average)
   411                           ;	Chosen strategy is simple_byte
   412  0008EE  5018               	movf	??_main^0,w,c
   413  0008F0  0A61               	xorlw	97	; case 97
   414  0008F2  B4D8               	btfsc	status,2,c
   415  0008F4  EF49  F004         	goto	l24
   416  0008F8  0A03               	xorlw	3	; case 98
   417  0008FA  B4D8               	btfsc	status,2,c
   418  0008FC  EF52  F004         	goto	l26
   419  000900  0A01               	xorlw	1	; case 99
   420  000902  B4D8               	btfsc	status,2,c
   421  000904  EF5B  F004         	goto	l27
   422  000908  0A07               	xorlw	7	; case 100
   423  00090A  B4D8               	btfsc	status,2,c
   424  00090C  EF64  F004         	goto	l28
   425  000910  EF35  F004         	goto	l967
   426  000914  EF00  F000         	goto	start
   427  000918                     __end_of_main:
   428                           	callstack 0
   429                           
   430 ;; *************** function _Uart_Send_String *****************
   431 ;; Defined at:
   432 ;;		line 35 in file "uart.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;  info            2    1[COMRAM] PTR unsigned char 
   435 ;;		 -> STR_4(17), STR_3(19), STR_2(17), STR_1(19), 
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   447 ;;      Params:         2       0       0       0       0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0       0       0
   450 ;;      Totals:         2       0       0       0       0       0       0       0       0
   451 ;;Total ram usage:        2 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; Hardware stack levels required when called: 1
   454 ;; This function calls:
   455 ;;		_Uart_Send_Char
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           	psect	text1
   462  000A2A                     __ptext1:
   463                           	callstack 0
   464  000A2A                     _Uart_Send_String:
   465                           	callstack 29
   466  000A2A                     
   467                           ;uart.c: 35: void Uart_Send_String(char *info);uart.c: 36: {;uart.c: 37:     while(*info
      +                          )
   468  000A2A  EF21  F005         	goto	l953
   469  000A2E                     l949:
   470                           
   471                           ;uart.c: 38:     {;uart.c: 39:         Uart_Send_Char(*info++);
   472  000A2E  C002  FFF6         	movff	Uart_Send_String@info,tblptrl
   473  000A32  C003  FFF7         	movff	Uart_Send_String@info+1,tblptrh
   474  000A36                     	if	0	;tblptru may be non-zero
   475  000A36                     	endif
   476  000A36                     	if	0	;tblptru may be non-zero
   477  000A36                     	endif
   478  000A36  0008               	tblrd		*
   479  000A38  50F5               	movf	tablat,w,c
   480  000A3A  EC51  F005         	call	_Uart_Send_Char
   481  000A3E  4A02               	infsnz	Uart_Send_String@info^0,f,c
   482  000A40  2A03               	incf	(Uart_Send_String@info+1)^0,f,c
   483  000A42                     l953:
   484                           
   485                           ;uart.c: 37:     while(*info)
   486  000A42  C002  FFF6         	movff	Uart_Send_String@info,tblptrl
   487  000A46  C003  FFF7         	movff	Uart_Send_String@info+1,tblptrh
   488  000A4A                     	if	0	;tblptru may be non-zero
   489  000A4A                     	endif
   490  000A4A                     	if	0	;tblptru may be non-zero
   491  000A4A                     	endif
   492  000A4A  0008               	tblrd		*
   493  000A4C  50F5               	movf	tablat,w,c
   494  000A4E  0900               	iorlw	0
   495  000A50  A4D8               	btfss	status,2,c
   496  000A52  EF2D  F005         	goto	u211
   497  000A56  EF2F  F005         	goto	u210
   498  000A5A                     u211:
   499  000A5A  EF17  F005         	goto	l949
   500  000A5E                     u210:
   501  000A5E  0012               	return		;funcret
   502  000A60                     __end_of_Uart_Send_String:
   503                           	callstack 0
   504                           
   505 ;; *************** function _Uart_Send_Char *****************
   506 ;; Defined at:
   507 ;;		line 29 in file "uart.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;  txData          1    wreg     unsigned char 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  txData          1    0[COMRAM] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   521 ;;      Params:         0       0       0       0       0       0       0       0       0
   522 ;;      Locals:         1       0       0       0       0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0       0       0
   524 ;;      Totals:         1       0       0       0       0       0       0       0       0
   525 ;;Total ram usage:        1 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_Uart_Send_String
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text2
   535  000AA2                     __ptext2:
   536                           	callstack 0
   537  000AA2                     _Uart_Send_Char:
   538                           	callstack 29
   539                           
   540                           ;incstack = 0
   541                           ;Uart_Send_Char@txData stored from wreg
   542  000AA2  6E01               	movwf	Uart_Send_Char@txData^0,c
   543  000AA4                     l64:
   544  000AA4  A2AC               	btfss	172,1,c	;volatile
   545  000AA6  EF57  F005         	goto	u11
   546  000AAA  EF59  F005         	goto	u10
   547  000AAE                     u11:
   548  000AAE  EF52  F005         	goto	l64
   549  000AB2                     u10:
   550  000AB2                     
   551                           ;uart.c: 32:     TXREG = txData;
   552  000AB2  C001  FFAD         	movff	Uart_Send_Char@txData,4013	;volatile
   553  000AB6  0012               	return		;funcret
   554  000AB8                     __end_of_Uart_Send_Char:
   555                           	callstack 0
   556                           
   557 ;; *************** function _Uart_Read *****************
   558 ;; Defined at:
   559 ;;		line 43 in file "uart.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      unsigned char 
   566 ;; Registers used:
   567 ;;		wreg, status,2
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   573 ;;      Params:         0       0       0       0       0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0
   576 ;;      Totals:         0       0       0       0       0       0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;;		_Uart_Read_String
   584 ;;		_Uart_Read_StringUntil
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text3
   589  000A60                     __ptext3:
   590                           	callstack 0
   591  000A60                     _Uart_Read:
   592                           	callstack 30
   593  000A60                     l76:
   594  000A60  AA9E               	btfss	158,5,c	;volatile
   595  000A62  EF35  F005         	goto	u71
   596  000A66  EF37  F005         	goto	u70
   597  000A6A                     u71:
   598  000A6A  EF30  F005         	goto	l76
   599  000A6E                     u70:
   600  000A6E                     
   601                           ;uart.c: 46:     if(RCSTAbits.OERR == 1)
   602  000A6E  A2AB               	btfss	171,1,c	;volatile
   603  000A70  EF3C  F005         	goto	u81
   604  000A74  EF3E  F005         	goto	u80
   605  000A78                     u81:
   606  000A78  EF40  F005         	goto	l79
   607  000A7C                     u80:
   608  000A7C                     
   609                           ;uart.c: 47:     {;uart.c: 48:         RCSTAbits.CREN = 0;
   610  000A7C  98AB               	bcf	171,4,c	;volatile
   611                           
   612                           ;uart.c: 49:         RCSTAbits.CREN = 1;
   613  000A7E  88AB               	bsf	171,4,c	;volatile
   614  000A80                     l79:
   615                           
   616                           ;uart.c: 51:     PIR1bits.RCIF = 0;
   617  000A80  9A9E               	bcf	158,5,c	;volatile
   618  000A82                     
   619                           ;uart.c: 52:     return RCREG;
   620  000A82  50AE               	movf	174,w,c	;volatile
   621  000A84  0012               	return		;funcret
   622  000A86                     __end_of_Uart_Read:
   623                           	callstack 0
   624                           
   625 ;; *************** function _Uart_Init *****************
   626 ;; Defined at:
   627 ;;		line 11 in file "uart.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  baud            4   13[COMRAM] unsigned long 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  vx              2   21[COMRAM] unsigned int 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   641 ;;      Params:         4       0       0       0       0       0       0       0       0
   642 ;;      Locals:         2       0       0       0       0       0       0       0       0
   643 ;;      Temps:          4       0       0       0       0       0       0       0       0
   644 ;;      Totals:        10       0       0       0       0       0       0       0       0
   645 ;;Total ram usage:       10 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 1
   648 ;; This function calls:
   649 ;;		___lldiv
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text4
   656  0009BC                     __ptext4:
   657                           	callstack 0
   658  0009BC                     _Uart_Init:
   659                           	callstack 29
   660  0009BC                     
   661                           ;uart.c: 11: void Uart_Init(unsigned long baud);uart.c: 12: {;uart.c: 13:     TRISCbits.
      +                          RC6 = 0;
   662  0009BC  9C94               	bcf	148,6,c	;volatile
   663                           
   664                           ;uart.c: 14:     TRISCbits.RC7 = 1;
   665  0009BE  8E94               	bsf	148,7,c	;volatile
   666  0009C0                     
   667                           ;uart.c: 15:     TXSTA = 0x24;
   668  0009C0  0E24               	movlw	36
   669  0009C2  6EAC               	movwf	172,c	;volatile
   670                           
   671                           ;uart.c: 16:     RCSTA = 0x90;
   672  0009C4  0E90               	movlw	144
   673  0009C6  6EAB               	movwf	171,c	;volatile
   674                           
   675                           ;uart.c: 17:     BAUDCON = 0x00;
   676  0009C8  0E00               	movlw	0
   677  0009CA  6EB8               	movwf	184,c	;volatile
   678  0009CC                     
   679                           ;uart.c: 18:     BAUDCONbits.BRG16 = 1;
   680  0009CC  86B8               	bsf	184,3,c	;volatile
   681  0009CE                     
   682                           ;uart.c: 19:     unsigned int vx = (48000000/(baud*4))-1;
   683  0009CE  0E00               	movlw	0
   684  0009D0  6E01               	movwf	___lldiv@dividend^0,c
   685  0009D2  0E6C               	movlw	108
   686  0009D4  6E02               	movwf	(___lldiv@dividend+1)^0,c
   687  0009D6  0EDC               	movlw	220
   688  0009D8  6E03               	movwf	(___lldiv@dividend+2)^0,c
   689  0009DA  0E02               	movlw	2
   690  0009DC  6E04               	movwf	(___lldiv@dividend+3)^0,c
   691  0009DE  C00E  F012         	movff	Uart_Init@baud,??_Uart_Init
   692  0009E2  C00F  F013         	movff	Uart_Init@baud+1,??_Uart_Init+1
   693  0009E6  C010  F014         	movff	Uart_Init@baud+2,??_Uart_Init+2
   694  0009EA  C011  F015         	movff	Uart_Init@baud+3,??_Uart_Init+3
   695  0009EE  0E02               	movlw	2
   696  0009F0                     u195:
   697  0009F0  90D8               	bcf	status,0,c
   698  0009F2  3612               	rlcf	??_Uart_Init^0,f,c
   699  0009F4  3613               	rlcf	(??_Uart_Init+1)^0,f,c
   700  0009F6  3614               	rlcf	(??_Uart_Init+2)^0,f,c
   701  0009F8  3615               	rlcf	(??_Uart_Init+3)^0,f,c
   702  0009FA  2EE8               	decfsz	wreg,f,c
   703  0009FC  EFF8  F004         	goto	u195
   704  000A00  C012  F005         	movff	??_Uart_Init,___lldiv@divisor
   705  000A04  C013  F006         	movff	??_Uart_Init+1,___lldiv@divisor+1
   706  000A08  C014  F007         	movff	??_Uart_Init+2,___lldiv@divisor+2
   707  000A0C  C015  F008         	movff	??_Uart_Init+3,___lldiv@divisor+3
   708  000A10  EC8C  F004         	call	___lldiv	;wreg free
   709  000A14  0EFF               	movlw	255
   710  000A16  2401               	addwf	?___lldiv^0,w,c
   711  000A18  6E16               	movwf	Uart_Init@vx^0,c
   712  000A1A  0EFF               	movlw	255
   713  000A1C  2002               	addwfc	(?___lldiv+1)^0,w,c
   714  000A1E  6E17               	movwf	(Uart_Init@vx+1)^0,c
   715  000A20                     
   716                           ;uart.c: 20:     SPBRG = vx & 0x00FF;
   717  000A20  C016  FFAF         	movff	Uart_Init@vx,4015	;volatile
   718  000A24                     
   719                           ;uart.c: 21:     SPBRGH = vx >> 8;
   720  000A24  5017               	movf	(Uart_Init@vx+1)^0,w,c
   721  000A26  6EB0               	movwf	176,c	;volatile
   722  000A28  0012               	return		;funcret
   723  000A2A                     __end_of_Uart_Init:
   724                           	callstack 0
   725                           
   726 ;; *************** function ___lldiv *****************
   727 ;; Defined at:
   728 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  dividend        4    0[COMRAM] unsigned long 
   731 ;;  divisor         4    4[COMRAM] unsigned long 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  quotient        4    8[COMRAM] unsigned long 
   734 ;;  counter         1   12[COMRAM] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  4    0[COMRAM] unsigned long 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   744 ;;      Params:         8       0       0       0       0       0       0       0       0
   745 ;;      Locals:         5       0       0       0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0
   747 ;;      Totals:        13       0       0       0       0       0       0       0       0
   748 ;;Total ram usage:       13 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_Uart_Init
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text5
   758  000918                     __ptext5:
   759                           	callstack 0
   760  000918                     ___lldiv:
   761                           	callstack 29
   762  000918  0E00               	movlw	0
   763  00091A  6E09               	movwf	___lldiv@quotient^0,c
   764  00091C  0E00               	movlw	0
   765  00091E  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   766  000920  0E00               	movlw	0
   767  000922  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   768  000924  0E00               	movlw	0
   769  000926  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   770  000928  5005               	movf	___lldiv@divisor^0,w,c
   771  00092A  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   772  00092C  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   773  00092E  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   774  000930  B4D8               	btfsc	status,2,c
   775  000932  EF9D  F004         	goto	u161
   776  000936  EF9F  F004         	goto	u160
   777  00093A                     u161:
   778  00093A  EFD5  F004         	goto	l129
   779  00093E                     u160:
   780  00093E  0E01               	movlw	1
   781  000940  6E0D               	movwf	___lldiv@counter^0,c
   782  000942  EFA9  F004         	goto	l917
   783  000946                     l915:
   784  000946  90D8               	bcf	status,0,c
   785  000948  3605               	rlcf	___lldiv@divisor^0,f,c
   786  00094A  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   787  00094C  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   788  00094E  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   789  000950  2A0D               	incf	___lldiv@counter^0,f,c
   790  000952                     l917:
   791  000952  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   792  000954  EFAE  F004         	goto	u171
   793  000958  EFB0  F004         	goto	u170
   794  00095C                     u171:
   795  00095C  EFA3  F004         	goto	l915
   796  000960                     u170:
   797  000960                     l919:
   798  000960  90D8               	bcf	status,0,c
   799  000962  3609               	rlcf	___lldiv@quotient^0,f,c
   800  000964  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   801  000966  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   802  000968  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   803  00096A  5005               	movf	___lldiv@divisor^0,w,c
   804  00096C  5C01               	subwf	___lldiv@dividend^0,w,c
   805  00096E  5006               	movf	(___lldiv@divisor+1)^0,w,c
   806  000970  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   807  000972  5007               	movf	(___lldiv@divisor+2)^0,w,c
   808  000974  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   809  000976  5008               	movf	(___lldiv@divisor+3)^0,w,c
   810  000978  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   811  00097A  A0D8               	btfss	status,0,c
   812  00097C  EFC2  F004         	goto	u181
   813  000980  EFC4  F004         	goto	u180
   814  000984                     u181:
   815  000984  EFCD  F004         	goto	l927
   816  000988                     u180:
   817  000988  5005               	movf	___lldiv@divisor^0,w,c
   818  00098A  5E01               	subwf	___lldiv@dividend^0,f,c
   819  00098C  5006               	movf	(___lldiv@divisor+1)^0,w,c
   820  00098E  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   821  000990  5007               	movf	(___lldiv@divisor+2)^0,w,c
   822  000992  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   823  000994  5008               	movf	(___lldiv@divisor+3)^0,w,c
   824  000996  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   825  000998  8009               	bsf	___lldiv@quotient^0,0,c
   826  00099A                     l927:
   827  00099A  90D8               	bcf	status,0,c
   828  00099C  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   829  00099E  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   830  0009A0  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   831  0009A2  3205               	rrcf	___lldiv@divisor^0,f,c
   832  0009A4  2E0D               	decfsz	___lldiv@counter^0,f,c
   833  0009A6  EFB0  F004         	goto	l919
   834  0009AA                     l129:
   835  0009AA  C009  F001         	movff	___lldiv@quotient,?___lldiv
   836  0009AE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   837  0009B2  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   838  0009B6  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   839  0009BA  0012               	return		;funcret
   840  0009BC                     __end_of___lldiv:
   841                           	callstack 0
   842                           
   843 ;; *************** function _Uart_Available *****************
   844 ;; Defined at:
   845 ;;		line 24 in file "uart.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  2    0[COMRAM] short 
   852 ;; Registers used:
   853 ;;		wreg, status,2
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   859 ;;      Params:         2       0       0       0       0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0
   861 ;;      Temps:          1       0       0       0       0       0       0       0       0
   862 ;;      Totals:         3       0       0       0       0       0       0       0       0
   863 ;;Total ram usage:        3 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text6
   873  000A86                     __ptext6:
   874                           	callstack 0
   875  000A86                     _Uart_Available:
   876                           	callstack 30
   877  000A86                     
   878                           ;uart.c: 26:     return PIR1bits.RCIF ? 1 : 0;
   879  000A86  BA9E               	btfsc	158,5,c	;volatile
   880  000A88  EF48  F005         	goto	u201
   881  000A8C  EF4C  F005         	goto	u200
   882  000A90                     u201:
   883  000A90  6A03               	clrf	??_Uart_Available^0,c
   884  000A92  2A03               	incf	??_Uart_Available^0,f,c
   885  000A94  EF4D  F005         	goto	u208
   886  000A98                     u200:
   887  000A98  6A03               	clrf	??_Uart_Available^0,c
   888  000A9A                     u208:
   889  000A9A  5003               	movf	??_Uart_Available^0,w,c
   890  000A9C  6E01               	movwf	?_Uart_Available^0,c
   891  000A9E  6A02               	clrf	(?_Uart_Available+1)^0,c
   892  000AA0  0012               	return		;funcret
   893  000AA2                     __end_of_Uart_Available:
   894                           	callstack 0
   895                           
   896                           	psect	rparam
   897  0000                     
   898                           	psect	idloc
   899                           
   900                           ;Config register IDLOC0 @ 0x200000
   901                           ;	unspecified, using default values
   902  200000                     	org	2097152
   903  200000  FF                 	db	255
   904                           
   905                           ;Config register IDLOC1 @ 0x200001
   906                           ;	unspecified, using default values
   907  200001                     	org	2097153
   908  200001  FF                 	db	255
   909                           
   910                           ;Config register IDLOC2 @ 0x200002
   911                           ;	unspecified, using default values
   912  200002                     	org	2097154
   913  200002  FF                 	db	255
   914                           
   915                           ;Config register IDLOC3 @ 0x200003
   916                           ;	unspecified, using default values
   917  200003                     	org	2097155
   918  200003  FF                 	db	255
   919                           
   920                           ;Config register IDLOC4 @ 0x200004
   921                           ;	unspecified, using default values
   922  200004                     	org	2097156
   923  200004  FF                 	db	255
   924                           
   925                           ;Config register IDLOC5 @ 0x200005
   926                           ;	unspecified, using default values
   927  200005                     	org	2097157
   928  200005  FF                 	db	255
   929                           
   930                           ;Config register IDLOC6 @ 0x200006
   931                           ;	unspecified, using default values
   932  200006                     	org	2097158
   933  200006  FF                 	db	255
   934                           
   935                           ;Config register IDLOC7 @ 0x200007
   936                           ;	unspecified, using default values
   937  200007                     	org	2097159
   938  200007  FF                 	db	255
   939                           
   940                           	psect	config
   941                           
   942                           ;Config register CONFIG1L @ 0x300000
   943                           ;	PLL Prescaler Selection bits
   944                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   945                           ;	System Clock Postscaler Selection bits
   946                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   947                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   948                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   949  300000                     	org	3145728
   950  300000  21                 	db	33
   951                           
   952                           ;Config register CONFIG1H @ 0x300001
   953                           ;	Oscillator Selection bits
   954                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   955                           ;	Fail-Safe Clock Monitor Enable bit
   956                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   957                           ;	Internal/External Oscillator Switchover bit
   958                           ;	IESO = OFF, Oscillator Switchover mode disabled
   959  300001                     	org	3145729
   960  300001  0E                 	db	14
   961                           
   962                           ;Config register CONFIG2L @ 0x300002
   963                           ;	Power-up Timer Enable bit
   964                           ;	PWRT = OFF, PWRT disabled
   965                           ;	Brown-out Reset Enable bits
   966                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   967                           ;	Brown-out Reset Voltage bits
   968                           ;	BORV = 3, Minimum setting 2.05V
   969                           ;	USB Voltage Regulator Enable bit
   970                           ;	VREGEN = OFF, USB voltage regulator disabled
   971  300002                     	org	3145730
   972  300002  19                 	db	25
   973                           
   974                           ;Config register CONFIG2H @ 0x300003
   975                           ;	Watchdog Timer Enable bit
   976                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   977                           ;	Watchdog Timer Postscale Select bits
   978                           ;	WDTPS = 32768, 1:32768
   979  300003                     	org	3145731
   980  300003  1E                 	db	30
   981                           
   982                           ; Padding undefined space
   983  300004                     	org	3145732
   984  300004  FF                 	db	255
   985                           
   986                           ;Config register CONFIG3H @ 0x300005
   987                           ;	CCP2 MUX bit
   988                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   989                           ;	PORTB A/D Enable bit
   990                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   991                           ;	Low-Power Timer 1 Oscillator Enable bit
   992                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   993                           ;	MCLR Pin Enable bit
   994                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   995  300005                     	org	3145733
   996  300005  81                 	db	129
   997                           
   998                           ;Config register CONFIG4L @ 0x300006
   999                           ;	Stack Full/Underflow Reset Enable bit
  1000                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1001                           ;	Single-Supply ICSP Enable bit
  1002                           ;	LVP = OFF, Single-Supply ICSP disabled
  1003                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1004                           ;	ICPRT = OFF, ICPORT disabled
  1005                           ;	Extended Instruction Set Enable bit
  1006                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1007                           ;	Background Debugger Enable bit
  1008                           ;	DEBUG = 0x1, unprogrammed default
  1009  300006                     	org	3145734
  1010  300006  81                 	db	129
  1011                           
  1012                           ; Padding undefined space
  1013  300007                     	org	3145735
  1014  300007  FF                 	db	255
  1015                           
  1016                           ;Config register CONFIG5L @ 0x300008
  1017                           ;	Code Protection bit
  1018                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1019                           ;	Code Protection bit
  1020                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1021                           ;	Code Protection bit
  1022                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1023                           ;	Code Protection bit
  1024                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1025  300008                     	org	3145736
  1026  300008  0F                 	db	15
  1027                           
  1028                           ;Config register CONFIG5H @ 0x300009
  1029                           ;	Boot Block Code Protection bit
  1030                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1031                           ;	Data EEPROM Code Protection bit
  1032                           ;	CPD = OFF, Data EEPROM is not code-protected
  1033  300009                     	org	3145737
  1034  300009  C0                 	db	192
  1035                           
  1036                           ;Config register CONFIG6L @ 0x30000A
  1037                           ;	Write Protection bit
  1038                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1039                           ;	Write Protection bit
  1040                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1041                           ;	Write Protection bit
  1042                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1043                           ;	Write Protection bit
  1044                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1045  30000A                     	org	3145738
  1046  30000A  0F                 	db	15
  1047                           
  1048                           ;Config register CONFIG6H @ 0x30000B
  1049                           ;	Configuration Register Write Protection bit
  1050                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1051                           ;	Boot Block Write Protection bit
  1052                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1053                           ;	Data EEPROM Write Protection bit
  1054                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1055  30000B                     	org	3145739
  1056  30000B  E0                 	db	224
  1057                           
  1058                           ;Config register CONFIG7L @ 0x30000C
  1059                           ;	Table Read Protection bit
  1060                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1061                           ;	Table Read Protection bit
  1062                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1063                           ;	Table Read Protection bit
  1064                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1065                           ;	Table Read Protection bit
  1066                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1067  30000C                     	org	3145740
  1068  30000C  0F                 	db	15
  1069                           
  1070                           ;Config register CONFIG7H @ 0x30000D
  1071                           ;	Boot Block Table Read Protection bit
  1072                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1073  30000D                     	org	3145741
  1074  30000D  40                 	db	64
  1075                           tosu	equ	0xFFF
  1076                           tosh	equ	0xFFE
  1077                           tosl	equ	0xFFD
  1078                           stkptr	equ	0xFFC
  1079                           pclatu	equ	0xFFB
  1080                           pclath	equ	0xFFA
  1081                           pcl	equ	0xFF9
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           prodh	equ	0xFF4
  1087                           prodl	equ	0xFF3
  1088                           indf0	equ	0xFEF
  1089                           postinc0	equ	0xFEE
  1090                           postdec0	equ	0xFED
  1091                           preinc0	equ	0xFEC
  1092                           plusw0	equ	0xFEB
  1093                           fsr0h	equ	0xFEA
  1094                           fsr0l	equ	0xFE9
  1095                           wreg	equ	0xFE8
  1096                           indf1	equ	0xFE7
  1097                           postinc1	equ	0xFE6
  1098                           postdec1	equ	0xFE5
  1099                           preinc1	equ	0xFE4
  1100                           plusw1	equ	0xFE3
  1101                           fsr1h	equ	0xFE2
  1102                           fsr1l	equ	0xFE1
  1103                           bsr	equ	0xFE0
  1104                           indf2	equ	0xFDF
  1105                           postinc2	equ	0xFDE
  1106                           postdec2	equ	0xFDD
  1107                           preinc2	equ	0xFDC
  1108                           plusw2	equ	0xFDB
  1109                           fsr2h	equ	0xFDA
  1110                           fsr2l	equ	0xFD9
  1111                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Uart_Send_String@info	PTR unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[17]), STR_3(CODE[19]), STR_2(CODE[17]), STR_1(CODE[19]), 


Critical Paths under _main in COMRAM

    _main->_Uart_Init
    _Uart_Send_String->_Uart_Send_Char
    _Uart_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     821
                                             23 COMRAM     2     2      0
                     _Uart_Available
                          _Uart_Init
                          _Uart_Read
                   _Uart_Send_String
 ---------------------------------------------------------------------------------
 (1) _Uart_Send_String                                     2     0      2     364
                                              1 COMRAM     2     0      2
                     _Uart_Send_Char
 ---------------------------------------------------------------------------------
 (2) _Uart_Send_Char                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Uart_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Uart_Init                                           10     6      4     457
                                             13 COMRAM    10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Uart_Available                                       3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Uart_Available
   _Uart_Init
     ___lldiv
   _Uart_Read
   _Uart_Send_String
     _Uart_Send_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      1A       1       27.4%
BITBIGSFRh          3E      0       0      20        0.0%
BITBIGSFRlll        2A      0       0      26        0.0%
BITBIGSFRlhlh        C      0       0      23        0.0%
BITBIGSFRlhll        9      0       0      24        0.0%
BITBIGSFRlhhh        8      0       0      21        0.0%
BITBIGSFRllh         8      0       0      25        0.0%
BITBIGSFRlhhlh       7      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      27        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Aug 01 19:57:02 2022

                      l24 0892                        l26 08A4                        l27 08B6  
                      l28 08C8                        l61 0AA0                        l80 0A84  
                      l64 0AA4                        l73 0A5E                        l58 0A28  
                      l67 0AB6                        l76 0A60                        l78 0A6E  
                      l79 0A80                        u10 0AB2                        u11 0AAE  
                      u70 0A6E                        u71 0A6A                        u80 0A7C  
                      u81 0A78                       l136 09BA                       l129 09AA  
                     l821 0A82                       l911 0928                       l921 096A  
                     l913 093E                       l817 0A60                       l923 0988  
                     l915 0946                       l931 09BC                       l819 0A7C  
                     l925 0998                       l917 0952                       l909 0918  
                     l941 0A24                       l933 09C0                       l943 0A86  
                     l927 099A                       l919 0960                       l935 09CC  
                     l775 0AA4                       l951 0A3E                       l929 09A4  
                     l937 09CE                       l777 0AB2                       l953 0A42  
                     l961 0852                       l939 0A20                       l947 0A2A  
                     l971 0894                       l963 0854                       l955 084A  
                     l949 0A2E                       l973 08A6                       l981 08DA  
                     l965 0856                       l957 084E                       l991 08EE  
                     l975 08B8                       l967 086A                       l959 0850  
                     l977 08CA                       l969 0888                       u200 0A98  
                     u201 0A90                       u210 0A5E                       u211 0A5A  
                     u220 0888                       u221 0884                       u208 0A9A  
                     u160 093E                       u161 093A                       u170 0960  
                     u171 095C                       u180 0988                       u181 0984  
                     u195 09F0                       wreg 000FE8                      STR_1 0801  
                    STR_2 0827                      STR_3 0814                      STR_4 0838  
                    _main 084A                      start 0000              ___param_bank 000000  
                   ?_main 0001           __end_of___lldiv 09BC                     _RCREG 000FAE  
                   _RCSTA 000FAB                     _SPBRG 000FAF                     _TXREG 000FAD  
                   _TXSTA 000FAC                     tablat 000FF5  __end_of_Uart_Send_String 0A60  
                   status 000FD8           __initialization 0AB8              __end_of_main 0918  
                  ??_main 0018             __activetblptr 000002            _Uart_Available 0A86  
                  _SPBRGH 000FB0                 ??___lldiv 0009                    isa$std 000001  
          _Uart_Send_Char 0AA2              __mediumconst 0000    __end_of_Uart_Available 0AA2  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 0ABA             ___rparam_used 000001  
          __pcstackCOMRAM 0001    __end_of_Uart_Send_Char 0AB8           ?_Uart_Available 0001  
       __end_of_Uart_Init 0A2A         __end_of_Uart_Read 0A86           ?_Uart_Send_Char 0001  
                 _BAUDCON 000FB8               Uart_Init@vx 0016         ?_Uart_Send_String 0002  
    Uart_Send_Char@txData 0001        ??_Uart_Send_String 0004                   __Hparam 0000  
                 __Lparam 0000                   ___lldiv 0918              __psmallconst 0800  
                 __pcinit 0AB8                   __ramtop 0800                   _dato_rx 001A  
                 __ptext0 084A                   __ptext1 0A2A                   __ptext2 0AA2  
                 __ptext3 0A60                   __ptext4 09BC                   __ptext5 0918  
                 __ptext6 0A86      end_of_initialization 0ABA             __Lmediumconst 0000  
         ___lldiv@divisor 0005             Uart_Init@baud 000E           ___lldiv@counter 000D  
               _RCSTAbits 000FAB                 _TRISBbits 000F93                 _TRISCbits 000F94  
               _TXSTAbits 000FAC               _BAUDCONbits 000FB8          ??_Uart_Available 0003  
     start_initialization 0AB8          ??_Uart_Send_Char 0001                 _Uart_Init 09BC  
               _Uart_Read 0A60               __pbssCOMRAM 001A                ?_Uart_Init 000E  
              ?_Uart_Read 0001                  ?___lldiv 0001               __smallconst 0800  
                _LATBbits 000F8A                  _PIR1bits 000F9E                _ADCON1bits 000FC1  
                __Hrparam 0000               ??_Uart_Init 0012               ??_Uart_Read 0001  
                __Lrparam 0000      Uart_Send_String@info 0002                  isa$xinst 000000  
        _Uart_Send_String 0A2A          ___lldiv@dividend 0001          ___lldiv@quotient 0009  
