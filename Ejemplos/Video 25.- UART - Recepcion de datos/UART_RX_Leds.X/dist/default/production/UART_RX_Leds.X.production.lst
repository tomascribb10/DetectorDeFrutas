

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 30 17:24:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _RCREG	set	4014
    56  0000                     _RCSTAbits	set	4011
    57  0000                     _TXREG	set	4013
    58  0000                     _TXSTAbits	set	4012
    59  0000                     _PIR1bits	set	3998
    60  0000                     _SPBRGH	set	4016
    61  0000                     _SPBRG	set	4015
    62  0000                     _BAUDCONbits	set	4024
    63  0000                     _BAUDCON	set	4024
    64  0000                     _RCSTA	set	4011
    65  0000                     _TXSTA	set	4012
    66  0000                     _TRISCbits	set	3988
    67  0000                     _LATBbits	set	3978
    68  0000                     _TRISBbits	set	3987
    69  0000                     _ADCON1bits	set	4033
    70                           
    71                           	psect	smallconst
    72  000800                     __psmallconst:
    73                           	callstack 0
    74  000800  00                 	db	0
    75  000801                     STR_1:
    76  000801  4C                 	db	76	;'L'
    77  000802  65                 	db	101	;'e'
    78  000803  64                 	db	100	;'d'
    79  000804  20                 	db	32
    80  000805  31                 	db	49	;'1'
    81  000806  3A                 	db	58	;':'
    82  000807  20                 	db	32
    83  000808  45                 	db	69	;'E'
    84  000809  6E                 	db	110	;'n'
    85  00080A  63                 	db	99	;'c'
    86  00080B  65                 	db	101	;'e'
    87  00080C  6E                 	db	110	;'n'
    88  00080D  64                 	db	100	;'d'
    89  00080E  69                 	db	105	;'i'
    90  00080F  64                 	db	100	;'d'
    91  000810  6F                 	db	111	;'o'
    92  000811  0D                 	db	13
    93  000812  0A                 	db	10
    94  000813  00                 	db	0
    95  000814                     STR_3:
    96  000814  4C                 	db	76	;'L'
    97  000815  65                 	db	101	;'e'
    98  000816  64                 	db	100	;'d'
    99  000817  20                 	db	32
   100  000818  32                 	db	50	;'2'
   101  000819  3A                 	db	58	;':'
   102  00081A  20                 	db	32
   103  00081B  45                 	db	69	;'E'
   104  00081C  6E                 	db	110	;'n'
   105  00081D  63                 	db	99	;'c'
   106  00081E  65                 	db	101	;'e'
   107  00081F  6E                 	db	110	;'n'
   108  000820  64                 	db	100	;'d'
   109  000821  69                 	db	105	;'i'
   110  000822  64                 	db	100	;'d'
   111  000823  6F                 	db	111	;'o'
   112  000824  0D                 	db	13
   113  000825  0A                 	db	10
   114  000826  00                 	db	0
   115  000827                     STR_2:
   116  000827  4C                 	db	76	;'L'
   117  000828  65                 	db	101	;'e'
   118  000829  64                 	db	100	;'d'
   119  00082A  20                 	db	32
   120  00082B  31                 	db	49	;'1'
   121  00082C  3A                 	db	58	;':'
   122  00082D  20                 	db	32
   123  00082E  41                 	db	65	;'A'
   124  00082F  70                 	db	112	;'p'
   125  000830  61                 	db	97	;'a'
   126  000831  67                 	db	103	;'g'
   127  000832  61                 	db	97	;'a'
   128  000833  64                 	db	100	;'d'
   129  000834  6F                 	db	111	;'o'
   130  000835  0D                 	db	13
   131  000836  0A                 	db	10
   132  000837  00                 	db	0
   133  000838                     STR_4:
   134  000838  4C                 	db	76	;'L'
   135  000839  65                 	db	101	;'e'
   136  00083A  64                 	db	100	;'d'
   137  00083B  20                 	db	32
   138  00083C  32                 	db	50	;'2'
   139  00083D  3A                 	db	58	;':'
   140  00083E  20                 	db	32
   141  00083F  41                 	db	65	;'A'
   142  000840  70                 	db	112	;'p'
   143  000841  61                 	db	97	;'a'
   144  000842  67                 	db	103	;'g'
   145  000843  61                 	db	97	;'a'
   146  000844  64                 	db	100	;'d'
   147  000845  6F                 	db	111	;'o'
   148  000846  0D                 	db	13
   149  000847  0A                 	db	10
   150  000848  00                 	db	0
   151  000849  00                 	db	0	; dummy byte at the end
   152  0000                     
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156  000AB8                     __pcinit:
   157                           	callstack 0
   158  000AB8                     start_initialization:
   159                           	callstack 0
   160  000AB8                     __initialization:
   161                           	callstack 0
   162                           
   163                           ; Clear objects allocated to COMRAM (1 bytes)
   164  000AB8  6A1A               	clrf	__pbssCOMRAM& (0+255),c
   165  000ABA                     end_of_initialization:
   166                           	callstack 0
   167  000ABA                     __end_of__initialization:
   168                           	callstack 0
   169  000ABA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170  000ABC  6EF8               	movwf	tblptru,c
   171  000ABE  0100               	movlb	0
   172  000AC0  EF25  F004         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	bssCOMRAM
   175  00001A                     __pbssCOMRAM:
   176                           	callstack 0
   177  00001A                     _dato_rx:
   178                           	callstack 0
   179  00001A                     	ds	1
   180                           
   181                           	psect	cstackCOMRAM
   182  000001                     __pcstackCOMRAM:
   183                           	callstack 0
   184  000001                     ?_Uart_Available:
   185                           	callstack 0
   186  000001                     ?___lldiv:
   187                           	callstack 0
   188  000001                     Uart_Send_Char@txData:
   189                           	callstack 0
   190  000001                     ___lldiv@dividend:
   191                           	callstack 0
   192                           
   193                           ; 4 bytes @ 0x0
   194  000001                     	ds	1
   195  000002                     Uart_Send_String@info:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0x1
   199  000002                     	ds	1
   200  000003                     ??_Uart_Available:
   201                           
   202                           ; 1 bytes @ 0x2
   203  000003                     	ds	1
   204  000004                     
   205                           ; 1 bytes @ 0x3
   206  000004                     	ds	1
   207  000005                     ___lldiv@divisor:
   208                           	callstack 0
   209                           
   210                           ; 4 bytes @ 0x4
   211  000005                     	ds	4
   212  000009                     ___lldiv@quotient:
   213                           	callstack 0
   214                           
   215                           ; 4 bytes @ 0x8
   216  000009                     	ds	4
   217  00000D                     ___lldiv@counter:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0xC
   221  00000D                     	ds	1
   222  00000E                     Uart_Init@baud:
   223                           	callstack 0
   224                           
   225                           ; 4 bytes @ 0xD
   226  00000E                     	ds	4
   227  000012                     ??_Uart_Init:
   228                           
   229                           ; 1 bytes @ 0x11
   230  000012                     	ds	4
   231  000016                     Uart_Init@vx:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x15
   235  000016                     	ds	2
   236  000018                     ??_main:
   237                           
   238                           ; 1 bytes @ 0x17
   239  000018                     	ds	2
   240                           
   241 ;;
   242 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   243 ;;
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 23 in file "UART_RX_Leds.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   260 ;;      Params:         0       0       0       0       0       0       0       0       0
   261 ;;      Locals:         0       0       0       0       0       0       0       0       0
   262 ;;      Temps:          2       0       0       0       0       0       0       0       0
   263 ;;      Totals:         2       0       0       0       0       0       0       0       0
   264 ;;Total ram usage:        2 bytes
   265 ;; Hardware stack levels required when called: 2
   266 ;; This function calls:
   267 ;;		_Uart_Available
   268 ;;		_Uart_Init
   269 ;;		_Uart_Read
   270 ;;		_Uart_Send_String
   271 ;; This function is called by:
   272 ;;		Startup code after reset
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text0
   277  00084A                     __ptext0:
   278                           	callstack 0
   279  00084A                     _main:
   280                           	callstack 29
   281  00084A                     
   282                           ;UART_RX_Leds.c: 25:     ADCON1bits.PCFG = 0x0F;
   283  00084A  0E0F               	movlw	15
   284  00084C  12C1               	iorwf	193,f,c	;volatile
   285  00084E                     
   286                           ;UART_RX_Leds.c: 26:     TRISBbits.RB2 = 0;
   287  00084E  9493               	bcf	147,2,c	;volatile
   288  000850                     
   289                           ;UART_RX_Leds.c: 27:     TRISBbits.RB3 = 0;
   290  000850  9693               	bcf	147,3,c	;volatile
   291  000852                     
   292                           ;UART_RX_Leds.c: 28:     LATBbits.LB2 = 0;
   293  000852  948A               	bcf	138,2,c	;volatile
   294  000854                     
   295                           ;UART_RX_Leds.c: 29:     LATBbits.LB3 = 0;
   296  000854  968A               	bcf	138,3,c	;volatile
   297  000856                     
   298                           ;UART_RX_Leds.c: 30:     Uart_Init(9600);
   299  000856  0E80               	movlw	128
   300  000858  6E0E               	movwf	Uart_Init@baud^0,c
   301  00085A  0E25               	movlw	37
   302  00085C  6E0F               	movwf	(Uart_Init@baud+1)^0,c
   303  00085E  0E00               	movlw	0
   304  000860  6E10               	movwf	(Uart_Init@baud+2)^0,c
   305  000862  0E00               	movlw	0
   306  000864  6E11               	movwf	(Uart_Init@baud+3)^0,c
   307  000866  ECDE  F004         	call	_Uart_Init	;wreg free
   308  00086A                     l967:
   309                           
   310                           ;UART_RX_Leds.c: 33:     {;UART_RX_Leds.c: 34:         if(Uart_Available() > 0)
   311  00086A  EC43  F005         	call	_Uart_Available	;wreg free
   312  00086E  BE02               	btfsc	(?_Uart_Available+1)^0,7,c
   313  000870  EF42  F004         	goto	u221
   314  000874  5002               	movf	(?_Uart_Available+1)^0,w,c
   315  000876  E108               	bnz	u220
   316  000878  0401               	decf	?_Uart_Available^0,w,c
   317  00087A  A0D8               	btfss	status,0,c
   318  00087C  EF42  F004         	goto	u221
   319  000880  EF44  F004         	goto	u220
   320  000884                     u221:
   321  000884  EF35  F004         	goto	l967
   322  000888                     u220:
   323  000888                     
   324                           ;UART_RX_Leds.c: 35:         {;UART_RX_Leds.c: 36:             dato_rx = Uart_Read();
   325  000888  EC30  F005         	call	_Uart_Read	;wreg free
   326  00088C  6E1A               	movwf	_dato_rx^0,c
   327                           
   328                           ;UART_RX_Leds.c: 38:             switch(dato_rx)
   329  00088E  EF6D  F004         	goto	l981
   330  000892                     l24:
   331                           
   332                           ;UART_RX_Leds.c: 41:                     LATBbits.LB2 = 1;
   333  000892  848A               	bsf	138,2,c	;volatile
   334  000894                     
   335                           ;UART_RX_Leds.c: 42:                     Uart_Send_String("Led 1: Encendido\r\n");
   336  000894  0E01               	movlw	low STR_1
   337  000896  6E02               	movwf	Uart_Send_String@info^0,c
   338  000898  0E08               	movlw	high STR_1
   339  00089A  6E03               	movwf	(Uart_Send_String@info+1)^0,c
   340  00089C  EC15  F005         	call	_Uart_Send_String	;wreg free
   341                           
   342                           ;UART_RX_Leds.c: 43:                     break;
   343  0008A0  EF35  F004         	goto	l967
   344  0008A4                     l26:
   345                           
   346                           ;UART_RX_Leds.c: 46:                     LATBbits.LB2 = 0;
   347  0008A4  948A               	bcf	138,2,c	;volatile
   348  0008A6                     
   349                           ;UART_RX_Leds.c: 47:                     Uart_Send_String("Led 1: Apagado\r\n");
   350  0008A6  0E27               	movlw	low STR_2
   351  0008A8  6E02               	movwf	Uart_Send_String@info^0,c
   352  0008AA  0E08               	movlw	high STR_2
   353  0008AC  6E03               	movwf	(Uart_Send_String@info+1)^0,c
   354  0008AE  EC15  F005         	call	_Uart_Send_String	;wreg free
   355                           
   356                           ;UART_RX_Leds.c: 48:                     break;
   357  0008B2  EF35  F004         	goto	l967
   358  0008B6                     l27:
   359                           
   360                           ;UART_RX_Leds.c: 51:                     LATBbits.LB3 = 1;
   361  0008B6  868A               	bsf	138,3,c	;volatile
   362  0008B8                     
   363                           ;UART_RX_Leds.c: 52:                     Uart_Send_String("Led 2: Encendido\r\n");
   364  0008B8  0E14               	movlw	low STR_3
   365  0008BA  6E02               	movwf	Uart_Send_String@info^0,c
   366  0008BC  0E08               	movlw	high STR_3
   367  0008BE  6E03               	movwf	(Uart_Send_String@info+1)^0,c
   368  0008C0  EC15  F005         	call	_Uart_Send_String	;wreg free
   369                           
   370                           ;UART_RX_Leds.c: 53:                     break;
   371  0008C4  EF35  F004         	goto	l967
   372  0008C8                     l28:
   373                           
   374                           ;UART_RX_Leds.c: 56:                     LATBbits.LB3 = 0;
   375  0008C8  968A               	bcf	138,3,c	;volatile
   376  0008CA                     
   377                           ;UART_RX_Leds.c: 57:                     Uart_Send_String("Led 2: Apagado\r\n");
   378  0008CA  0E38               	movlw	low STR_4
   379  0008CC  6E02               	movwf	Uart_Send_String@info^0,c
   380  0008CE  0E08               	movlw	high STR_4
   381  0008D0  6E03               	movwf	(Uart_Send_String@info+1)^0,c
   382  0008D2  EC15  F005         	call	_Uart_Send_String	;wreg free
   383                           
   384                           ;UART_RX_Leds.c: 58:                     break;
   385  0008D6  EF35  F004         	goto	l967
   386  0008DA                     l981:
   387  0008DA  501A               	movf	_dato_rx^0,w,c
   388  0008DC  6E18               	movwf	??_main^0,c
   389  0008DE  6A19               	clrf	(??_main+1)^0,c
   390                           
   391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   392                           ; Switch size 1, requested type "simple"
   393                           ; Number of cases is 1, Range of values is 0 to 0
   394                           ; switch strategies available:
   395                           ; Name         Instructions Cycles
   396                           ; simple_byte            4     3 (average)
   397                           ;	Chosen strategy is simple_byte
   398  0008E0  5019               	movf	(??_main+1)^0,w,c
   399  0008E2  0A00               	xorlw	0	; case 0
   400  0008E4  B4D8               	btfsc	status,2,c
   401  0008E6  EF77  F004         	goto	l991
   402  0008EA  EF35  F004         	goto	l967
   403  0008EE                     l991:
   404                           
   405                           ; Switch size 1, requested type "simple"
   406                           ; Number of cases is 4, Range of values is 97 to 100
   407                           ; switch strategies available:
   408                           ; Name         Instructions Cycles
   409                           ; simple_byte           13     7 (average)
   410                           ;	Chosen strategy is simple_byte
   411  0008EE  5018               	movf	??_main^0,w,c
   412  0008F0  0A61               	xorlw	97	; case 97
   413  0008F2  B4D8               	btfsc	status,2,c
   414  0008F4  EF49  F004         	goto	l24
   415  0008F8  0A03               	xorlw	3	; case 98
   416  0008FA  B4D8               	btfsc	status,2,c
   417  0008FC  EF52  F004         	goto	l26
   418  000900  0A01               	xorlw	1	; case 99
   419  000902  B4D8               	btfsc	status,2,c
   420  000904  EF5B  F004         	goto	l27
   421  000908  0A07               	xorlw	7	; case 100
   422  00090A  B4D8               	btfsc	status,2,c
   423  00090C  EF64  F004         	goto	l28
   424  000910  EF35  F004         	goto	l967
   425  000914  EF00  F000         	goto	start
   426  000918                     __end_of_main:
   427                           	callstack 0
   428                           
   429 ;; *************** function _Uart_Send_String *****************
   430 ;; Defined at:
   431 ;;		line 35 in file "uart.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;  info            2    1[COMRAM] PTR unsigned char 
   434 ;;		 -> STR_4(17), STR_3(19), STR_2(17), STR_1(19), 
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   446 ;;      Params:         2       0       0       0       0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0       0       0       0       0
   448 ;;      Temps:          0       0       0       0       0       0       0       0       0
   449 ;;      Totals:         2       0       0       0       0       0       0       0       0
   450 ;;Total ram usage:        2 bytes
   451 ;; Hardware stack levels used: 1
   452 ;; Hardware stack levels required when called: 1
   453 ;; This function calls:
   454 ;;		_Uart_Send_Char
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           	psect	text1
   461  000A2A                     __ptext1:
   462                           	callstack 0
   463  000A2A                     _Uart_Send_String:
   464                           	callstack 29
   465  000A2A                     
   466                           ;uart.c: 35: void Uart_Send_String(char *info);uart.c: 36: {;uart.c: 37:     while(*info
      +                          )
   467  000A2A  EF21  F005         	goto	l953
   468  000A2E                     l949:
   469                           
   470                           ;uart.c: 38:     {;uart.c: 39:         Uart_Send_Char(*info++);
   471  000A2E  C002  FFF6         	movff	Uart_Send_String@info,tblptrl
   472  000A32  C003  FFF7         	movff	Uart_Send_String@info+1,tblptrh
   473  000A36                     	if	0	;tblptru may be non-zero
   474  000A36                     	endif
   475  000A36                     	if	0	;tblptru may be non-zero
   476  000A36                     	endif
   477  000A36  0008               	tblrd		*
   478  000A38  50F5               	movf	tablat,w,c
   479  000A3A  EC51  F005         	call	_Uart_Send_Char
   480  000A3E  4A02               	infsnz	Uart_Send_String@info^0,f,c
   481  000A40  2A03               	incf	(Uart_Send_String@info+1)^0,f,c
   482  000A42                     l953:
   483                           
   484                           ;uart.c: 37:     while(*info)
   485  000A42  C002  FFF6         	movff	Uart_Send_String@info,tblptrl
   486  000A46  C003  FFF7         	movff	Uart_Send_String@info+1,tblptrh
   487  000A4A                     	if	0	;tblptru may be non-zero
   488  000A4A                     	endif
   489  000A4A                     	if	0	;tblptru may be non-zero
   490  000A4A                     	endif
   491  000A4A  0008               	tblrd		*
   492  000A4C  50F5               	movf	tablat,w,c
   493  000A4E  0900               	iorlw	0
   494  000A50  A4D8               	btfss	status,2,c
   495  000A52  EF2D  F005         	goto	u211
   496  000A56  EF2F  F005         	goto	u210
   497  000A5A                     u211:
   498  000A5A  EF17  F005         	goto	l949
   499  000A5E                     u210:
   500  000A5E  0012               	return		;funcret
   501  000A60                     __end_of_Uart_Send_String:
   502                           	callstack 0
   503                           
   504 ;; *************** function _Uart_Send_Char *****************
   505 ;; Defined at:
   506 ;;		line 29 in file "uart.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;  txData          1    wreg     unsigned char 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  txData          1    0[COMRAM] unsigned char 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   520 ;;      Params:         0       0       0       0       0       0       0       0       0
   521 ;;      Locals:         1       0       0       0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0       0       0
   523 ;;      Totals:         1       0       0       0       0       0       0       0       0
   524 ;;Total ram usage:        1 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_Uart_Send_String
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text2
   534  000AA2                     __ptext2:
   535                           	callstack 0
   536  000AA2                     _Uart_Send_Char:
   537                           	callstack 29
   538                           
   539                           ;incstack = 0
   540                           ;Uart_Send_Char@txData stored from wreg
   541  000AA2  6E01               	movwf	Uart_Send_Char@txData^0,c
   542  000AA4                     l64:
   543  000AA4  A2AC               	btfss	172,1,c	;volatile
   544  000AA6  EF57  F005         	goto	u11
   545  000AAA  EF59  F005         	goto	u10
   546  000AAE                     u11:
   547  000AAE  EF52  F005         	goto	l64
   548  000AB2                     u10:
   549  000AB2                     
   550                           ;uart.c: 32:     TXREG = txData;
   551  000AB2  C001  FFAD         	movff	Uart_Send_Char@txData,4013	;volatile
   552  000AB6  0012               	return		;funcret
   553  000AB8                     __end_of_Uart_Send_Char:
   554                           	callstack 0
   555                           
   556 ;; *************** function _Uart_Read *****************
   557 ;; Defined at:
   558 ;;		line 43 in file "uart.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      unsigned char 
   565 ;; Registers used:
   566 ;;		wreg, status,2
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   572 ;;      Params:         0       0       0       0       0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0       0       0       0       0
   575 ;;      Totals:         0       0       0       0       0       0       0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		_main
   582 ;;		_Uart_Read_String
   583 ;;		_Uart_Read_StringUntil
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text3
   588  000A60                     __ptext3:
   589                           	callstack 0
   590  000A60                     _Uart_Read:
   591                           	callstack 30
   592  000A60                     l76:
   593  000A60  AA9E               	btfss	158,5,c	;volatile
   594  000A62  EF35  F005         	goto	u71
   595  000A66  EF37  F005         	goto	u70
   596  000A6A                     u71:
   597  000A6A  EF30  F005         	goto	l76
   598  000A6E                     u70:
   599  000A6E                     
   600                           ;uart.c: 46:     if(RCSTAbits.OERR == 1)
   601  000A6E  A2AB               	btfss	171,1,c	;volatile
   602  000A70  EF3C  F005         	goto	u81
   603  000A74  EF3E  F005         	goto	u80
   604  000A78                     u81:
   605  000A78  EF40  F005         	goto	l79
   606  000A7C                     u80:
   607  000A7C                     
   608                           ;uart.c: 47:     {;uart.c: 48:         RCSTAbits.CREN = 0;
   609  000A7C  98AB               	bcf	171,4,c	;volatile
   610                           
   611                           ;uart.c: 49:         RCSTAbits.CREN = 1;
   612  000A7E  88AB               	bsf	171,4,c	;volatile
   613  000A80                     l79:
   614                           
   615                           ;uart.c: 51:     PIR1bits.RCIF = 0;
   616  000A80  9A9E               	bcf	158,5,c	;volatile
   617  000A82                     
   618                           ;uart.c: 52:     return RCREG;
   619  000A82  50AE               	movf	174,w,c	;volatile
   620  000A84  0012               	return		;funcret
   621  000A86                     __end_of_Uart_Read:
   622                           	callstack 0
   623                           
   624 ;; *************** function _Uart_Init *****************
   625 ;; Defined at:
   626 ;;		line 11 in file "uart.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  baud            4   13[COMRAM] unsigned long 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  vx              2   21[COMRAM] unsigned int 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   640 ;;      Params:         4       0       0       0       0       0       0       0       0
   641 ;;      Locals:         2       0       0       0       0       0       0       0       0
   642 ;;      Temps:          4       0       0       0       0       0       0       0       0
   643 ;;      Totals:        10       0       0       0       0       0       0       0       0
   644 ;;Total ram usage:       10 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; Hardware stack levels required when called: 1
   647 ;; This function calls:
   648 ;;		___lldiv
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text4
   655  0009BC                     __ptext4:
   656                           	callstack 0
   657  0009BC                     _Uart_Init:
   658                           	callstack 29
   659  0009BC                     
   660                           ;uart.c: 11: void Uart_Init(unsigned long baud);uart.c: 12: {;uart.c: 13:     TRISCbits.
      +                          RC6 = 0;
   661  0009BC  9C94               	bcf	148,6,c	;volatile
   662                           
   663                           ;uart.c: 14:     TRISCbits.RC7 = 1;
   664  0009BE  8E94               	bsf	148,7,c	;volatile
   665  0009C0                     
   666                           ;uart.c: 15:     TXSTA = 0x24;
   667  0009C0  0E24               	movlw	36
   668  0009C2  6EAC               	movwf	172,c	;volatile
   669                           
   670                           ;uart.c: 16:     RCSTA = 0x90;
   671  0009C4  0E90               	movlw	144
   672  0009C6  6EAB               	movwf	171,c	;volatile
   673                           
   674                           ;uart.c: 17:     BAUDCON = 0x00;
   675  0009C8  0E00               	movlw	0
   676  0009CA  6EB8               	movwf	184,c	;volatile
   677  0009CC                     
   678                           ;uart.c: 18:     BAUDCONbits.BRG16 = 1;
   679  0009CC  86B8               	bsf	184,3,c	;volatile
   680  0009CE                     
   681                           ;uart.c: 19:     unsigned int vx = (48000000/(baud*4))-1;
   682  0009CE  0E00               	movlw	0
   683  0009D0  6E01               	movwf	___lldiv@dividend^0,c
   684  0009D2  0E6C               	movlw	108
   685  0009D4  6E02               	movwf	(___lldiv@dividend+1)^0,c
   686  0009D6  0EDC               	movlw	220
   687  0009D8  6E03               	movwf	(___lldiv@dividend+2)^0,c
   688  0009DA  0E02               	movlw	2
   689  0009DC  6E04               	movwf	(___lldiv@dividend+3)^0,c
   690  0009DE  C00E  F012         	movff	Uart_Init@baud,??_Uart_Init
   691  0009E2  C00F  F013         	movff	Uart_Init@baud+1,??_Uart_Init+1
   692  0009E6  C010  F014         	movff	Uart_Init@baud+2,??_Uart_Init+2
   693  0009EA  C011  F015         	movff	Uart_Init@baud+3,??_Uart_Init+3
   694  0009EE  0E02               	movlw	2
   695  0009F0                     u195:
   696  0009F0  90D8               	bcf	status,0,c
   697  0009F2  3612               	rlcf	??_Uart_Init^0,f,c
   698  0009F4  3613               	rlcf	(??_Uart_Init+1)^0,f,c
   699  0009F6  3614               	rlcf	(??_Uart_Init+2)^0,f,c
   700  0009F8  3615               	rlcf	(??_Uart_Init+3)^0,f,c
   701  0009FA  2EE8               	decfsz	wreg,f,c
   702  0009FC  EFF8  F004         	goto	u195
   703  000A00  C012  F005         	movff	??_Uart_Init,___lldiv@divisor
   704  000A04  C013  F006         	movff	??_Uart_Init+1,___lldiv@divisor+1
   705  000A08  C014  F007         	movff	??_Uart_Init+2,___lldiv@divisor+2
   706  000A0C  C015  F008         	movff	??_Uart_Init+3,___lldiv@divisor+3
   707  000A10  EC8C  F004         	call	___lldiv	;wreg free
   708  000A14  0EFF               	movlw	255
   709  000A16  2401               	addwf	?___lldiv^0,w,c
   710  000A18  6E16               	movwf	Uart_Init@vx^0,c
   711  000A1A  0EFF               	movlw	255
   712  000A1C  2002               	addwfc	(?___lldiv+1)^0,w,c
   713  000A1E  6E17               	movwf	(Uart_Init@vx+1)^0,c
   714  000A20                     
   715                           ;uart.c: 20:     SPBRG = vx & 0x00FF;
   716  000A20  C016  FFAF         	movff	Uart_Init@vx,4015	;volatile
   717  000A24                     
   718                           ;uart.c: 21:     SPBRGH = vx >> 8;
   719  000A24  5017               	movf	(Uart_Init@vx+1)^0,w,c
   720  000A26  6EB0               	movwf	176,c	;volatile
   721  000A28  0012               	return		;funcret
   722  000A2A                     __end_of_Uart_Init:
   723                           	callstack 0
   724                           
   725 ;; *************** function ___lldiv *****************
   726 ;; Defined at:
   727 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;  dividend        4    0[COMRAM] unsigned long 
   730 ;;  divisor         4    4[COMRAM] unsigned long 
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  quotient        4    8[COMRAM] unsigned long 
   733 ;;  counter         1   12[COMRAM] unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  4    0[COMRAM] unsigned long 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   743 ;;      Params:         8       0       0       0       0       0       0       0       0
   744 ;;      Locals:         5       0       0       0       0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0
   746 ;;      Totals:        13       0       0       0       0       0       0       0       0
   747 ;;Total ram usage:       13 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_Uart_Init
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text5
   757  000918                     __ptext5:
   758                           	callstack 0
   759  000918                     ___lldiv:
   760                           	callstack 29
   761  000918  0E00               	movlw	0
   762  00091A  6E09               	movwf	___lldiv@quotient^0,c
   763  00091C  0E00               	movlw	0
   764  00091E  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   765  000920  0E00               	movlw	0
   766  000922  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   767  000924  0E00               	movlw	0
   768  000926  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   769  000928  5005               	movf	___lldiv@divisor^0,w,c
   770  00092A  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   771  00092C  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   772  00092E  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   773  000930  B4D8               	btfsc	status,2,c
   774  000932  EF9D  F004         	goto	u161
   775  000936  EF9F  F004         	goto	u160
   776  00093A                     u161:
   777  00093A  EFD5  F004         	goto	l129
   778  00093E                     u160:
   779  00093E  0E01               	movlw	1
   780  000940  6E0D               	movwf	___lldiv@counter^0,c
   781  000942  EFA9  F004         	goto	l917
   782  000946                     l915:
   783  000946  90D8               	bcf	status,0,c
   784  000948  3605               	rlcf	___lldiv@divisor^0,f,c
   785  00094A  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   786  00094C  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   787  00094E  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   788  000950  2A0D               	incf	___lldiv@counter^0,f,c
   789  000952                     l917:
   790  000952  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   791  000954  EFAE  F004         	goto	u171
   792  000958  EFB0  F004         	goto	u170
   793  00095C                     u171:
   794  00095C  EFA3  F004         	goto	l915
   795  000960                     u170:
   796  000960                     l919:
   797  000960  90D8               	bcf	status,0,c
   798  000962  3609               	rlcf	___lldiv@quotient^0,f,c
   799  000964  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   800  000966  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   801  000968  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   802  00096A  5005               	movf	___lldiv@divisor^0,w,c
   803  00096C  5C01               	subwf	___lldiv@dividend^0,w,c
   804  00096E  5006               	movf	(___lldiv@divisor+1)^0,w,c
   805  000970  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   806  000972  5007               	movf	(___lldiv@divisor+2)^0,w,c
   807  000974  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   808  000976  5008               	movf	(___lldiv@divisor+3)^0,w,c
   809  000978  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   810  00097A  A0D8               	btfss	status,0,c
   811  00097C  EFC2  F004         	goto	u181
   812  000980  EFC4  F004         	goto	u180
   813  000984                     u181:
   814  000984  EFCD  F004         	goto	l927
   815  000988                     u180:
   816  000988  5005               	movf	___lldiv@divisor^0,w,c
   817  00098A  5E01               	subwf	___lldiv@dividend^0,f,c
   818  00098C  5006               	movf	(___lldiv@divisor+1)^0,w,c
   819  00098E  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   820  000990  5007               	movf	(___lldiv@divisor+2)^0,w,c
   821  000992  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   822  000994  5008               	movf	(___lldiv@divisor+3)^0,w,c
   823  000996  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   824  000998  8009               	bsf	___lldiv@quotient^0,0,c
   825  00099A                     l927:
   826  00099A  90D8               	bcf	status,0,c
   827  00099C  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   828  00099E  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   829  0009A0  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   830  0009A2  3205               	rrcf	___lldiv@divisor^0,f,c
   831  0009A4  2E0D               	decfsz	___lldiv@counter^0,f,c
   832  0009A6  EFB0  F004         	goto	l919
   833  0009AA                     l129:
   834  0009AA  C009  F001         	movff	___lldiv@quotient,?___lldiv
   835  0009AE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   836  0009B2  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   837  0009B6  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   838  0009BA  0012               	return		;funcret
   839  0009BC                     __end_of___lldiv:
   840                           	callstack 0
   841                           
   842 ;; *************** function _Uart_Available *****************
   843 ;; Defined at:
   844 ;;		line 24 in file "uart.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  2    0[COMRAM] short 
   851 ;; Registers used:
   852 ;;		wreg, status,2
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   858 ;;      Params:         2       0       0       0       0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0       0       0       0       0
   860 ;;      Temps:          1       0       0       0       0       0       0       0       0
   861 ;;      Totals:         3       0       0       0       0       0       0       0       0
   862 ;;Total ram usage:        3 bytes
   863 ;; Hardware stack levels used: 1
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text6
   872  000A86                     __ptext6:
   873                           	callstack 0
   874  000A86                     _Uart_Available:
   875                           	callstack 30
   876  000A86                     
   877                           ;uart.c: 26:     return PIR1bits.RCIF ? 1 : 0;
   878  000A86  BA9E               	btfsc	158,5,c	;volatile
   879  000A88  EF48  F005         	goto	u201
   880  000A8C  EF4C  F005         	goto	u200
   881  000A90                     u201:
   882  000A90  6A03               	clrf	??_Uart_Available^0,c
   883  000A92  2A03               	incf	??_Uart_Available^0,f,c
   884  000A94  EF4D  F005         	goto	u208
   885  000A98                     u200:
   886  000A98  6A03               	clrf	??_Uart_Available^0,c
   887  000A9A                     u208:
   888  000A9A  5003               	movf	??_Uart_Available^0,w,c
   889  000A9C  6E01               	movwf	?_Uart_Available^0,c
   890  000A9E  6A02               	clrf	(?_Uart_Available+1)^0,c
   891  000AA0  0012               	return		;funcret
   892  000AA2                     __end_of_Uart_Available:
   893                           	callstack 0
   894                           
   895                           	psect	rparam
   896  0000                     
   897                           	psect	idloc
   898                           
   899                           ;Config register IDLOC0 @ 0x200000
   900                           ;	unspecified, using default values
   901  200000                     	org	2097152
   902  200000  FF                 	db	255
   903                           
   904                           ;Config register IDLOC1 @ 0x200001
   905                           ;	unspecified, using default values
   906  200001                     	org	2097153
   907  200001  FF                 	db	255
   908                           
   909                           ;Config register IDLOC2 @ 0x200002
   910                           ;	unspecified, using default values
   911  200002                     	org	2097154
   912  200002  FF                 	db	255
   913                           
   914                           ;Config register IDLOC3 @ 0x200003
   915                           ;	unspecified, using default values
   916  200003                     	org	2097155
   917  200003  FF                 	db	255
   918                           
   919                           ;Config register IDLOC4 @ 0x200004
   920                           ;	unspecified, using default values
   921  200004                     	org	2097156
   922  200004  FF                 	db	255
   923                           
   924                           ;Config register IDLOC5 @ 0x200005
   925                           ;	unspecified, using default values
   926  200005                     	org	2097157
   927  200005  FF                 	db	255
   928                           
   929                           ;Config register IDLOC6 @ 0x200006
   930                           ;	unspecified, using default values
   931  200006                     	org	2097158
   932  200006  FF                 	db	255
   933                           
   934                           ;Config register IDLOC7 @ 0x200007
   935                           ;	unspecified, using default values
   936  200007                     	org	2097159
   937  200007  FF                 	db	255
   938                           
   939                           	psect	config
   940                           
   941                           ;Config register CONFIG1L @ 0x300000
   942                           ;	PLL Prescaler Selection bits
   943                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   944                           ;	System Clock Postscaler Selection bits
   945                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   946                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   947                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   948  300000                     	org	3145728
   949  300000  21                 	db	33
   950                           
   951                           ;Config register CONFIG1H @ 0x300001
   952                           ;	Oscillator Selection bits
   953                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   954                           ;	Fail-Safe Clock Monitor Enable bit
   955                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   956                           ;	Internal/External Oscillator Switchover bit
   957                           ;	IESO = OFF, Oscillator Switchover mode disabled
   958  300001                     	org	3145729
   959  300001  0E                 	db	14
   960                           
   961                           ;Config register CONFIG2L @ 0x300002
   962                           ;	Power-up Timer Enable bit
   963                           ;	PWRT = OFF, PWRT disabled
   964                           ;	Brown-out Reset Enable bits
   965                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   966                           ;	Brown-out Reset Voltage bits
   967                           ;	BORV = 3, Minimum setting 2.05V
   968                           ;	USB Voltage Regulator Enable bit
   969                           ;	VREGEN = OFF, USB voltage regulator disabled
   970  300002                     	org	3145730
   971  300002  19                 	db	25
   972                           
   973                           ;Config register CONFIG2H @ 0x300003
   974                           ;	Watchdog Timer Enable bit
   975                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   976                           ;	Watchdog Timer Postscale Select bits
   977                           ;	WDTPS = 32768, 1:32768
   978  300003                     	org	3145731
   979  300003  1E                 	db	30
   980                           
   981                           ; Padding undefined space
   982  300004                     	org	3145732
   983  300004  FF                 	db	255
   984                           
   985                           ;Config register CONFIG3H @ 0x300005
   986                           ;	CCP2 MUX bit
   987                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   988                           ;	PORTB A/D Enable bit
   989                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   990                           ;	Low-Power Timer 1 Oscillator Enable bit
   991                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   992                           ;	MCLR Pin Enable bit
   993                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   994  300005                     	org	3145733
   995  300005  81                 	db	129
   996                           
   997                           ;Config register CONFIG4L @ 0x300006
   998                           ;	Stack Full/Underflow Reset Enable bit
   999                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1000                           ;	Single-Supply ICSP Enable bit
  1001                           ;	LVP = OFF, Single-Supply ICSP disabled
  1002                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1003                           ;	ICPRT = OFF, ICPORT disabled
  1004                           ;	Extended Instruction Set Enable bit
  1005                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1006                           ;	Background Debugger Enable bit
  1007                           ;	DEBUG = 0x1, unprogrammed default
  1008  300006                     	org	3145734
  1009  300006  81                 	db	129
  1010                           
  1011                           ; Padding undefined space
  1012  300007                     	org	3145735
  1013  300007  FF                 	db	255
  1014                           
  1015                           ;Config register CONFIG5L @ 0x300008
  1016                           ;	Code Protection bit
  1017                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1018                           ;	Code Protection bit
  1019                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1020                           ;	Code Protection bit
  1021                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1022                           ;	Code Protection bit
  1023                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1024  300008                     	org	3145736
  1025  300008  0F                 	db	15
  1026                           
  1027                           ;Config register CONFIG5H @ 0x300009
  1028                           ;	Boot Block Code Protection bit
  1029                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1030                           ;	Data EEPROM Code Protection bit
  1031                           ;	CPD = OFF, Data EEPROM is not code-protected
  1032  300009                     	org	3145737
  1033  300009  C0                 	db	192
  1034                           
  1035                           ;Config register CONFIG6L @ 0x30000A
  1036                           ;	Write Protection bit
  1037                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1038                           ;	Write Protection bit
  1039                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1040                           ;	Write Protection bit
  1041                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1042                           ;	Write Protection bit
  1043                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1044  30000A                     	org	3145738
  1045  30000A  0F                 	db	15
  1046                           
  1047                           ;Config register CONFIG6H @ 0x30000B
  1048                           ;	Configuration Register Write Protection bit
  1049                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1050                           ;	Boot Block Write Protection bit
  1051                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1052                           ;	Data EEPROM Write Protection bit
  1053                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1054  30000B                     	org	3145739
  1055  30000B  E0                 	db	224
  1056                           
  1057                           ;Config register CONFIG7L @ 0x30000C
  1058                           ;	Table Read Protection bit
  1059                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1060                           ;	Table Read Protection bit
  1061                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1062                           ;	Table Read Protection bit
  1063                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1064                           ;	Table Read Protection bit
  1065                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1066  30000C                     	org	3145740
  1067  30000C  0F                 	db	15
  1068                           
  1069                           ;Config register CONFIG7H @ 0x30000D
  1070                           ;	Boot Block Table Read Protection bit
  1071                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1072  30000D                     	org	3145741
  1073  30000D  40                 	db	64
  1074                           tosu	equ	0xFFF
  1075                           tosh	equ	0xFFE
  1076                           tosl	equ	0xFFD
  1077                           stkptr	equ	0xFFC
  1078                           pclatu	equ	0xFFB
  1079                           pclath	equ	0xFFA
  1080                           pcl	equ	0xFF9
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           tblptrl	equ	0xFF6
  1084                           tablat	equ	0xFF5
  1085                           prodh	equ	0xFF4
  1086                           prodl	equ	0xFF3
  1087                           indf0	equ	0xFEF
  1088                           postinc0	equ	0xFEE
  1089                           postdec0	equ	0xFED
  1090                           preinc0	equ	0xFEC
  1091                           plusw0	equ	0xFEB
  1092                           fsr0h	equ	0xFEA
  1093                           fsr0l	equ	0xFE9
  1094                           wreg	equ	0xFE8
  1095                           indf1	equ	0xFE7
  1096                           postinc1	equ	0xFE6
  1097                           postdec1	equ	0xFE5
  1098                           preinc1	equ	0xFE4
  1099                           plusw1	equ	0xFE3
  1100                           fsr1h	equ	0xFE2
  1101                           fsr1l	equ	0xFE1
  1102                           bsr	equ	0xFE0
  1103                           indf2	equ	0xFDF
  1104                           postinc2	equ	0xFDE
  1105                           postdec2	equ	0xFDD
  1106                           preinc2	equ	0xFDC
  1107                           plusw2	equ	0xFDB
  1108                           fsr2h	equ	0xFDA
  1109                           fsr2l	equ	0xFD9
  1110                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Uart_Send_String@info	PTR unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[17]), STR_3(CODE[19]), STR_2(CODE[17]), STR_1(CODE[19]), 


Critical Paths under _main in COMRAM

    _main->_Uart_Init
    _Uart_Send_String->_Uart_Send_Char
    _Uart_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     821
                                             23 COMRAM     2     2      0
                     _Uart_Available
                          _Uart_Init
                          _Uart_Read
                   _Uart_Send_String
 ---------------------------------------------------------------------------------
 (1) _Uart_Send_String                                     2     0      2     364
                                              1 COMRAM     2     0      2
                     _Uart_Send_Char
 ---------------------------------------------------------------------------------
 (2) _Uart_Send_Char                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Uart_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Uart_Init                                           10     6      4     457
                                             13 COMRAM    10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Uart_Available                                       3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Uart_Available
   _Uart_Init
     ___lldiv
   _Uart_Read
   _Uart_Send_String
     _Uart_Send_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      1A       1       27.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      20        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 30 17:24:48 2021

                       l24 0892                         l26 08A4                         l27 08B6  
                       l28 08C8                         l61 0AA0                         l80 0A84  
                       l64 0AA4                         l73 0A5E                         l58 0A28  
                       l67 0AB6                         l76 0A60                         l78 0A6E  
                       l79 0A80                         u10 0AB2                         u11 0AAE  
                       u70 0A6E                         u71 0A6A                         u80 0A7C  
                       u81 0A78    __size_of_Uart_Send_Char 0016                        l136 09BA  
                      l129 09AA                        l821 0A82                        l911 0928  
                      l921 096A                        l913 093E                        l817 0A60  
                      l923 0988                        l915 0946                        l931 09BC  
                      l819 0A7C                        l925 0998                        l917 0952  
                      l909 0918                        l941 0A24                        l933 09C0  
                      l943 0A86                        l927 099A                        l919 0960  
                      l935 09CC                        l775 0AA4                        l951 0A3E  
                      l929 09A4                        l937 09CE                        l777 0AB2  
                      l953 0A42                        l961 0852                        l939 0A20  
                      l947 0A2A                        l971 0894                        l963 0854  
                      l955 084A                        l949 0A2E                        l973 08A6  
                      l981 08DA                        l965 0856                        l957 084E  
                      l991 08EE                        l975 08B8                        l967 086A  
                      l959 0850                        l977 08CA                        l969 0888  
                      u200 0A98                        u201 0A90                        u210 0A5E  
                      u211 0A5A                        u220 0888                        u221 0884  
                      u208 0A9A                        u160 093E                        u161 093A  
                      u170 0960                        u171 095C                        u180 0988  
                      u181 0984                        u195 09F0                        wreg 000FE8  
                     STR_1 0801                       STR_2 0827                       STR_3 0814  
                     STR_4 0838                       _main 084A                       start 0000  
             ___param_bank 000000                      ?_main 0001            __end_of___lldiv 09BC  
                    _RCREG 000FAE                      _RCSTA 000FAB                      _SPBRG 000FAF  
                    _TXREG 000FAD                      _TXSTA 000FAC                      tablat 000FF5  
 __end_of_Uart_Send_String 0A60                      status 000FD8            __initialization 0AB8  
             __end_of_main 0918                     ??_main 0018              __activetblptr 000002  
           _Uart_Available 0A86                     _SPBRGH 000FB0                  ??___lldiv 0009  
                   isa$std 000001             _Uart_Send_Char 0AA2         __size_of_Uart_Init 006E  
       __size_of_Uart_Read 0026               __mediumconst 0000     __end_of_Uart_Available 0AA2  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0060    __end_of__initialization 0ABA              ___rparam_used 000001  
           __pcstackCOMRAM 0001     __end_of_Uart_Send_Char 0AB8            ?_Uart_Available 0001  
        __end_of_Uart_Init 0A2A          __end_of_Uart_Read 0A86            ?_Uart_Send_Char 0001  
                  _BAUDCON 000FB8                Uart_Init@vx 0016          ?_Uart_Send_String 0002  
     Uart_Send_Char@txData 0001         ??_Uart_Send_String 0004                    __Hparam 0000  
                  __Lparam 0000                    ___lldiv 0918               __psmallconst 0800  
                  __pcinit 0AB8                    __ramtop 0800                    _dato_rx 001A  
                  __ptext0 084A                    __ptext1 0A2A                    __ptext2 0AA2  
                  __ptext3 0A60                    __ptext4 09BC                    __ptext5 0918  
                  __ptext6 0A86       end_of_initialization 0ABA              __Lmediumconst 0000  
          ___lldiv@divisor 0005              Uart_Init@baud 000E            ___lldiv@counter 000D  
                _RCSTAbits 000FAB                  _TRISBbits 000F93                  _TRISCbits 000F94  
                _TXSTAbits 000FAC                _BAUDCONbits 000FB8           ??_Uart_Available 0003  
      start_initialization 0AB8           ??_Uart_Send_Char 0001                  _Uart_Init 09BC  
                _Uart_Read 0A60                __pbssCOMRAM 001A                 ?_Uart_Init 000E  
               ?_Uart_Read 0001                   ?___lldiv 0001  __size_of_Uart_Send_String 0036  
              __smallconst 0800                   _LATBbits 000F8A                   _PIR1bits 000F9E  
               _ADCON1bits 000FC1                   __Hrparam 0000                ??_Uart_Init 0012  
              ??_Uart_Read 0001                   __Lrparam 0000           __size_of___lldiv 00A4  
     Uart_Send_String@info 0002              __size_of_main 00CE                   isa$xinst 000000  
         _Uart_Send_String 0A2A           ___lldiv@dividend 0001           ___lldiv@quotient 0009  
  __size_of_Uart_Available 001C  
